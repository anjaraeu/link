{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/@sentry/utils/esm/misc.js","webpack:///./node_modules/@sentry/minimal/esm/index.js","webpack:///./node_modules/@sentry/utils/esm/object.js","webpack:///./node_modules/@sentry/hub/esm/hub.js","webpack:///./node_modules/@sentry/browser/esm/helpers.js","webpack:///./node_modules/@sentry/utils/esm/is.js","webpack:///./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack:///./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack:///./node_modules/@sentry/core/esm/index.js","webpack:///./node_modules/@sentry/browser/esm/tracekit.js","webpack:///./node_modules/@sentry/browser/esm/sdk.js","webpack:///./node_modules/@sentry/browser/esm/parsers.js","webpack:///./node_modules/@sentry/hub/esm/span.js","webpack:///./node_modules/@sentry/hub/esm/scope.js","webpack:///./node_modules/@sentry/utils/esm/error.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/@sentry/browser/esm/version.js","webpack:///./node_modules/@sentry/utils/esm/logger.js","webpack:///./node_modules/@sentry/core/esm/dsn.js","webpack:///./node_modules/@sentry/utils/esm/promisebuffer.js","webpack:///./node_modules/@sentry/browser/esm/transports/base.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/@sentry/core/esm/transports/noop.js","webpack:///./node_modules/@sentry/browser/esm/backend.js","webpack:///./node_modules/@sentry/browser/esm/client.js","webpack:///./node_modules/@sentry/core/esm/api.js","webpack:///./node_modules/@sentry/types/esm/severity.js","webpack:///./node_modules/@sentry/types/esm/status.js","webpack:///./node_modules/@sentry/utils/esm/string.js","webpack:///./node_modules/@sentry/browser/esm/transports/index.js","webpack:///./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack:///./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack:///./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack:///./node_modules/@sentry/browser/esm/integrations/useragent.js","webpack:///./node_modules/@sentry/core/esm/sdk.js","webpack:///./node_modules/@sentry/browser/esm/index.js","webpack:///./node_modules/@sentry/browser/esm/integrations/index.js","webpack:///./node_modules/@sentry/utils/esm/supports.js","webpack:///./node_modules/@sentry/browser/esm/transports/fetch.js","webpack:///./node_modules/@sentry/browser/esm/transports/xhr.js","webpack:///./node_modules/@sentry/core/esm/basebackend.js","webpack:///./node_modules/@sentry/core/esm/integration.js","webpack:///./node_modules/@sentry/core/esm/baseclient.js","webpack:///./node_modules/@sentry/utils/esm/memo.js","webpack:///./resources/js/err.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/@sentry/utils/esm/syncpromise.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__extends","__assign","__read","__spread","extendStatics","b","setPrototypeOf","__proto__","Array","__","this","constructor","assign","arguments","length","apply","iterator","e","ar","next","done","push","error","concat","process","global","dynamicRequire","mod","request","require","getGlobalObject","uuid4","parseUrl","getEventDescription","consoleSandbox","addExceptionTypeValue","fallbackGlobalObject","toString","window","self","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","replace","Math","random","url","match","query","fragment","host","path","protocol","relative","event","message","exception","values","type","event_id","callback","originalConsole","console","wrappedLevels","forEach","level","__sentry__","__sentry_wrapped__","__sentry_original__","result","keys","mechanism","handled","captureException","captureMessage","captureEvent","configureScope","addBreadcrumb","setContext","setExtras","setTags","setExtra","setTag","setUser","withScope","tslib__WEBPACK_IMPORTED_MODULE_0__","_sentry_hub__WEBPACK_IMPORTED_MODULE_1__","callOnHub","method","args","_i","hub","Error","syntheticException","originalException","breadcrumb","context","extras","tags","extra","user","fill","urlEncode","normalizeToSize","normalize","_is__WEBPACK_IMPORTED_MODULE_0__","_memo__WEBPACK_IMPORTED_MODULE_1__","source","replacement","original","wrapped","defineProperties","_Oo","map","encodeURIComponent","join","jsonSize","encodeURI","split","utf8Length","JSON","stringify","depth","maxSize","serialized","normalizeValue","_events","document","Event","getPrototypeOf","Number","isNaN","walk","memo","Infinity","normalized","serializeValue","toJSON","err","stack","objectifyError","acc","isArray","memoize","innerKey","unmemoize","input","parse","_oO","Hub","getCurrentHub","getHubFromCarrier","_sentry_utils__WEBPACK_IMPORTED_MODULE_1__","_sentry_utils__WEBPACK_IMPORTED_MODULE_2__","_scope__WEBPACK_IMPORTED_MODULE_3__","API_VERSION","client","scope","_version","_stack","_invokeClient","_a","top","getStackTop","isOlderThan","version","bindClient","pushScope","getStack","parentScope","undefined","clone","getClient","popScope","pop","getScope","hint","eventId","_lastEventId","lastEventId","getOptions","_b","beforeBreadcrumb","_c","maxBreadcrumbs","timestamp","Date","getTime","mergedBreadcrumb","finalBreadcrumb","min","run","oldHub","makeMain","getIntegration","integration","warn","id","traceHeaders","span","getSpan","sentry-trace","toTraceparent","getMainCarrier","carrier","__SENTRY__","registry","setHubOnCarrier","hasHubOnCarrier","activeDomain","active","registryHubTopStack","shouldIgnoreOnError","wrap","breadcrumbEventHandler","keypressEventHandler","keypressTimeout","lastCapturedEvent","_sentry_core__WEBPACK_IMPORTED_MODULE_1__","_sentry_core__WEBPACK_IMPORTED_MODULE_2__","_sentry_utils__WEBPACK_IMPORTED_MODULE_3__","_sentry_utils__WEBPACK_IMPORTED_MODULE_4__","_sentry_utils__WEBPACK_IMPORTED_MODULE_5__","debounceDuration","ignoreOnError","fn","options","before","sentryWrapped","slice","wrappedArguments","arg","handleEvent","ex","setTimeout","addEventProcessor","processedEvent","debounceTimer","eventName","debounce","captureBreadcrumb","target","_htmlTreeAsString","category","clearTimeout","tagName","isContentEditable","elem","nextStr","currentElem","out","height","len","sepLength","_htmlElementAsString","parentNode","reverse","className","classes","attr","toLowerCase","attrWhitelist","getAttribute","isError","wat","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isRegExp","isThenable","Boolean","then","isSyntheticEvent","originalFunctionToString","FunctionToString","setupOnce","Function","DEFAULT_IGNORE_ERRORS","inboundfilters_InboundFilters","InboundFilters","_options","esm_hub","clientOptions","_mergeOptions","_shouldDropEvent","_isSentryError","logger","misc","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","ignoreErrors","_getPossibleEventMessages","some","pattern","string","blacklistUrls","whitelistUrls","tslib_es6","oO","stacktrace","frames_1","frames","filename","frames_2","integrations_namespaceObject","_subscribe","_installGlobalHandler","_installGlobalUnhandledRejectionHandler","_computeStackTrace","TraceKit","_report","_collectWindowErrors","_linesOfContext","UNKNOWN_FUNCTION","ERROR_TYPES_RE","_has","getLocationHref","location","href","_oldOnerrorHandler","_onErrorHandlerInstalled","handlers","lastException","lastExceptionStack","_notifyHandlers","isWindowError","inner","_traceKitWindowOnError","lineNo","columnNo","errorObj","_augmentStackTraceWithInitialElement","processLastException","line","column","msg","groups","func","_traceKitWindowOnUnhandledRejection","detail","reason","_lastExceptionStack","_lastException","incomplete","handler","onerror","onunhandledrejection","_computeStackTraceFromStackProp","submatch","parts","element","chrome","gecko","winjs","geckoEval","chromeEval","lines","reference","exec","j","isNative","indexOf","columnNumber","stackInfo","initial","unshift","partial","_computeStackTraceByWalkingCallerChain","item","functionName","funcs","recursion","curr","caller","substring","splice","sourceURL","fileName","lineNumber","description","computeStackTrace","opera10Regex","opera11Regex","_computeStackTraceFromStacktraceProp","lineRE1","lineRE2","lineRE3","scripts","getElementsByTagName","inlineScriptBlocks","src","_computeStackTraceFromOperaMultiLineMessage","defaultIntegrations","init","showReportDialog","forceLoad","onLoad","flush","close","_sentry_core__WEBPACK_IMPORTED_MODULE_0__","_client__WEBPACK_IMPORTED_MODULE_3__","_helpers__WEBPACK_IMPORTED_MODULE_4__","_integrations__WEBPACK_IMPORTED_MODULE_5__","_integrations__WEBPACK_IMPORTED_MODULE_6__","_integrations__WEBPACK_IMPORTED_MODULE_7__","_integrations__WEBPACK_IMPORTED_MODULE_8__","_integrations__WEBPACK_IMPORTED_MODULE_9__","timeout","Promise","reject","exceptionFromStacktrace","eventFromPlainObject","eventFromStacktrace","prepareFramesForEvent","_sentry_utils__WEBPACK_IMPORTED_MODULE_0__","_tracekit__WEBPACK_IMPORTED_MODULE_2__","STACKTRACE_LIMIT","exceptionKeys","sort","__serialized__","localStack","firstFrameFunction","lastFrameFunction","includes","frame","colno","function","in_app","lineno","TRACEPARENT_REGEXP","span_Span","Span","_traceId","_spanId","_recorded","_parent","fromTraceparent","traceparent","matches","parent_1","parent","span_id","trace_id","scope_Scope","addGlobalEventProcessor","Scope","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","_notifyScopeListeners","_this","_notifyEventProcessors","processors","index","syncpromise","resolve","processor","is","final","catch","setFingerprint","fingerprint","_fingerprint","setLevel","_level","setTransaction","transaction","_transaction","setSpan","_span","startSpan","newScope","clear","clearBreadcrumbs","_applyFingerprint","applyToEvent","contexts","trace","breadcrumbs","getGlobalEventProcessors","globalEventProcessors","SentryError","_super","_newTarget","g","SDK_NAME","SDK_VERSION","_misc__WEBPACK_IMPORTED_MODULE_0__","PREFIX","Logger","_enabled","disable","enable","log","Dsn","DSN_REGEX","from","_fromString","_fromComponents","_validate","withPassword","pass","port","projectId","str","components","component","parseInt","promisebuffer_PromiseBuffer","PromiseBuffer","_limit","_buffer","isReady","add","task","remove","drain","capturedSetTimeout","all","base_BaseTransport","BaseTransport","api","dsn","getStoreEndpointWithUrlEncodedAuth","sendEvent","_","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","NoopTransport","_sentry_types__WEBPACK_IMPORTED_MODULE_0__","status","Skipped","backend_BrowserBackend","BrowserBackend","_setupTransport","transportOptions","transport","supports","fetch","xhr","eventFromException","parsers","tracekit","_buildEvent","domException","name_1","message_1","eventFromMessage","severity","messageEvent","objectException","synthetic","stringException","Info","attachStacktrace","basebackend","client_BrowserClient","BrowserClient","_prepareEvent","platform","sdk","packages","_isEnabled","getDsn","script","createElement","async","getReportDialogEndpoint","onload","head","body","appendChild","baseclient","API","_dsn__WEBPACK_IMPORTED_MODULE_1__","_dsnObject","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","auth","sentry_key","sentry_version","getRequestHeaders","clientName","clientVersion","header","Content-Type","X-Sentry-Auth","dialogOptions","endpoint","encodedOptions","email","Severity","fromString","Debug","Warning","Fatal","Critical","Log","Status","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","truncate","safeJoin","keysToEventMessage","isMatchingPattern","max","substr","delimiter","output","String","maxLength","includedKeys","test","_base__WEBPACK_IMPORTED_MODULE_0__","_fetch__WEBPACK_IMPORTED_MODULE_1__","_xhr__WEBPACK_IMPORTED_MODULE_2__","TryCatch","_helpers__WEBPACK_IMPORTED_MODULE_2__","_ignoreOnError","_wrapTimeFunction","originalCallback","data","getFunctionName","_wrapRAF","_wrapEventTarget","proto","Breadcrumbs","lastHref","_sentry_types__WEBPACK_IMPORTED_MODULE_3__","_sentry_utils__WEBPACK_IMPORTED_MODULE_6__","_sentry_utils__WEBPACK_IMPORTED_MODULE_7__","_sentry_utils__WEBPACK_IMPORTED_MODULE_8__","_sentry_utils__WEBPACK_IMPORTED_MODULE_9__","_helpers__WEBPACK_IMPORTED_MODULE_10__","dom","history","sentry","_instrumentConsole","originalConsoleLevel","breadcrumbData","_instrumentDOM","addEventListener","innerOriginal","_instrumentFetch","originalFetch","fetchInput","Request","filterUrl","addSentryBreadcrumb","fetchData","response","status_code","_instrumentHistory","captureUrlChange","to","parsedLoc","parsedTo","parsedFrom","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","originalHistoryFunction","_instrumentXHR","xhrproto","XMLHttpRequest","originalOpen","__sentry_xhr__","__sentry_own_request__","originalSend","onreadystatechangeHandler","readyState","prop","wrapProp","onreadystatechange","serializedData","event_1","GlobalHandlers","_helpers__WEBPACK_IMPORTED_MODULE_7__","_parsers__WEBPACK_IMPORTED_MODULE_8__","_tracekit__WEBPACK_IMPORTED_MODULE_9__","stackTraceLimit","_eventFromGlobalHandler","maxValueLength","fallbackValue","fallbackType","LinkedErrors","_parsers__WEBPACK_IMPORTED_MODULE_3__","_tracekit__WEBPACK_IMPORTED_MODULE_4__","DEFAULT_KEY","DEFAULT_LIMIT","_key","limit","_handler","linkedErrors","_walkErrorTree","UserAgent","navigator","headers","userAgent","initAndBind","_sentry_hub__WEBPACK_IMPORTED_MODULE_0__","clientClass","debug","INTEGRATIONS","_sentry_types__WEBPACK_IMPORTED_MODULE_1__","_sentry_types__WEBPACK_IMPORTED_MODULE_2__","_sentry_core__WEBPACK_IMPORTED_MODULE_3__","_sentry_core__WEBPACK_IMPORTED_MODULE_4__","_sentry_core__WEBPACK_IMPORTED_MODULE_5__","_client__WEBPACK_IMPORTED_MODULE_6__","_sdk__WEBPACK_IMPORTED_MODULE_7__","_version__WEBPACK_IMPORTED_MODULE_8__","_sentry_core__WEBPACK_IMPORTED_MODULE_9__","_sentry_utils__WEBPACK_IMPORTED_MODULE_10__","_integrations__WEBPACK_IMPORTED_MODULE_11__","_transports__WEBPACK_IMPORTED_MODULE_12__","windowIntegrations","_window","Sentry","Integrations","_globalhandlers__WEBPACK_IMPORTED_MODULE_0__","_trycatch__WEBPACK_IMPORTED_MODULE_1__","_breadcrumbs__WEBPACK_IMPORTED_MODULE_2__","_linkederrors__WEBPACK_IMPORTED_MODULE_3__","_useragent__WEBPACK_IMPORTED_MODULE_4__","supportsFetch","supportsNativeFetch","supportsReferrerPolicy","supportsHistory","Headers","Response","referrerPolicy","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","FetchTransport","_base__WEBPACK_IMPORTED_MODULE_4__","defaultOptions","XHRTransport","open","send","BaseBackend","_transports_noop__WEBPACK_IMPORTED_MODULE_2__","_transport","_exception","_hint","_message","getTransport","installedIntegrations","setupIntegrations","integrations","userIntegrations","userIntegrationsNames_1","pickedIntegrationsNames_1","defaultIntegration","userIntegration","getIntegrationsToSetup","esm_scope","setupIntegration","baseclient_BaseClient","BaseClient","backendClass","_processing","_backend","_dsn","_integrations","_getBackend","_processEvent","finalEvent","_isClientProcessing","clientReady","_processingInterval","clearInterval","transportFlushed","enabled","getIntegrations","ticked","setInterval","environment","release","dist","prepared","_addIntegrations","sdkInfo","integrationsArray","beforeSend","sampleRate","beforeSendResult","_handleAsyncBeforeSend","Memo","_hasWeakSet","WeakSet","_inner","obj","has","delete","_sentry_browser__WEBPACK_IMPORTED_MODULE_0__","_sentry_browser__WEBPACK_IMPORTED_MODULE_1__","originalModule","webpackPolyfill","children","SyncPromise","States","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","REJECTED","state","_value","_executeHandlers","h","onFail","onSuccess","_attachHandler","onfulfilled","onrejected","val"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,IAIAlC,IAAAmC,EAAA,mCClFAnC,EAAAU,EAAA0B,EAAA,sBAAAC,IAAArC,EAAAU,EAAA0B,EAAA,sBAAAE,IAAAtC,EAAAU,EAAA0B,EAAA,sBAAAG,IAAAvC,EAAAU,EAAA0B,EAAA,sBAAAI,IAgBA,IAAAC,EAAA,SAAA/B,EAAAgC,GAIA,OAHAD,EAAA3B,OAAA6B,gBACA,CAAUC,UAAA,cAAgBC,OAAA,SAAAnC,EAAAgC,GAAsChC,EAAAkC,UAAAF,IAChE,SAAAhC,EAAAgC,GAAyB,QAAAR,KAAAQ,IAAAT,eAAAC,KAAAxB,EAAAwB,GAAAQ,EAAAR,MACzBxB,EAAAgC,IAGO,SAAAL,EAAA3B,EAAAgC,GAEP,SAAAI,IAAmBC,KAAAC,YAAAtC,EADnB+B,EAAA/B,EAAAgC,GAEAhC,EAAAsB,UAAA,OAAAU,EAAA5B,OAAAY,OAAAgB,IAAAI,EAAAd,UAAAU,EAAAV,UAAA,IAAAc,GAGO,IAAAR,EAAA,WAQP,OAPAA,EAAAxB,OAAAmC,QAAA,SAAA3B,GACA,QAAAa,EAAA/B,EAAA,EAAAyB,EAAAqB,UAAAC,OAAgD/C,EAAAyB,EAAOzB,IAEvD,QAAA8B,KADAC,EAAAe,UAAA9C,GACAU,OAAAkB,UAAAC,eAAA1B,KAAA4B,EAAAD,KAAAZ,EAAAY,GAAAC,EAAAD,IAEA,OAAAZ,IAEA8B,MAAAL,KAAAG,YAkFO,SAAAX,EAAA1B,EAAAgB,GACP,IAAArB,EAAA,mBAAAW,QAAAN,EAAAM,OAAAkC,UACA,IAAA7C,EAAA,OAAAK,EACA,IAAAK,EAAAoC,EAAAlD,EAAAI,EAAAD,KAAAM,GAAA0C,EAAA,GACA,IACA,eAAA1B,QAAA,MAAAX,EAAAd,EAAAoD,QAAAC,MAAAF,EAAAG,KAAAxC,EAAAG,OAEA,MAAAsC,GAAmBL,EAAA,CAAMK,SACzB,QACA,IACAzC,MAAAuC,OAAAjD,EAAAJ,EAAA,SAAAI,EAAAD,KAAAH,GAEA,QAAiB,GAAAkD,EAAA,MAAAA,EAAAK,OAEjB,OAAAJ,EAGO,SAAAf,IACP,QAAAe,EAAA,GAAAnD,EAAA,EAA4BA,EAAA8C,UAAAC,OAAsB/C,IAClDmD,IAAAK,OAAArB,EAAAW,UAAA9C,KACA,OAAAmD,kCC3IA,SAAAM,EAAAC,GAKO,SAAAC,EAAAC,EAAAC,GAEP,OAAAD,EAAAE,QAAAD,GAPAjE,EAAAU,EAAA0B,EAAA,sBAAA2B,IAAA/D,EAAAU,EAAA0B,EAAA,sBAAA+B,IAAAnE,EAAAU,EAAA0B,EAAA,sBAAAgC,IAAApE,EAAAU,EAAA0B,EAAA,sBAAAiC,IAAArE,EAAAU,EAAA0B,EAAA,sBAAAkC,IAAAtE,EAAAU,EAAA0B,EAAA,sBAAAmC,IAAAvE,EAAAU,EAAA0B,EAAA,sBAAAoC,IAkBA,IAAAC,EAAA,GAMO,SAAAN,IACP,MATA,qBAAArD,OAAAkB,UAAA0C,SAAAnE,UAAA,IAAAsD,IAAA,GAUAC,EACA,oBAAAa,OACAA,OACA,oBAAAC,KACAA,KACAH,EAOO,SAAAL,IACP,IAAAN,EAAAK,IACAU,EAAAf,EAAAe,QAAAf,EAAAgB,SACA,YAAAD,KAAAE,gBAAA,CAEA,IAAAC,EAAA,IAAAC,YAAA,GACAJ,EAAAE,gBAAAC,GAGAA,EAAA,QAAAA,EAAA,SAGAA,EAAA,SAAAA,EAAA,SACA,IAAAE,EAAA,SAAAC,GAEA,IADA,IAAAC,EAAAD,EAAAT,SAAA,IACAU,EAAAjC,OAAA,GACAiC,EAAA,IAAAA,EAEA,OAAAA,GAEA,OAAAF,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAAAE,EAAAF,EAAA,IAGA,yCAAAK,QAAA,iBAAA5E,GAEA,IAAAS,EAAA,GAAAoE,KAAAC,SAAA,EAGA,OADA,MAAA9E,EAAAS,EAAA,EAAAA,EAAA,GACAwD,SAAA,MAUO,SAAAL,EAAAmB,GACP,IAAAA,EACA,SAEA,IAAAC,EAAAD,EAAAC,MAAA,kEACA,IAAAA,EACA,SAGA,IAAAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACA,OACAG,KAAAH,EAAA,GACAI,KAAAJ,EAAA,GACAK,SAAAL,EAAA,GACAM,SAAAN,EAAA,GAAAC,EAAAC,GAOO,SAAArB,EAAA0B,GACP,GAAAA,EAAAC,QACA,OAAAD,EAAAC,QAEA,GAAAD,EAAAE,WAAAF,EAAAE,UAAAC,QAAAH,EAAAE,UAAAC,OAAA,IACA,IAAAD,EAAAF,EAAAE,UAAAC,OAAA,GACA,OAAAD,EAAAE,MAAAF,EAAA7E,MACA6E,EAAAE,KAAA,KAAAF,EAAA7E,MAEA6E,EAAAE,MAAAF,EAAA7E,OAAA2E,EAAAK,UAAA,YAEA,OAAAL,EAAAK,UAAA,YAGO,SAAA9B,EAAA+B,GACP,IAAAxC,EAAAK,IAEA,iBAAAL,GACA,OAAAwC,IAEA,IAAAC,EAAAzC,EAAA0C,QACAC,EAAA,GALA,+CAOAC,QAAA,SAAAC,GACAA,KAAA7C,EAAA0C,SAAAD,EAAAI,GAAAC,aACAH,EAAAE,GAAAJ,EAAAI,GAAAE,mBACAN,EAAAI,GAAAJ,EAAAI,GAAAG,uBAIA,IAAAC,EAAAT,IAKA,OAHAxF,OAAAkG,KAAAP,GAAAC,QAAA,SAAAC,GACAJ,EAAAI,GAAAF,EAAAE,KAEAI,EAUO,SAAAvC,EAAAwB,EAAA3E,EAAA+E,EAAAa,QACP,IAAAA,IAA+BA,EAAA,CAC/BC,SAAA,EACAd,KAAA,YAEAJ,EAAAE,UAAAF,EAAAE,WAAA,GACAF,EAAAE,UAAAC,OAAAH,EAAAE,UAAAC,QAAA,GACAH,EAAAE,UAAAC,OAAA,GAAAH,EAAAE,UAAAC,OAAA,OACAH,EAAAE,UAAAC,OAAA,GAAA9E,MAAA2E,EAAAE,UAAAC,OAAA,GAAA9E,UAAA,GACA2E,EAAAE,UAAAC,OAAA,GAAAC,KAAAJ,EAAAE,UAAAC,OAAA,GAAAC,SAAA,QACAJ,EAAAE,UAAAC,OAAA,GAAAc,UAAAjB,EAAAE,UAAAC,OAAA,GAAAc,qECzJAjH,EAAAU,EAAA0B,EAAA,sBAAA+E,IAAAnH,EAAAU,EAAA0B,EAAA,sBAAAgF,IAAApH,EAAAU,EAAA0B,EAAA,sBAAAiF,IAAArH,EAAAU,EAAA0B,EAAA,sBAAAkF,IAAAtH,EAAAU,EAAA0B,EAAA,sBAAAmF,IAAAvH,EAAAU,EAAA0B,EAAA,sBAAAoF,IAAAxH,EAAAU,EAAA0B,EAAA,sBAAAqF,IAAAzH,EAAAU,EAAA0B,EAAA,sBAAAsF,IAAA1H,EAAAU,EAAA0B,EAAA,sBAAAuF,IAAA3H,EAAAU,EAAA0B,EAAA,sBAAAwF,IAAA5H,EAAAU,EAAA0B,EAAA,sBAAAyF,IAAA7H,EAAAU,EAAA0B,EAAA,sBAAA0F,IAAA,IAAAC,EAAA/H,EAAA,GAAAgI,EAAAhI,EAAA,GAOA,SAAAiI,EAAAC,GAEA,IADA,IAAAC,EAAA,GACAC,EAAA,EAAoBA,EAAAlF,UAAAC,OAAuBiF,IAC3CD,EAAAC,EAAA,GAAAlF,UAAAkF,GAEA,IAAAC,EAAcvH,OAAAkH,EAAA,EAAAlH,GACd,GAAAuH,KAAAH,GAEA,OAAAG,EAAAH,GAAA9E,MAAAiF,EAAsCN,EAAA,EAAgBI,IAEtD,UAAAG,MAAA,qBAAAJ,EAAA,wDAQO,SAAAf,EAAAjB,GACP,IAAAqC,EACA,IACA,UAAAD,MAAA,6BAEA,MAAApC,GACAqC,EAAArC,EAEA,OAAA+B,EAAA,mBAAA/B,EAAA,CACAsC,kBAAAtC,EACAqC,uBAUO,SAAAnB,EAAAnB,EAAAU,GACP,IAAA4B,EACA,IACA,UAAAD,MAAArC,GAEA,MAAAC,GACAqC,EAAArC,EAEA,OAAA+B,EAAA,iBAAAhC,EAAAU,EAAA,CACA6B,kBAAAvC,EACAsC,uBASO,SAAAlB,EAAArB,GACP,OAAAiC,EAAA,eAAAjC,GAMO,SAAAsB,EAAAhB,GACP2B,EAAA,iBAAA3B,GAUO,SAAAiB,EAAAkB,GACPR,EAAA,gBAAAQ,GAOO,SAAAjB,EAAA7G,EAAA+H,GACPT,EAAA,aAAAtH,EAAA+H,GAMO,SAAAjB,EAAAkB,GACPV,EAAA,YAAAU,GAMO,SAAAjB,EAAAkB,GACPX,EAAA,UAAAW,GAOO,SAAAjB,EAAAhG,EAAAkH,GACPZ,EAAA,WAAAtG,EAAAkH,GAOO,SAAAjB,EAAAjG,EAAAN,GACP4G,EAAA,SAAAtG,EAAAN,GAOO,SAAAwG,EAAAiB,GACPb,EAAA,UAAAa,GAeO,SAAAhB,EAAAxB,GACP2B,EAAA,YAAA3B,mCCjJA,SAAAxC,GAAA9D,EAAAU,EAAA0B,EAAA,sBAAA2G,IAAA/I,EAAAU,EAAA0B,EAAA,sBAAA4G,IAAAhJ,EAAAU,EAAA0B,EAAA,sBAAA6G,IAAAjJ,EAAAU,EAAA0B,EAAA,sBAAA8G,IAAA,IAAAC,EAAAnJ,EAAA,GAAAoJ,EAAApJ,EAAA,IAUO,SAAA+I,EAAAM,EAAA1I,EAAA2I,GACP,GAAA3I,KAAA0I,EAAA,CAGA,IAAAE,EAAAF,EAAA1I,GACA6I,EAAAF,EAAAC,GAIA,sBAAAC,EACA,IACAA,EAAAxH,UAAAwH,EAAAxH,WAAA,GACAlB,OAAA2I,iBAAAD,EAAA,CACA5C,WAAA,CACA5F,YAAA,EACAK,OAAA,GAEAyF,oBAAA,CACA9F,YAAA,EACAK,MAAAkI,GAEA1C,mBAAA,CACA7F,YAAA,EACAK,MAAAmI,KAIA,MAAAE,IAKAL,EAAA1I,GAAA6I,GAQO,SAAAR,EAAAlH,GACP,OAAAhB,OAAAkG,KAAAlF,GACA6H,IAEA,SAAAhI,GAAoB,OAAAiI,mBAAAjI,GAAA,IAAAiI,mBAAA9H,EAAAH,MACpBkI,KAAA,KA+BA,SAAAC,EAAAzI,GACA,OANA,SAAAA,GAEA,QAAA0I,UAAA1I,GAAA2I,MAAA,SAAA7G,OAIA8G,CAAAC,KAAAC,UAAA9I,IAGO,SAAA4H,EAAAnH,EAEPsI,EAEAC,QACA,IAAAD,IAA2BA,EAAA,QAC3B,IAAAC,IAA6BA,EAAA,QAC7B,IAAAC,EAAApB,EAAApH,EAAAsI,GACA,OAAAN,EAAAQ,GAAAD,EACApB,EAAAnH,EAAAsI,EAAA,EAAAC,GAEAC,EA2BA,SAAAC,EAAAlJ,EAAAM,GACA,iBAAAA,GAAA,iBAAAN,KAAAmJ,QACA,WAEA,kBAAA7I,EACA,uBAEA,IAAAmC,GAAAzC,IAAAyC,EACA,WAEA,oBAAAa,QAAAtD,IAAAsD,OACA,WAEA,oBAAA8F,UAAApJ,IAAAoJ,SACA,aAGA,oBAAAC,OAAArJ,aAAAqJ,MACA5J,OAAA6J,eAAAtJ,KAAA2B,YAAArC,KAAA,QAGQG,OAAAqI,EAAA,EAAArI,CAAgBO,GACxB,mBAEAuJ,OAAAC,MAAAxJ,GACA,aAEA,IAAAA,EACA,cAEA,mBAAAA,EACA,eAAAA,EAAAV,MAAA,+BAEAU,EAUO,SAAAyJ,EAAAnJ,EAAAN,EAAA+I,EAAAW,GAIP,QAHA,IAAAX,IAA2BA,EAAAY,UAC3B,IAAAD,IAA0BA,EAAA,IAAY3B,EAAA,GAEtC,IAAAgB,EACA,OAxEA,SAAA/I,GACA,IAAA+E,EAAAtF,OAAAkB,UAAA0C,SAAAnE,KAAAc,GAEA,oBAAAA,EACA,OAAAA,EAEA,uBAAA+E,EACA,iBAEA,sBAAAA,EACA,gBAEA,IAAA6E,EAAAV,EAAAlJ,GACA,OAAWP,OAAAqI,EAAA,EAAArI,CAAWmK,KAAA7E,EA2DtB8E,CAAA7J,GAIA,GAAAA,SAAA,mBAAAA,EAAA8J,OACA,OAAA9J,EAAA8J,SAIA,IAAAF,EAAAV,EAAAlJ,EAAAM,GACA,GAAQb,OAAAqI,EAAA,EAAArI,CAAWmK,GACnB,OAAAA,EAGA,IAAA5B,EAAkBvI,OAAAqI,EAAA,EAAArI,CAAOO,GA5HzB,SAAAsC,GAEA,IAAAyH,EAAA,CACAnF,QAAAtC,EAAAsC,QACAtF,KAAAgD,EAAAhD,KACA0K,MAAA1H,EAAA0H,OAEA,QAAAjL,KAAAuD,EACA7C,OAAAkB,UAAAC,eAAA1B,KAAAoD,EAAAvD,KACAgL,EAAAhL,GAAAuD,EAAAvD,IAGA,OAAAgL,EAgHyBE,CAAAjK,KAEzBkK,EAAA1I,MAAA2I,QAAAnK,GAAA,MAEA,GAAA0J,EAAAU,QAAApK,GACA,qBAGA,QAAAqK,KAAArC,EAEAvI,OAAAkB,UAAAC,eAAA1B,KAAA8I,EAAAqC,KAIAH,EAAAG,GAAAZ,EAAAY,EAAArC,EAAAqC,GAAAtB,EAAA,EAAAW,IAKA,OAFAA,EAAAY,UAAAtK,GAEAkK,EAcO,SAAArC,EAAA0C,EAAAxB,GACP,IAEA,OAAAF,KAAA2B,MAAA3B,KAAAC,UAAAyB,EAAA,SAAAjK,EAAAN,GAAuE,OAAAyJ,EAAAnJ,EAAAN,EAAA+I,MAEvE,MAAA0B,GACA,kFCrOA,SAAA3L,GAAAH,EAAAU,EAAA0B,EAAA,sBAAA2J,IAAA/L,EAAAU,EAAA0B,EAAA,sBAAA4J,IAAAhM,EAAAU,EAAA0B,EAAA,sBAAA6J,IAAA,IAAAlE,EAAA/H,EAAA,GAAAkM,EAAAlM,EAAA,GAAAmM,EAAAnM,EAAA,IAAAoM,EAAApM,EAAA,IAWOqM,EAAA,EAcPN,EAAA,WASA,SAAAA,EAAAO,EAAAC,EAAAC,QACA,IAAAD,IAA+BA,EAAA,IAAaH,EAAA,QAC5C,IAAAI,IAAkCA,EAAAH,GAClCtJ,KAAAyJ,WAEAzJ,KAAA0J,OAAA,GACA1J,KAAA0J,OAAA/I,KAAA,CAA0B4I,SAAAC,UAsP1B,OA9OAR,EAAA/J,UAAA0K,cAAA,SAAAxE,GAGA,IAFA,IAAAyE,EACAxE,EAAA,GACAC,EAAA,EAAwBA,EAAAlF,UAAAC,OAAuBiF,IAC/CD,EAAAC,EAAA,GAAAlF,UAAAkF,GAEA,IAAAwE,EAAA7J,KAAA8J,cACAD,KAAAN,QAAAM,EAAAN,OAAApE,KACAyE,EAAAC,EAAAN,QAAApE,GAAA9E,MAAAuJ,EAAgD5E,EAAA,EAAgBI,EAAA,CAAAyE,EAAAL,UAMhER,EAAA/J,UAAA8K,YAAA,SAAAC,GACA,OAAAhK,KAAAyJ,SAAAO,GAKAhB,EAAA/J,UAAAgL,WAAA,SAAAV,GACAvJ,KAAA8J,cACAP,UAKAP,EAAA/J,UAAAiL,UAAA,WAEA,IAAA5B,EAAAtI,KAAAmK,WACAC,EAAA9B,EAAAlI,OAAA,EAAAkI,IAAAlI,OAAA,GAAAoJ,WAAAa,EACAb,EAAoBH,EAAA,EAAKiB,MAAAF,GAKzB,OAJApK,KAAAmK,WAAAxJ,KAAA,CACA4I,OAAAvJ,KAAAuK,YACAf,UAEAA,GAKAR,EAAA/J,UAAAuL,SAAA,WACA,YAAAH,IAAArK,KAAAmK,WAAAM,OAKAzB,EAAA/J,UAAA8F,UAAA,SAAAxB,GACA,IAAAiG,EAAAxJ,KAAAkK,YACA,IACA3G,EAAAiG,GAEA,QACAxJ,KAAAwK,aAMAxB,EAAA/J,UAAAsL,UAAA,WACA,OAAAvK,KAAA8J,cAAAP,QAGAP,EAAA/J,UAAAyL,SAAA,WACA,OAAA1K,KAAA8J,cAAAN,OAGAR,EAAA/J,UAAAkL,SAAA,WACA,OAAAnK,KAAA0J,QAGAV,EAAA/J,UAAA6K,YAAA,WACA,OAAA9J,KAAA0J,OAAA1J,KAAA0J,OAAAtJ,OAAA,IAKA4I,EAAA/J,UAAAmF,iBAAA,SAAAjB,EAAAwH,GACA,IAAAC,EAAA5K,KAAA6K,aAA2C9M,OAAAoL,EAAA,EAAApL,GAE3C,OADAiC,KAAA2J,cAAA,mBAAAxG,EAA0D6B,EAAA,EAAgB,GAAG2F,EAAA,CAASrH,SAAAsH,KACtFA,GAKA5B,EAAA/J,UAAAoF,eAAA,SAAAnB,EAAAU,EAAA+G,GACA,IAAAC,EAAA5K,KAAA6K,aAA2C9M,OAAAoL,EAAA,EAAApL,GAE3C,OADAiC,KAAA2J,cAAA,iBAAAzG,EAAAU,EAA6DoB,EAAA,EAAgB,GAAG2F,EAAA,CAASrH,SAAAsH,KACzFA,GAKA5B,EAAA/J,UAAAqF,aAAA,SAAArB,EAAA0H,GACA,IAAAC,EAAA5K,KAAA6K,aAA2C9M,OAAAoL,EAAA,EAAApL,GAE3C,OADAiC,KAAA2J,cAAA,eAAA1G,EAAkD+B,EAAA,EAAgB,GAAG2F,EAAA,CAASrH,SAAAsH,KAC9EA,GAKA5B,EAAA/J,UAAA6L,YAAA,WACA,OAAA9K,KAAA6K,cAKA7B,EAAA/J,UAAAuF,cAAA,SAAAkB,EAAAiF,GACA,IAAAd,EAAA7J,KAAA8J,cACA,GAAAD,EAAAL,OAAAK,EAAAN,OAAA,CAGA,IAAAK,EAAAC,EAAAN,OAAAwB,YAAAlB,EAAAN,OAAAwB,cAAA,GAAyEC,EAAApB,EAAAqB,wBAAA,IAAAD,EAAA,KAAAA,EAAAE,EAAAtB,EAAAuB,sBAAA,IAAAD,EAhJzE,GAgJyEA,EACzE,KAAAC,GAAA,IAGA,IAAAC,GAAA,IAAAC,MAAAC,UAAA,IACAC,EAA+BvG,EAAA,EAAgB,CAAEoG,aAAuB1F,GACxE8F,EAAAP,EACclN,OAAAoL,EAAA,EAAApL,CAAc,WAAc,OAAAkN,EAAAM,EAAAZ,KAC1CY,EACA,OAAAC,GAGA3B,EAAAL,MAAAhF,cAAAgH,EAAAjJ,KAAAkJ,IAAAN,EAvJA,SA4JAnC,EAAA/J,UAAA6F,QAAA,SAAAiB,GACA,IAAA8D,EAAA7J,KAAA8J,cACAD,EAAAL,OAGAK,EAAAL,MAAA1E,QAAAiB,IAKAiD,EAAA/J,UAAA0F,QAAA,SAAAkB,GACA,IAAAgE,EAAA7J,KAAA8J,cACAD,EAAAL,OAGAK,EAAAL,MAAA7E,QAAAkB,IAKAmD,EAAA/J,UAAAyF,UAAA,SAAAkB,GACA,IAAAiE,EAAA7J,KAAA8J,cACAD,EAAAL,OAGAK,EAAAL,MAAA9E,UAAAkB,IAKAoD,EAAA/J,UAAA4F,OAAA,SAAAjG,EAAAN,GACA,IAAAuL,EAAA7J,KAAA8J,cACAD,EAAAL,OAGAK,EAAAL,MAAA3E,OAAAjG,EAAAN,IAKA0K,EAAA/J,UAAA2F,SAAA,SAAAhG,EAAAkH,GACA,IAAA+D,EAAA7J,KAAA8J,cACAD,EAAAL,OAGAK,EAAAL,MAAA5E,SAAAhG,EAAAkH,IAKAkD,EAAA/J,UAAAwF,WAAA,SAAA7G,EAAA+H,GACA,IAAAkE,EAAA7J,KAAA8J,cACAD,EAAAL,OAGAK,EAAAL,MAAA/E,WAAA7G,EAAA+H,IAKAqD,EAAA/J,UAAAsF,eAAA,SAAAhB,GACA,IAAAsG,EAAA7J,KAAA8J,cACAD,EAAAL,OAAAK,EAAAN,QACAhG,EAAAsG,EAAAL,QAMAR,EAAA/J,UAAAyM,IAAA,SAAAnI,GACA,IAAAoI,EAAAC,EAAA5L,MACA,IACAuD,EAAAvD,MAEA,QACA4L,EAAAD,KAMA3C,EAAA/J,UAAA4M,eAAA,SAAAC,GACA,IAAAvC,EAAAvJ,KAAAuK,YACA,IAAAhB,EACA,YAEA,IACA,OAAAA,EAAAsC,eAAAC,GAEA,MAAA/C,GAEA,OADYK,EAAA,EAAM2C,KAAA,+BAAAD,EAAAE,GAAA,yBAClB,OAMAhD,EAAA/J,UAAAgN,aAAA,WACA,IAAApC,EAAA7J,KAAA8J,cACA,GAAAD,EAAAL,OAAAK,EAAAN,OAAA,CACA,IAAA2C,EAAArC,EAAAL,MAAA2C,UACA,GAAAD,EACA,OACAE,eAAAF,EAAAG,iBAIA,UAEArD,EArQA,GAyQO,SAAAsD,IACP,IAAAC,EAAkBxO,OAAAoL,EAAA,EAAApL,GAIlB,OAHAwO,EAAAC,WAAAD,EAAAC,YAAA,CACAlH,SAAA+E,GAEAkC,EAOO,SAAAX,EAAAtG,GACP,IAAAmH,EAAAH,IACAX,EAAAzC,EAAAuD,GAEA,OADAC,EAAAD,EAAAnH,GACAqG,EASO,SAAA1C,IAEP,IAAAwD,EAAAH,IAEAK,EAAAF,KAAAvD,EAAAuD,GAAA1C,YAAAT,IACAoD,EAAAD,EAAA,IAAAzD,GAGA,IAIA,IACA4D,EADqB7O,OAAAoL,EAAA,EAAApL,CAAcX,EAAA,UACnCyP,OAEA,IAAAD,EACA,OAAA1D,EAAAuD,GAGA,IAAAE,EAAAC,IAAA1D,EAAA0D,GAAA7C,YAAAT,GAAA,CACA,IAAAwD,EAAA5D,EAAAuD,GAAA3C,cACA4C,EAAAE,EAAA,IAAA5D,EAAA8D,EAAAvD,OAA8EF,EAAA,EAAKiB,MAAAwC,EAAAtD,SAGnF,OAAAN,EAAA0D,GAEA,MAAAjG,GAEA,OAAAuC,EAAAuD,IAOA,SAAAE,EAAAJ,GACA,SAAAA,KAAAC,YAAAD,EAAAC,WAAAlH,KAWO,SAAA4D,EAAAqD,GACP,OAAAA,KAAAC,YAAAD,EAAAC,WAAAlH,IACAiH,EAAAC,WAAAlH,KAEAiH,EAAAC,WAAAD,EAAAC,YAAA,GACAD,EAAAC,WAAAlH,IAAA,IAAA0D,EACAuD,EAAAC,WAAAlH,KAOO,SAAAoH,EAAAH,EAAAjH,GACP,QAAAiH,IAGAA,EAAAC,WAAAD,EAAAC,YAAA,GACAD,EAAAC,WAAAlH,OACA,wDC7XArI,EAAAU,EAAA0B,EAAA,sBAAA0N,IAAA9P,EAAAU,EAAA0B,EAAA,sBAAA2N,IAAA/P,EAAAU,EAAA0B,EAAA,sBAAA4N,IAAAhQ,EAAAU,EAAA0B,EAAA,sBAAA6N,IAAA,IAIAC,EACAC,EALApI,EAAA/H,EAAA,GAAAoQ,EAAApQ,EAAA,GAAAqQ,EAAArQ,EAAA,GAAAsQ,EAAAtQ,EAAA,GAAAuQ,EAAAvQ,EAAA,GAAAwQ,EAAAxQ,EAAA,GAGAyQ,EAAA,IAGAC,EAAA,EAIO,SAAAZ,IACP,OAAAY,EAAA,EAoBO,SAAAX,EAAAY,EAAAC,EAAAC,GAGP,QAFA,IAAAD,IAA6BA,EAAA,IAE7B,mBAAAD,EACA,OAAAA,EAEA,IAEA,GAAAA,EAAA/J,WACA,OAAA+J,EAGA,GAAAA,EAAA9J,mBACA,OAAA8J,EAAA9J,mBAGA,MAAAvD,GAIA,OAAAqN,EAEA,IAAAG,EAAA,WAEAD,GAAA,mBAAAA,GACAA,EAAAzN,MAAAL,KAAAG,WAEA,IAAAiF,EAAAtF,MAAAb,UAAA+O,MAAAxQ,KAAA2C,WAEA,IAKA,IAAA8N,EAAA7I,EAAAwB,IAAA,SAAAsH,GAA4D,OAAAlB,EAAAkB,EAAAL,KAC5D,OAAAD,EAAAO,YACAP,EAAAO,YAAA9N,MAAAL,KAAAiO,GAEAL,EAAAvN,MAAAL,KAAAiO,GAGA,MAAAG,GAaA,MAnEAT,GAAA,EACAU,WAAA,WACAV,GAAA,IAsDY5P,OAAAsP,EAAA,EAAAtP,CAAS,SAAAyL,GACrBA,EAAA8E,kBAAA,SAAArL,GACA,IAAAsL,EAAyCvJ,EAAA,EAAgB,GAAG/B,GAK5D,OAJA4K,EAAA3J,WACwBnG,OAAAwP,EAAA,EAAAxP,CAAqBwQ,OAAAlE,SAAAwD,EAAA3J,WAE7CqK,EAAAzI,MAA2Cd,EAAA,EAAgB,GAAGuJ,EAAAzI,MAAA,CAAyB3F,UAAYpC,OAAAyP,EAAA,EAAAzP,CAASqH,EAAA,KAC5GmJ,IAEgBxQ,OAAAsP,EAAA,EAAAtP,CAAgBqQ,KAEhCA,IAKA,IACA,QAAApP,KAAA4O,EACA7P,OAAAkB,UAAAC,eAAA1B,KAAAoQ,EAAA5O,KACA+O,EAAA/O,GAAA4O,EAAA5O,IAIA,MAAA+J,IACA6E,EAAA3O,UAAA2O,EAAA3O,WAAA,GACA8O,EAAA9O,UAAA2O,EAAA3O,UACAlB,OAAAC,eAAA4P,EAAA,sBACA3P,YAAA,EACAK,MAAAyP,IAIAhQ,OAAA2I,iBAAAqH,EAAA,CACAlK,WAAA,CACA5F,YAAA,EACAK,OAAA,GAEAyF,oBAAA,CACA9F,YAAA,EACAK,MAAAsP,KAIA,IACA7P,OAAAC,eAAA+P,EAAA,QACA7P,IAAA,WACA,OAAA0P,EAAAhQ,QAIA,MAAAmL,IAGA,OAAAgF,EAEA,IAAAS,EAAA,EAOO,SAAAvB,EAAAwB,EAAAC,GAEP,YADA,IAAAA,IAA8BA,GAAA,GAC9B,SAAAzL,GAQA,GAJAkK,OAAA9C,EAIApH,GAAAmK,IAAAnK,EAAA,CAGAmK,EAAAnK,EACA,IAAA0L,EAAA,WAKA,IAAAC,EACA,IACAA,EAAA3L,EAAA2L,OAAAC,EAAA5L,EAAA2L,QAAAC,EAAA5L,GAEA,MAAA1C,GACAqO,EAAA,YAEA,IAAAA,EAAAxO,QAGYrC,OAAAuP,EAAA,EAAAvP,GAAayG,cAAA,CACzBsK,SAAA,MAAAL,EACAvL,QAAA0L,GACa,CACb3L,QACArF,KAAA6Q,KAGAD,GACAO,aAAAP,GAEAE,EACAF,EAAAH,WAAAM,GAGAA,MASO,SAAAzB,IAIP,gBAAAjK,GACA,IAAA2L,EACA,IACAA,EAAA3L,EAAA2L,OAEA,MAAArO,GAGA,OAEA,IAAAyO,EAAAJ,KAAAI,QAIAA,IAAA,UAAAA,GAAA,aAAAA,GAAAJ,EAAAK,qBAKA9B,GACAF,EAAA,QAAAA,CAAAhK,GAEA8L,aAAA5B,GACAA,EAAAkB,WAAA,WACAlB,OAAA9C,GACSqD,KAST,SAAAmB,EAAAK,GAUA,IATA,IAQAC,EARAC,EAAAF,EAGAG,EAAA,GACAC,EAAA,EACAC,EAAA,EAEAC,EADA,MACApP,OAEAgP,GAAAE,IARA,KAcA,UALAH,EAAAM,EAAAL,KAKAE,EAAA,GAAAC,EAAAF,EAAAjP,OAAAoP,EAAAL,EAAA/O,QAbA,KAgBAiP,EAAA1O,KAAAwO,GACAI,GAAAJ,EAAA/O,OACAgP,IAAAM,WAEA,OAAAL,EAAAM,UAAA7I,KAhBA,OAuBA,SAAA2I,EAAAP,GACA,IACAU,EACAC,EACAjR,EACAkR,EACAzS,EALAgS,EAAA,GAMA,IAAAH,MAAAF,QACA,SAOA,GALAK,EAAA1O,KAAAuO,EAAAF,QAAAe,eACAb,EAAAlD,IACAqD,EAAA1O,KAAA,IAAAuO,EAAAlD,KAEA4D,EAAAV,EAAAU,YACqB7R,OAAA0P,EAAA,EAAA1P,CAAQ6R,GAE7B,IADAC,EAAAD,EAAA3I,MAAA,OACA5J,EAAA,EAAmBA,EAAAwS,EAAAzP,OAAoB/C,IACvCgS,EAAA1O,KAAA,IAAAkP,EAAAxS,IAGA,IAAA2S,EAAA,8BACA,IAAA3S,EAAA,EAAeA,EAAA2S,EAAA5P,OAA0B/C,IACzCuB,EAAAoR,EAAA3S,IACAyS,EAAAZ,EAAAe,aAAArR,KAEAyQ,EAAA1O,KAAA,IAAA/B,EAAA,KAAAkR,EAAA,MAGA,OAAAT,EAAAvI,KAAA,mCCvRO,SAAAoJ,EAAAC,GACP,OAAApS,OAAAkB,UAAA0C,SAAAnE,KAAA2S,IACA,qBAEA,yBAEA,4BACA,SACA,QACA,OAAAA,aAAA5K,OAUO,SAAA6K,EAAAD,GACP,8BAAApS,OAAAkB,UAAA0C,SAAAnE,KAAA2S,GASO,SAAAE,EAAAF,GACP,4BAAApS,OAAAkB,UAAA0C,SAAAnE,KAAA2S,GASO,SAAAG,EAAAH,GACP,gCAAApS,OAAAkB,UAAA0C,SAAAnE,KAAA2S,GASO,SAAAI,EAAAJ,GACP,0BAAApS,OAAAkB,UAAA0C,SAAAnE,KAAA2S,GASO,SAAAK,EAAAL,GACP,cAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EASO,SAAAM,EAAAN,GACP,0BAAApS,OAAAkB,UAAA0C,SAAAnE,KAAA2S,GASO,SAAAO,EAAAP,GACP,0BAAApS,OAAAkB,UAAA0C,SAAAnE,KAAA2S,GAMO,SAAAQ,EAAAR,GAEP,OAAAS,QAAAT,KAAAU,MAAA,mBAAAV,EAAAU,MAUO,SAAAC,EAAAX,GAEP,OAAAM,EAAAN,IAAA,gBAAAA,GAAA,mBAAAA,GAAA,oBAAAA,EA3GAlT,EAAAU,EAAA0B,EAAA,sBAAA6Q,IAAAjT,EAAAU,EAAA0B,EAAA,sBAAA+Q,IAAAnT,EAAAU,EAAA0B,EAAA,sBAAAgR,IAAApT,EAAAU,EAAA0B,EAAA,sBAAAiR,IAAArT,EAAAU,EAAA0B,EAAA,sBAAAkR,IAAAtT,EAAAU,EAAA0B,EAAA,sBAAAmR,IAAAvT,EAAAU,EAAA0B,EAAA,sBAAAoR,IAAAxT,EAAAU,EAAA0B,EAAA,sBAAAqR,IAAAzT,EAAAU,EAAA0B,EAAA,sBAAAsR,IAAA1T,EAAAU,EAAA0B,EAAA,sBAAAyR,sCCAAC,0GAEA,IAAAC,EAAA,WACA,SAAAA,IAIAhR,KAAApC,KAAAoT,EAAAhF,GAqBA,OAhBAgF,EAAA/R,UAAAgS,UAAA,WACAF,EAAAG,SAAAjS,UAAA0C,SACAuP,SAAAjS,UAAA0C,SAAA,WAEA,IADA,IAAAyD,EAAA,GACAC,EAAA,EAA4BA,EAAAlF,UAAAC,OAAuBiF,IACnDD,EAAAC,GAAAlF,UAAAkF,GAEA,IAAAM,EAAA3F,KAAA6D,WAAA7D,KAAA+D,oBAAA/D,KAEA,OAAA+Q,EAAA1Q,MAAAsF,EAAAP,KAMA4L,EAAAhF,GAAA,mBACAgF,EA1BA,gDCGAG,EAAA,sEAEIC,EAAc,WAClB,SAAAC,EAAAC,QACA,IAAAA,IAAkCA,EAAA,IAClCtR,KAAAsR,WAIAtR,KAAApC,KAAAyT,EAAArF,GA4IA,OAvIAqF,EAAApS,UAAAgS,UAAA,WACQlT,OAAAyL,EAAA,EAAAzL,CAAuB,SAAAkF,GAC/B,IAAAqC,EAAsBvH,OAAAwT,EAAA,EAAAxT,GACtB,IAAAuH,EACA,OAAArC,EAEA,IAAApB,EAAAyD,EAAAuG,eAAAwF,GACA,GAAAxP,EAAA,CACA,IAAA0H,EAAAjE,EAAAiF,YACAiH,EAAAjI,IAAAwB,aAAA,GACA8C,EAAAhM,EAAA4P,cAAAD,GACA,GAAA3P,EAAA6P,iBAAAzO,EAAA4K,GACA,YAGA,OAAA5K,KAIAoO,EAAApS,UAAAyS,iBAAA,SAAAzO,EAAA4K,GACA,OAAA7N,KAAA2R,eAAA1O,EAAA4K,IACY+D,EAAA,EAAM7F,KAAA,6DAAqEhO,OAAA8T,EAAA,EAAA9T,CAAmBkF,KAC1G,GAEAjD,KAAA8R,gBAAA7O,EAAA4K,IACY+D,EAAA,EAAM7F,KAAA,wEAAgFhO,OAAA8T,EAAA,EAAA9T,CAAmBkF,KACrH,GAEAjD,KAAA+R,kBAAA9O,EAAA4K,IACY+D,EAAA,EAAM7F,KAAA,yEAAiFhO,OAAA8T,EAAA,EAAA9T,CAAmBkF,GAAA,WAAAjD,KAAAgS,mBAAA/O,KACtH,IAEAjD,KAAAiS,kBAAAhP,EAAA4K,KACY+D,EAAA,EAAM7F,KAAA,6EAAqFhO,OAAA8T,EAAA,EAAA9T,CAAmBkF,GAAA,WAAAjD,KAAAgS,mBAAA/O,KAC1H,IAKAoO,EAAApS,UAAA0S,eAAA,SAAA1O,EAAA4K,GAEA,QADA,IAAAA,IAAiCA,EAAA,KACjCA,EAAAqE,eACA,SAEA,IAEA,sBAAAjP,EAAAE,UAAAC,OAAA,GAAAC,KAEA,MAAA0F,GACA,WAIAsI,EAAApS,UAAA6S,gBAAA,SAAA7O,EAAA4K,GAEA,YADA,IAAAA,IAAiCA,EAAA,OACjCA,EAAAsE,eAAAtE,EAAAsE,aAAA/R,SAGAJ,KAAAoS,0BAAAnP,GAAAoP,KAAA,SAAAnP,GAEA,OAAA2K,EAAAsE,aAAAE,KAAA,SAAAC,GAAiE,OAAQvU,OAAAwU,EAAA,EAAAxU,CAAiBmF,EAAAoP,QAI1FjB,EAAApS,UAAA8S,kBAAA,SAAA9O,EAAA4K,GAGA,QAFA,IAAAA,IAAiCA,EAAA,KAEjCA,EAAA2E,gBAAA3E,EAAA2E,cAAApS,OACA,SAEA,IAAAqC,EAAAzC,KAAAgS,mBAAA/O,GACA,QAAAR,GAAAoL,EAAA2E,cAAAH,KAAA,SAAAC,GAA6E,OAAQvU,OAAAwU,EAAA,EAAAxU,CAAiB0E,EAAA6P,MAGtGjB,EAAApS,UAAAgT,kBAAA,SAAAhP,EAAA4K,GAGA,QAFA,IAAAA,IAAiCA,EAAA,KAEjCA,EAAA4E,gBAAA5E,EAAA4E,cAAArS,OACA,SAEA,IAAAqC,EAAAzC,KAAAgS,mBAAA/O,GACA,OAAAR,GAAAoL,EAAA4E,cAAAJ,KAAA,SAAAC,GAA4E,OAAQvU,OAAAwU,EAAA,EAAAxU,CAAiB0E,EAAA6P,MAGrGjB,EAAApS,UAAAwS,cAAA,SAAAD,GAEA,YADA,IAAAA,IAAuCA,EAAA,IACvC,CACAgB,cAA2BE,EAAA,EAAgB1S,KAAAsR,SAAAkB,eAAA,GAAAhB,EAAAgB,eAAA,IAC3CL,aAA0BO,EAAA,EAAgB1S,KAAAsR,SAAAa,cAAA,GAAAX,EAAAW,cAAA,GAAAhB,GAC1Ce,oBAAA,IAAAlS,KAAAsR,SAAAY,gBAAAlS,KAAAsR,SAAAY,eACAO,cAA2BC,EAAA,EAAgB1S,KAAAsR,SAAAmB,eAAA,GAAAjB,EAAAiB,eAAA,MAI3CpB,EAAApS,UAAAmT,0BAAA,SAAAnP,GACA,GAAAA,EAAAC,QACA,OAAAD,EAAAC,SAEA,GAAAD,EAAAE,UACA,IAEA,IAAAyG,EAAA3G,EAAAE,UAAAC,OAAA,GAAAC,EAAAuG,EAAAvG,KAAA/E,EAAAsL,EAAAtL,MACA,UAAAA,EAAA+E,EAAA,KAAA/E,GAEA,MAAAqU,GAEA,OADgBf,EAAA,EAAMhR,MAAA,oCAA6C7C,OAAA8T,EAAA,EAAA9T,CAAmBkF,IACtF,GAGA,UAGAoO,EAAApS,UAAA+S,mBAAA,SAAA/O,GACA,IACA,GAAAA,EAAA2P,WAAA,CAEA,IAAAC,EAAA5P,EAAA2P,WAAAE,OACA,OAAAD,IAAAzS,OAAA,GAAA2S,SAEA,GAAA9P,EAAAE,UAAA,CAEA,IAAA6P,EAAA/P,EAAAE,UAAAC,OAAA,GAAAwP,WAAAE,OACA,OAAAE,IAAA5S,OAAA,GAAA2S,SAEA,YAEA,MAAAJ,GAEA,OADYf,EAAA,EAAMhR,MAAA,gCAAyC7C,OAAA8T,EAAA,EAAA9T,CAAmBkF,IAC9E,OAMAoO,EAAArF,GAAA,iBACAqF,EAnJkB,GCPlBpU,EAAAU,EAAA0B,EAAA,sBAAA4T,mCCAAhW,EAAAU,EAAA0B,EAAA,sBAAA6T,IAAAjW,EAAAU,EAAA0B,EAAA,sBAAA8T,IAAAlW,EAAAU,EAAA0B,EAAA,sBAAA+T,IAAAnW,EAAAU,EAAA0B,EAAA,sBAAAgU,IAAA,IAAArO,EAAA/H,EAAA,GAAAkM,EAAAlM,EAAA,GAAAmM,EAAAnM,EAAA,GAAAsQ,EAAAtQ,EAAA,GAgBA2E,EAAa7D,OAAAoL,EAAA,EAAApL,GACbuV,EAAA,CACAC,SAAA,EACAC,sBAAA,EACAH,oBAAA,EACAI,iBAAA,GAKAC,EAAA,IAEAC,EAAA,0GASA,SAAAC,EAAA7U,EAAAH,GACA,OAAAb,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAH,GAOA,SAAAiV,IACA,0BAAAnM,UAAA,MAAAA,SAAAoM,SACA,GACApM,SAAAoM,SAAAC,KA6CAT,EAAAC,QAAA,WACA,IAwCAS,EAAAC,EAxCAC,EAAA,GAAAC,EAAA,KAAAC,EAAA,KAqBA,SAAAC,EAAA/L,EAAAgM,EAAA1T,GACA,IAAAuC,EAAA,KACA,IAAAmR,GAAAhB,EAAAE,qBAAA,CAGA,QAAAnW,KAAA6W,EACA,GAAAN,EAAAM,EAAA7W,GACA,IACA6W,EAAA7W,GAAAiL,EAAAgM,EAAA1T,GAEA,MAAA2T,GACApR,EAAAoR,EAIA,GAAApR,EACA,MAAAA,GAcA,SAAAqR,EAAAtR,EAAAT,EAAAgS,EAAAC,EAAAC,GACA,IAAArM,EAAA,KAKA,GAHAqM,EAAmB5W,OAAAqL,EAAA,EAAArL,CAAY4W,KAAA/T,MAAA+T,EAE/BzR,EAAkBnF,OAAAqL,EAAA,EAAArL,CAAYmF,eAC9BkR,EACAd,EAAAD,mBAAAuB,qCAAAR,EAAA3R,EAAAgS,EAAAvR,GACA2R,SAEA,GAAAF,GAA6B5W,OAAAqL,EAAA,EAAArL,CAAO4W,IACpCrM,EAAAgL,EAAAD,mBAAAsB,IACAzQ,UAAA,UACAmQ,EAAA/L,GAAA,EAAAqM,OAEA,CACA,IAKA/W,EALAkW,EAAA,CACArR,MACAqS,KAAAL,EACAM,OAAAL,GAGAM,EAAA9R,EACA,GAAkB,oBAAlB,GAAkBvB,SAAAnE,KAAA0F,GAAA,CAClB,IAAA+R,EAAA/R,EAAAR,MAAAiR,GACAsB,IACArX,EAAAqX,EAAA,GACAD,EAAAC,EAAA,IAGAnB,EAAAoB,KAAAxB,EACAI,EAAAnO,QAAA,KAcA0O,EAbA/L,EAAA,CACA1K,OACAsF,QAAA8R,EACAxW,KAAA,UACA0F,UAAA,UACAoE,MAAA,CACoBtD,EAAA,EAAgB,GAAG8O,EAAA,CAIvCrR,IAAAqR,EAAArR,KAAAoR,SAGA,QAEA,QAAAG,GAEAA,EAAA3T,MAAAL,KAAAG,WAWA,SAAAgV,EAAA5U,GACA,IAAA8H,EAAA9H,MAAA6U,OAAA7U,EAAA6U,OAAAC,OAAA9U,EAAA8U,SAAA9U,EACA+H,EAAAgL,EAAAD,mBAAAhL,GACAC,EAAApE,UAAA,uBACAoE,EAAApF,UACAoF,EAAApF,QAAAiE,KAAAC,UAA2CrJ,OAAAwP,EAAA,EAAAxP,CAASsK,KAEpDgM,EAAA/L,GAAA,EAAAD,GAyBA,SAAAwM,IACA,IAAAS,EAAAlB,EAAAmB,EAAApB,EACAC,EAAA,KACAD,EAAA,KACAE,EAAAiB,GAAA,EAAAC,GAQA,SAAAhC,EAAAnF,GACA,GAAAgG,EAAA,CACA,GAAAD,IAAA/F,EACA,OAGAyG,IAGA,IAAAvM,EAAAgL,EAAAD,mBAAAjF,GAYA,MAXAgG,EAAA9L,EACA6L,EAAA/F,EAKAC,WAAA,WACA8F,IAAA/F,GACAyG,KAESvM,EAAAkN,WAAA,OACTpH,EAKA,OAHAmF,EAAAL,WA5KA,SAAAuC,GAKAvB,EAAAvT,KAAA8U,IAwKAlC,EAAAJ,sBAvDA,YACA,IAAAc,IAGAD,EAAApS,EAAA8T,QACA9T,EAAA8T,QAAAlB,EACAP,GAAA,IAkDAV,EAAAH,wCA5CA,WACAxR,EAAA+T,qBAAAR,GA4CA5B,EAtLA,GA2PAD,EAAAD,mBAAA,WA4CA,SAAAuC,EAAAxH,GACA,IAAAA,MAAA9F,MACA,YAUA,IAPA,IAMAuN,EAAAC,EAAAC,EANAC,EAAA,0IAIAC,EAAA,0KAAAC,EAAA,gHAEAC,EAAA,gDAAAC,EAAA,gCAAAC,EAAAjI,EAAA9F,MAAArB,MAAA,MAAAqB,EAAA,GAAAgO,EAAA,sBAAAC,KAAAnI,EAAAlL,SACA7F,EAAA,EAAAmZ,EAAAH,EAAAjW,OAAyC/C,EAAAmZ,IAAOnZ,EAAA,CAChD,GAAAyY,EAAAE,EAAAO,KAAAF,EAAAhZ,IAAA,CACA,IAAAoZ,EAAAX,EAAA,QAAAA,EAAA,GAAAY,QAAA,UACAZ,EAAA,QAAAA,EAAA,GAAAY,QAAA,UACAb,EAAAO,EAAAG,KAAAT,EAAA,OAEAA,EAAA,GAAAD,EAAA,GACAC,EAAA,GAAAD,EAAA,GACAC,EAAA,GAAAD,EAAA,IAEAE,EAAA,CACAtT,IAAAqT,EAAA,GACAZ,KAAAY,EAAA,IAAApC,EACAtO,KAAAqR,EAAA,CAAAX,EAAA,OACAhB,KAAAgB,EAAA,IAAAA,EAAA,QACAf,OAAAe,EAAA,IAAAA,EAAA,cAGA,GAAAA,EAAAI,EAAAK,KAAAF,EAAAhZ,IACA0Y,EAAA,CACAtT,IAAAqT,EAAA,GACAZ,KAAAY,EAAA,IAAApC,EACAtO,KAAA,GACA0P,MAAAgB,EAAA,GACAf,OAAAe,EAAA,IAAAA,EAAA,aAGA,MAAAA,EAAAG,EAAAM,KAAAF,EAAAhZ,KAyBA,SAxBAyY,EAAA,IAAAA,EAAA,GAAAY,QAAA,gBACAb,EAAAM,EAAAI,KAAAT,EAAA,MAEAA,EAAA,GAAAA,EAAA,WACAA,EAAA,GAAAD,EAAA,GACAC,EAAA,GAAAD,EAAA,GACAC,EAAA,OAEA,IAAAzY,GAAAyY,EAAA,aAAA1H,EAAAuI,eAKArO,EAAA,GAAAyM,OAAA3G,EAAAuI,aAAA,GAEAZ,EAAA,CACAtT,IAAAqT,EAAA,GACAZ,KAAAY,EAAA,IAAApC,EACAtO,KAAA0Q,EAAA,GAAAA,EAAA,GAAA7O,MAAA,QACA6N,KAAAgB,EAAA,IAAAA,EAAA,QACAf,OAAAe,EAAA,IAAAA,EAAA,UAMAC,EAAAb,MAAAa,EAAAjB,OACAiB,EAAAb,KAAAxB,GAEAqC,EAAApQ,QAAA,KACA2C,EAAA3H,KAAAoV,GAEA,OAAAzN,EAAAlI,QAGAkI,EAAA,IAAAA,EAAA,GAAAwM,OAAAxM,EAAA,GAAAyM,QAAAuB,IACAhO,EAAA,GAAAyM,OAAA,MAEA,CACAvW,KAAA,QACAZ,KAAAwQ,EAAAxQ,KACAsF,QAAAkL,EAAAlL,QACAoF,UATA,KAyKA,SAAAsM,EAAAgC,EAAAnU,EAAAgS,EAAAvR,GACA,IAAA2T,EAAA,CACApU,MACAqS,KAAAL,GAEA,GAAAoC,EAAApU,KAAAoU,EAAA/B,KAAA,CAYA,GAXA8B,EAAApB,YAAA,EACAqB,EAAA3B,OACA2B,EAAA3B,KAAAxB,GAEAmD,EAAAlR,UACAkR,EAAAlR,QAAA,MAEA,cAAA4Q,KAAArT,KAEA2T,EAAA9B,OAAA,MAEA6B,EAAAtO,MAAAlI,OAAA,GACAwW,EAAAtO,MAAA,GAAA7F,MAAAoU,EAAApU,IAAA,CACA,GAAAmU,EAAAtO,MAAA,GAAAwM,OAAA+B,EAAA/B,KACA,SAEA,IAAA8B,EAAAtO,MAAA,GAAAwM,MAAA8B,EAAAtO,MAAA,GAAA4M,OAAA2B,EAAA3B,KAGA,OAFA0B,EAAAtO,MAAA,GAAAwM,KAAA+B,EAAA/B,KACA8B,EAAAtO,MAAA,GAAA3C,QAAAkR,EAAAlR,SACA,EAMA,OAFAiR,EAAAtO,MAAAwO,QAAAD,GACAD,EAAAG,SAAA,GACA,EAKA,OAFAH,EAAApB,YAAA,GAEA,EAYA,SAAAwB,EAAA5I,EAAA/G,GAEA,IADA,IAAuHyO,EAAAmB,EAAvHC,EAAA,qEAAA5O,EAAA,GAAA6O,EAAA,GAAuHC,GAAA,EACvHC,EAAAL,EAAAM,OAAsED,IAAAD,EAAoBC,IAAAC,OAC1F,GAAAD,IAAAhE,GAAAgE,IAAA/D,EAAAC,QAAA,CAgBA,GAbA0D,EAAA,CACAxU,IAAA,KACAyS,KAAAxB,EACAtO,KAAA,GACA0P,KAAA,KACAC,OAAA,MAEAsC,EAAAzZ,KACAqZ,EAAA/B,KAAAmC,EAAAzZ,MAEAkY,EAAAoB,EAAAX,KAAAc,EAAA1V,eACAsV,EAAA/B,KAAAY,EAAA,SAEA,IAAAmB,EAAA/B,KACA,IACA+B,EAAA/B,KAAAY,EAAAjN,MAAA0O,UAAA,EAAAzB,EAAAjN,MAAA6N,QAAA,MAEA,MAAAnW,IAEA4W,EAAA,GAAAE,GACAD,GAAA,EAGAD,EAAA,GAAAE,IAAA,EAEA/O,EAAA3H,KAAAsW,GAEA5P,GACAiB,EAAAkP,OAAA,EAAAnQ,GAEA,IAAArD,EAAA,CACAxF,KAAA,UACAZ,KAAAwQ,EAAAxQ,KACAsF,QAAAkL,EAAAlL,QACAoF,SAGA,OADAsM,EAAA5Q,EAAAoK,EAAAqJ,WAAArJ,EAAAsJ,SAAAtJ,EAAA0G,MAAA1G,EAAAuJ,WAAAvJ,EAAAlL,SAAAkL,EAAAwJ,aACA5T,EAQA,SAAA6T,EAAAzJ,EAAA/G,GACA,IAAAiB,EAAA,KACAjB,EAAA,MAAAA,EAAA,GAAAA,EACA,IAKA,GADAiB,EAhQA,SAAA8F,GAIA,IAAAwE,EAAAxE,EAAAwE,WACA,GAAAA,EAAA,CAIA,IADA,IAAAkD,EAAAgC,EAAA,8DAAAC,EAAA,uGAAA1B,EAAAzD,EAAA3L,MAAA,MAAAqB,EAAA,GACAwM,EAAA,EAA0BA,EAAAuB,EAAAjW,OAAqB0U,GAAA,GAC/C,IAAAiB,EAAA,MACAD,EAAAgC,EAAAvB,KAAAF,EAAAvB,KACAiB,EAAA,CACAtT,IAAAqT,EAAA,GACAhB,MAAAgB,EAAA,GACAf,OAAA,KACAG,KAAAY,EAAA,GACA1Q,KAAA,KAGA0Q,EAAAiC,EAAAxB,KAAAF,EAAAvB,OACAiB,EAAA,CACAtT,IAAAqT,EAAA,GACAhB,MAAAgB,EAAA,GACAf,QAAAe,EAAA,GACAZ,KAAAY,EAAA,IAAAA,EAAA,GACA1Q,KAAA0Q,EAAA,GAAAA,EAAA,GAAA7O,MAAA,UAGA8O,KACAA,EAAAb,MAAAa,EAAAjB,OACAiB,EAAAb,KAAAxB,GAEAqC,EAAAjB,OACAiB,EAAApQ,QAAA,MAEAoQ,EAAApQ,UACAoQ,EAAApQ,QAAA,CAAA0Q,EAAAvB,EAAA,KAEAxM,EAAA3H,KAAAoV,IAGA,OAAAzN,EAAAlI,OAGA,CACA5B,KAAA,aACAZ,KAAAwQ,EAAAxQ,KACAsF,QAAAkL,EAAAlL,QACAoF,SANA,MAqNA0P,CAAA5J,GAEA,OAAA9F,EAGA,MAAA/H,IACA,IAEA,GADA+H,EAAAsN,EAAAxH,GAEA,OAAA9F,EAGA,MAAA/H,IACA,IAEA,GADA+H,EAhNA,SAAA8F,GAeA,IAAAiI,EAAAjI,EAAAlL,QAAA+D,MAAA,MACA,GAAAoP,EAAAjW,OAAA,EACA,YAEA,IAAA0V,EAAAmC,EAAA,yFAAAC,EAAA,kGAAAC,EAAA,yCAAA7P,EAAA,GAAA8P,EAAAxW,KAAA8F,UAAA9F,EAAA8F,SAAA2Q,qBAAA,UAAAC,EAAA,GACA,QAAAlZ,KAAAgZ,EACAxE,EAAAwE,EAAAhZ,KAAAgZ,EAAAhZ,GAAAmZ,KACAD,EAAA3X,KAAAyX,EAAAhZ,IAGA,QAAA0V,EAAA,EAA0BA,EAAAuB,EAAAjW,OAAqB0U,GAAA,GAC/C,IAAAmC,EAAA,MACAnB,EAAAmC,EAAA1B,KAAAF,EAAAvB,KACAmC,EAAA,CACAxU,IAAAqT,EAAA,GACAZ,KAAAY,EAAA,GACA1Q,KAAA,GACA0P,MAAAgB,EAAA,GACAf,OAAA,OAGAe,EAAAoC,EAAA3B,KAAAF,EAAAvB,KACAmC,EAAA,CACAxU,IAAAqT,EAAA,GACAZ,KAAAY,EAAA,GACA1Q,KAAA,GACA0P,MAAAgB,EAAA,GACAf,OAAA,OAGAe,EAAAqC,EAAA5B,KAAAF,EAAAvB,OAEAmC,EAAA,CACAxU,IAFAoR,IAAAvR,QAAA,WAGA4S,KAAA,GACA9P,KAAA,GACA0P,KAAAgB,EAAA,GACAf,OAAA,OAGAkC,IACAA,EAAA/B,OACA+B,EAAA/B,KAAAxB,GAGAuD,EAAAtR,QAAA,CAAA0Q,EAAAvB,EAAA,IACAxM,EAAA3H,KAAAsW,IAGA,OAAA3O,EAAAlI,OAGA,CACA5B,KAAA,YACAZ,KAAAwQ,EAAAxQ,KACAsF,QAAAmT,EAAA,GACA/N,SANA,KA+IAkQ,CAAApK,GAEA,OAAA9F,EAGA,MAAA/H,IACA,IAEA,GADA+H,EAAA0O,EAAA5I,EAAA/G,EAAA,GAEA,OAAAiB,EAGA,MAAA/H,IACA,OACAiG,SAAA4H,EACAxQ,KAAAwQ,EAAAxQ,KACAsF,QAAAkL,EAAAlL,QACA1E,KAAA,UAKA,OAFAqZ,EAAAjD,uCACAiD,EAAAjC,kCACAiC,EA5aA,GA8aAvE,EAAAE,sBAAA,EACAF,EAAAG,gBAAA,GACA,IAAAP,EAAAI,EAAAC,QAAAL,WACAC,EAAAG,EAAAC,QAAAJ,sBACAC,EAAAE,EAAAC,QAAAH,wCACAC,EAAAC,EAAAD,iDC3wBApW,EAAAU,EAAA0B,EAAA,sBAAAoZ,IAAAxb,EAAAU,EAAA0B,EAAA,sBAAAqZ,IAAAzb,EAAAU,EAAA0B,EAAA,sBAAAsZ,IAAA1b,EAAAU,EAAA0B,EAAA,sBAAAyL,IAAA7N,EAAAU,EAAA0B,EAAA,sBAAAuZ,IAAA3b,EAAAU,EAAA0B,EAAA,sBAAAwZ,IAAA5b,EAAAU,EAAA0B,EAAA,sBAAAyZ,IAAA7b,EAAAU,EAAA0B,EAAA,sBAAA0Z,IAAA9b,EAAAU,EAAA0B,EAAA,sBAAA2N,IAAA,IAAAgM,EAAA/b,EAAA,GAAAoQ,EAAApQ,EAAA,IAAAqQ,EAAArQ,EAAA,GAAAgc,EAAAhc,EAAA,IAAAic,EAAAjc,EAAA,GAAAkc,EAAAlc,EAAA,IAAAmc,EAAAnc,EAAA,IAAAoc,EAAApc,EAAA,IAAAqc,EAAArc,EAAA,IAAAsc,EAAAtc,EAAA,IAIOwb,EAAA,CACP,IAAQO,EAAA,EAAgB3H,eACxB,IAAQ2H,EAAA,EAAgBhI,iBACxB,IAAQmI,EAAA,EACR,IAAQC,EAAA,EACR,IAAQC,EAAA,EACR,IAAQC,EAAA,EACR,IAAQC,EAAA,GA2DD,SAAAb,EAAA7K,QACP,IAAAA,IAA6BA,EAAA,SAC7BxD,IAAAwD,EAAA4K,sBACA5K,EAAA4K,uBAEI1a,OAAAsP,EAAA,EAAAtP,CAAYkb,EAAA,EAAapL,GAOtB,SAAA8K,EAAA9K,QACP,IAAAA,IAA6BA,EAAA,IAC7BA,EAAAjD,UACAiD,EAAAjD,QAA0B7M,OAAAuP,EAAA,EAAAvP,GAAa+M,eAEvC,IAAAvB,EAAiBxL,OAAAuP,EAAA,EAAAvP,GAAawM,YAC9BhB,GACAA,EAAAoP,iBAAA9K,GAQO,SAAA/C,IACP,OAAW/M,OAAAuP,EAAA,EAAAvP,GAAa+M,cAMjB,SAAA8N,KAOA,SAAAC,EAAAtV,GACPA,IAQO,SAAAuV,EAAAU,GACP,IAAAjQ,EAAiBxL,OAAAuP,EAAA,EAAAvP,GAAawM,YAC9B,OAAAhB,EACAA,EAAAuP,MAAAU,GAEAC,QAAAC,QAAA,GAQO,SAAAX,EAAAS,GACP,IAAAjQ,EAAiBxL,OAAAuP,EAAA,EAAAvP,GAAawM,YAC9B,OAAAhB,EACAA,EAAAwP,MAAAS,GAEAC,QAAAC,QAAA,GAOO,SAAA1M,EAAAY,GAEH7P,OAAAmb,EAAA,EAAAnb,CAAY6P,EAAZ7P,mCCnJJd,EAAAU,EAAA0B,EAAA,sBAAAsa,IAAA1c,EAAAU,EAAA0B,EAAA,sBAAAua,IAAA3c,EAAAU,EAAA0B,EAAA,sBAAAwa,IAAA5c,EAAAU,EAAA0B,EAAA,sBAAAya,IAAA,IAAAC,EAAA9c,EAAA,GAAAkM,EAAAlM,EAAA,IAAA+c,EAAA/c,EAAA,IAEAgd,EAAA,GAMO,SAAAN,EAAA/G,GACP,IAAAE,EAAAgH,EAAAlH,EAAAtK,OACAnF,EAAA,CACAE,KAAAuP,EAAAhV,KACAU,MAAAsU,EAAA1P,SASA,OAPA4P,KAAA1S,SACA+C,EAAAyP,WAAA,CAAgCE,gBAGhCzI,IAAAlH,EAAAE,MAAA,KAAAF,EAAA7E,QACA6E,EAAA7E,MAAA,8BAEA6E,EAKO,SAAAyW,EAAAzW,EAAAqC,GACP,IAAA0U,EAAAnc,OAAAkG,KAAAd,GAAAgX,OACAlX,EAAA,CACA6C,MAAA,CACAsU,eAA4Brc,OAAAgc,EAAA,EAAAhc,CAAeoF,IAE3CD,QAAA,2CAA8DnF,OAAAoL,EAAA,EAAApL,CAAkBmc,IAEhF,GAAA1U,EAAA,CACA,IACAqN,EAAAiH,EADyB/b,OAAAic,EAAA,EAAAjc,CAAkByH,GAC3C8C,OACArF,EAAA2P,WAAA,CACAE,OAAAD,GAGA,OAAA5P,EAKO,SAAA4W,EAAAjH,GAEP,OACAzP,UAAA,CACAC,OAAA,CAHAuW,EAAA/G,MAUO,SAAAkH,EAAAxR,GACP,IAAAA,MAAAlI,OACA,SAEA,IAAAia,EAAA/R,EACAgS,EAAAD,EAAA,GAAAnF,MAAA,GACAqF,EAAAF,IAAAja,OAAA,GAAA8U,MAAA,GAUA,OARAoF,EAAAE,SAAA,mBAAAF,EAAAE,SAAA,uBACAH,IAAArM,MAAA,IAGAuM,EAAAC,SAAA,mBACAH,IAAArM,MAAA,OAGAqM,EACAzT,IAAA,SAAA6T,GAA+B,OAC/BC,MAAAD,EAAA1F,OACAhC,SAAA0H,EAAAhY,KAAA4X,EAAA,GAAA5X,IACAkY,SAAAF,EAAAvF,MAAA,IACA0F,QAAA,EACAC,OAAAJ,EAAA3F,QAEA9G,MAAA,EAAAiM,GACAtK,iFCjFOmL,EAAA,4DAIHC,EAAI,WACR,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,QACA,IAAAH,IAAkCA,EAAYld,OAAA8T,EAAA,EAAA9T,SAC9C,IAAAmd,IAAiCA,EAAWnd,OAAA8T,EAAA,EAAA9T,GAAKwZ,UAAA,UACjD,IAAA4D,IAAmCA,GAAA,GACnCnb,KAAAib,WACAjb,KAAAkb,UACAlb,KAAAmb,YACAnb,KAAAob,UA8BA,OAxBAJ,EAAAK,gBAAA,SAAAC,GACA,IAAAC,EAAAD,EAAA5Y,MAAAoY,GACA,GAAAS,EAAA,CACA,IAAAC,EAAA,IAAAR,EAAAO,EAAA,GAAAA,EAAA,UAAAA,EAAA,IACA,WAAAP,EAAAO,EAAA,QAAAlR,SAAAmR,KAOAR,EAAA/b,UAAAoN,cAAA,WACA,YAAArM,KAAAib,SAAA,IAAAjb,KAAAkb,QAAA,KAAAlb,KAAAmb,UAAA,YAKAH,EAAA/b,UAAAmJ,OAAA,WACA,OACAqT,OAAAzb,KAAAob,SAAApb,KAAAob,QAAAhT,eAAAiC,EACAqR,QAAA1b,KAAAkb,QACAS,SAAA3b,KAAAib,WAGAD,EAtCQ,GCLR/d,EAAAU,EAAA0B,EAAA,sBAAAuc,IAAA3e,EAAAU,EAAA0B,EAAA,sBAAAwc,IAOA,IAAID,EAAK,WACT,SAAAE,IAEA9b,KAAA+b,qBAAA,EAEA/b,KAAAgc,gBAAA,GAEAhc,KAAAic,iBAAA,GAEAjc,KAAAkc,aAAA,GAEAlc,KAAAmc,MAAA,GAEAnc,KAAAoc,MAAA,GAEApc,KAAAqc,OAAA,GAEArc,KAAAsc,SAAA,GAgRA,OA1QAR,EAAA7c,UAAAsd,iBAAA,SAAAhZ,GACAvD,KAAAgc,gBAAArb,KAAA4C,IAKAuY,EAAA7c,UAAAqP,kBAAA,SAAA/K,GAEA,OADAvD,KAAAic,iBAAAtb,KAAA4C,GACAvD,MAKA8b,EAAA7c,UAAAud,sBAAA,WACA,IAAAC,EAAAzc,KACAA,KAAA+b,sBACA/b,KAAA+b,qBAAA,EACA1N,WAAA,WACAoO,EAAAT,gBAAArY,QAAA,SAAAJ,GACAA,EAAAkZ,KAEAA,EAAAV,qBAAA,MAOAD,EAAA7c,UAAAyd,uBAAA,SAAAC,EAAA1Z,EAAA0H,EAAAiS,GACA,IAAAH,EAAAzc,KAEA,YADA,IAAA4c,IAA+BA,EAAA,GAC/B,IAAmBC,EAAA,EAAW,SAAAC,EAAApD,GAC9B,IAAAqD,EAAAJ,EAAAC,GAEA,UAAA3Z,GAAA,mBAAA8Z,EACAD,EAAA7Z,OAEA,CACA,IAAAe,EAAA+Y,EAAuCrK,EAAA,EAAgB,GAAGzP,GAAA0H,GACtC5M,OAAAif,EAAA,EAAAjf,CAAUiG,GAC9BA,EACA6M,KAAA,SAAAoM,GAAgD,OAAAR,EAAAC,uBAAAC,EAAAM,EAAAtS,EAAAiS,EAAA,GAAA/L,KAAAiM,KAChDI,MAAAxD,GAGA+C,EAAAC,uBAAAC,EAAA3Y,EAAA2G,EAAAiS,EAAA,GACA/L,KAAAiM,GACAI,MAAAxD,OAQAoC,EAAA7c,UAAA6F,QAAA,SAAAiB,GAGA,OAFA/F,KAAAmc,MAAqBpe,OAAAgB,EAAA,EAAAhB,CAASgI,GAC9B/F,KAAAwc,wBACAxc,MAKA8b,EAAA7c,UAAA0F,QAAA,SAAAkB,GAGA,OAFA7F,KAAAoc,MAAqB1J,EAAA,EAAgB,GAAG1S,KAAAoc,MAAcre,OAAAgB,EAAA,EAAAhB,CAAS8H,IAC/D7F,KAAAwc,wBACAxc,MAKA8b,EAAA7c,UAAA4F,OAAA,SAAAjG,EAAAN,GACA,IAAAsL,EAGA,OAFA5J,KAAAoc,MAAqB1J,EAAA,EAAgB,GAAG1S,KAAAoc,QAAAxS,EAAA,IAAsBhL,GAAYb,OAAAgB,EAAA,EAAAhB,CAASO,GAAAsL,IACnF5J,KAAAwc,wBACAxc,MAKA8b,EAAA7c,UAAAyF,UAAA,SAAAoB,GAGA,OAFA9F,KAAAqc,OAAsB3J,EAAA,EAAgB,GAAG1S,KAAAqc,OAAete,OAAAgB,EAAA,EAAAhB,CAAS+H,IACjE9F,KAAAwc,wBACAxc,MAKA8b,EAAA7c,UAAA2F,SAAA,SAAAhG,EAAAkH,GACA,IAAA8D,EAGA,OAFA5J,KAAAqc,OAAsB3J,EAAA,EAAgB,GAAG1S,KAAAqc,SAAAzS,EAAA,IAAuBhL,GAAYb,OAAAgB,EAAA,EAAAhB,CAAS+H,GAAA8D,IACrF5J,KAAAwc,wBACAxc,MAKA8b,EAAA7c,UAAAke,eAAA,SAAAC,GAGA,OAFApd,KAAAqd,aAA4Btf,OAAAgB,EAAA,EAAAhB,CAASqf,GACrCpd,KAAAwc,wBACAxc,MAKA8b,EAAA7c,UAAAqe,SAAA,SAAA1Z,GAGA,OAFA5D,KAAAud,OAAsBxf,OAAAgB,EAAA,EAAAhB,CAAS6F,GAC/B5D,KAAAwc,wBACAxc,MAKA8b,EAAA7c,UAAAue,eAAA,SAAAC,GAGA,OAFAzd,KAAA0d,aAAAD,EACAzd,KAAAwc,wBACAxc,MAKA8b,EAAA7c,UAAAwF,WAAA,SAAA7G,EAAA+H,GAGA,OAFA3F,KAAAsc,SAAA1e,GAAA+H,EAAwC5H,OAAAgB,EAAA,EAAAhB,CAAS4H,QAAA0E,EACjDrK,KAAAwc,wBACAxc,MAKA8b,EAAA7c,UAAA0e,QAAA,SAAAzR,GAGA,OAFAlM,KAAA4d,MAAA1R,EACAlM,KAAAwc,wBACAxc,MAKA8b,EAAA7c,UAAA4e,UAAA,WACA,IAAA3R,EAAA,IAAuB6O,EAEvB,OADA/a,KAAA2d,QAAAzR,GACAA,GAMA4P,EAAA7c,UAAAkN,QAAA,WACA,OAAAnM,KAAA4d,OAMA9B,EAAAxR,MAAA,SAAAd,GACA,IAAAsU,EAAA,IAAAhC,EAgBA,OAfA/d,OAAAmC,OAAA4d,EAAAtU,EAAA,CACAwS,gBAAA,KAEAxS,IACAsU,EAAA5B,aAAoCxJ,EAAA,EAAgBlJ,EAAA0S,cACpD4B,EAAA1B,MAA6B1J,EAAA,EAAgB,GAAGlJ,EAAA4S,OAChD0B,EAAAzB,OAA8B3J,EAAA,EAAgB,GAAGlJ,EAAA6S,QACjDyB,EAAAxB,SAAgC5J,EAAA,EAAgB,GAAGlJ,EAAA8S,UACnDwB,EAAA3B,MAAA3S,EAAA2S,MACA2B,EAAAP,OAAA/T,EAAA+T,OACAO,EAAAF,MAAApU,EAAAoU,MACAE,EAAAJ,aAAAlU,EAAAkU,aACAI,EAAAT,aAAA7T,EAAA6T,aACAS,EAAA7B,iBAAwCvJ,EAAA,EAAgBlJ,EAAAyS,mBAExD6B,GAKAhC,EAAA7c,UAAA8e,MAAA,WAWA,OAVA/d,KAAAkc,aAAA,GACAlc,KAAAoc,MAAA,GACApc,KAAAqc,OAAA,GACArc,KAAAmc,MAAA,GACAnc,KAAAsc,SAAA,GACAtc,KAAAud,YAAAlT,EACArK,KAAA0d,kBAAArT,EACArK,KAAAqd,kBAAAhT,EACArK,KAAA4d,WAAAvT,EACArK,KAAAwc,wBACAxc,MAKA8b,EAAA7c,UAAAuF,cAAA,SAAAkB,EAAAyF,GACA,IAAAC,GAAA,IAAAC,MAAAC,UAAA,IACAC,EAA+BmH,EAAA,EAAgB,CAAEtH,aAAuB1F,GAMxE,OALA1F,KAAAkc,kBACA7R,IAAAc,MAAA,EACkBuH,EAAA,EAAgB1S,KAAAkc,aAAA,CAAqBne,OAAAgB,EAAA,EAAAhB,CAASwN,KAAAyC,OAAA7C,GAC9CuH,EAAA,EAAgB1S,KAAAkc,aAAA,CAAqBne,OAAAgB,EAAA,EAAAhB,CAASwN,KAChEvL,KAAAwc,wBACAxc,MAKA8b,EAAA7c,UAAA+e,iBAAA,WAGA,OAFAhe,KAAAkc,aAAA,GACAlc,KAAAwc,wBACAxc,MAMA8b,EAAA7c,UAAAgf,kBAAA,SAAAhb,GAEAA,EAAAma,YAAAna,EAAAma,YACAtd,MAAA2I,QAAAxF,EAAAma,aACAna,EAAAma,YACA,CAAAna,EAAAma,aACA,GAEApd,KAAAqd,eACApa,EAAAma,YAAAna,EAAAma,YAAAvc,OAAAb,KAAAqd,eAGApa,EAAAma,cAAAna,EAAAma,YAAAhd,eACA6C,EAAAma,aAYAtB,EAAA7c,UAAAif,aAAA,SAAAjb,EAAA0H,GA0BA,OAzBA3K,KAAAqc,QAAAte,OAAAkG,KAAAjE,KAAAqc,QAAAjc,SACA6C,EAAA6C,MAA0B4M,EAAA,EAAgB,GAAG1S,KAAAqc,OAAApZ,EAAA6C,QAE7C9F,KAAAoc,OAAAre,OAAAkG,KAAAjE,KAAAoc,OAAAhc,SACA6C,EAAA4C,KAAyB6M,EAAA,EAAgB,GAAG1S,KAAAoc,MAAAnZ,EAAA4C,OAE5C7F,KAAAmc,OAAApe,OAAAkG,KAAAjE,KAAAmc,OAAA/b,SACA6C,EAAA8C,KAAyB2M,EAAA,EAAgB,GAAG1S,KAAAmc,MAAAlZ,EAAA8C,OAE5C/F,KAAAsc,UAAAve,OAAAkG,KAAAjE,KAAAsc,UAAAlc,SACA6C,EAAAkb,SAA6BzL,EAAA,EAAgB,GAAG1S,KAAAsc,SAAArZ,EAAAkb,WAEhDne,KAAAud,SACAta,EAAAW,MAAA5D,KAAAud,QAEAvd,KAAA0d,eACAza,EAAAwa,YAAAzd,KAAA0d,cAEA1d,KAAA4d,QACA3a,EAAAkb,SAAAlb,EAAAkb,UAAA,GACAlb,EAAAkb,SAAAC,MAAApe,KAAA4d,OAEA5d,KAAAie,kBAAAhb,GACAA,EAAAob,YAA4B3L,EAAA,EAAgBzP,EAAAob,aAAA,GAAAre,KAAAkc,cAC5CjZ,EAAAob,YAAApb,EAAAob,YAAAje,OAAA,EAAA6C,EAAAob,iBAAAhU,EACArK,KAAA0c,uBAA2ChK,EAAA,EAAgB4L,IAAAte,KAAAic,kBAAAhZ,EAAA0H,IAE3DmR,EAjSS,GAuST,SAAAwC,IACA,IAAAvd,EAAiBhD,OAAA8T,EAAA,EAAA9T,GAGjB,OAFAgD,EAAAyL,WAAAzL,EAAAyL,YAAA,GACAzL,EAAAyL,WAAA+R,sBAAAxd,EAAAyL,WAAA+R,uBAAA,GACAxd,EAAAyL,WAAA+R,sBAMO,SAAA1C,EAAAtY,GACP+a,IAAA3d,KAAA4C,kCCzTAtG,EAAAU,EAAA0B,EAAA,sBAAAmf,IAAA,IAAAxZ,EAAA/H,EAAA,GAEAuhB,EAAA,SAAAC,GAEA,SAAAD,EAAAtb,GACA,IAAAwb,EAAA1e,KAAAC,YACAwc,EAAAgC,EAAAjhB,KAAAwC,KAAAkD,IAAAlD,KAKA,OAJAyc,EAAAvZ,UAEAuZ,EAAA7e,KAAA8gB,EAAAzf,UAAAgB,YAAArC,KACAG,OAAA6B,eAAA6c,EAAAiC,EAAAzf,WACAwd,EAEA,OAVIzX,EAAA,EAAiBwZ,EAAAC,GAUrBD,EAXA,CAYCjZ,sBCdD,IAAAoZ,EAGAA,EAAA,WACA,OAAA3e,KADA,GAIA,IAEA2e,KAAA,IAAAzN,SAAA,iBACC,MAAA3Q,GAED,iBAAAqB,SAAA+c,EAAA/c,QAOAxE,EAAAD,QAAAwhB,gCCnBA1hB,EAAAU,EAAA0B,EAAA,sBAAAuf,IAAA3hB,EAAAU,EAAA0B,EAAA,sBAAAwf,IAAO,IAAAD,EAAA,4BACAC,EAAA,sCCDP5hB,EAAAU,EAAA0B,EAAA,sBAAAuS,IAAA,IAAAkN,EAAA7hB,EAAA,GAEA8D,EAAahD,OAAA+gB,EAAA,EAAA/gB,GAEbghB,EAAA,iBAEAC,EAAA,WAEA,SAAAA,IACAhf,KAAAif,UAAA,EAiDA,OA9CAD,EAAA/f,UAAAigB,QAAA,WACAlf,KAAAif,UAAA,GAGAD,EAAA/f,UAAAkgB,OAAA,WACAnf,KAAAif,UAAA,GAGAD,EAAA/f,UAAAmgB,IAAA,WAEA,IADA,IAAAha,EAAA,GACAC,EAAA,EAAwBA,EAAAlF,UAAAC,OAAuBiF,IAC/CD,EAAAC,GAAAlF,UAAAkF,GAEArF,KAAAif,UAGQlhB,OAAA+gB,EAAA,EAAA/gB,CAAc,WACtBgD,EAAA0C,QAAA2b,IAAAL,EAAA,UAAA3Z,EAAA0B,KAAA,SAIAkY,EAAA/f,UAAA8M,KAAA,WAEA,IADA,IAAA3G,EAAA,GACAC,EAAA,EAAwBA,EAAAlF,UAAAC,OAAuBiF,IAC/CD,EAAAC,GAAAlF,UAAAkF,GAEArF,KAAAif,UAGQlhB,OAAA+gB,EAAA,EAAA/gB,CAAc,WACtBgD,EAAA0C,QAAAsI,KAAAgT,EAAA,WAAA3Z,EAAA0B,KAAA,SAIAkY,EAAA/f,UAAA2B,MAAA,WAEA,IADA,IAAAwE,EAAA,GACAC,EAAA,EAAwBA,EAAAlF,UAAAC,OAAuBiF,IAC/CD,EAAAC,GAAAlF,UAAAkF,GAEArF,KAAAif,UAGQlhB,OAAA+gB,EAAA,EAAA/gB,CAAc,WACtBgD,EAAA0C,QAAA7C,MAAAme,EAAA,YAAA3Z,EAAA0B,KAAA,SAGAkY,EApDA,GAuDAje,EAAAyL,WAAAzL,EAAAyL,YAAA,GACA,IAAAoF,EAAA7Q,EAAAyL,WAAAoF,SAAA7Q,EAAAyL,WAAAoF,OAAA,IAAAoN,iCC9DA/hB,EAAAU,EAAA0B,EAAA,sBAAAggB,IAAA,IAAAra,EAAA/H,EAAA,GAAAkM,EAAAlM,EAAA,IAGAqiB,EAAA,kEAIAD,EAAA,WAEA,SAAAA,EAAAE,GACA,iBAAAA,EACAvf,KAAAwf,YAAAD,GAGAvf,KAAAyf,gBAAAF,GAEAvf,KAAA0f,YA2DA,OAhDAL,EAAApgB,UAAA0C,SAAA,SAAAge,QACA,IAAAA,IAAsCA,GAAA,GAEtC,IAAA/V,EAAA5J,KAAA6C,EAAA+G,EAAA/G,KAAAC,EAAA8G,EAAA9G,KAAA8c,EAAAhW,EAAAgW,KAAAC,EAAAjW,EAAAiW,KAAAC,EAAAlW,EAAAkW,UACA,OADAlW,EAAA7G,SACA,MADA6G,EAAA7D,MACA4Z,GAAAC,EAAA,IAAAA,EAAA,IACA,IAAA/c,GAAAgd,EAAA,IAAAA,EAAA,SAAA/c,IAAA,IAAAA,GAAAgd,GAGAT,EAAApgB,UAAAugB,YAAA,SAAAO,GACA,IAAArd,EAAA4c,EAAA/I,KAAAwJ,GACA,IAAArd,EACA,UAAsByG,EAAA,EAjCtB,eAmCA,IAAAS,EAAiB5E,EAAA,EAActC,EAAAsL,MAAA,MAAAjL,EAAA6G,EAAA,GAAA7D,EAAA6D,EAAA,GAAAoB,EAAApB,EAAA,GAAAgW,OAAA,IAAA5U,EAAA,GAAAA,EAAAnI,EAAA+G,EAAA,GAAAsB,EAAAtB,EAAA,GAAAiW,OAAA,IAAA3U,EAAA,GAAAA,EAC/BpI,EAAA,GACAgd,EAF+BlW,EAAA,GAG/B3C,EAAA6Y,EAAA7Y,MAAA,KACAA,EAAA7G,OAAA,IACA0C,EAAAmE,EAAA+G,MAAA,MAAAlH,KAAA,KACAgZ,EAAA7Y,EAAAwD,OAEA1M,OAAAmC,OAAAF,KAAA,CAA6B6C,OAAA+c,OAAA9c,OAAAgd,YAAAD,OAAA9c,WAAAgD,UAG7BsZ,EAAApgB,UAAAwgB,gBAAA,SAAAO,GACAhgB,KAAA+C,SAAAid,EAAAjd,SACA/C,KAAA+F,KAAAia,EAAAja,KACA/F,KAAA4f,KAAAI,EAAAJ,MAAA,GACA5f,KAAA6C,KAAAmd,EAAAnd,KACA7C,KAAA6f,KAAAG,EAAAH,MAAA,GACA7f,KAAA8C,KAAAkd,EAAAld,MAAA,GACA9C,KAAA8f,UAAAE,EAAAF,WAGAT,EAAApgB,UAAAygB,UAAA,WACA,IAAAjD,EAAAzc,KAMA,GALA,uCAAA2D,QAAA,SAAAsc,GACA,IAAAxD,EAAAwD,GACA,UAA0B9W,EAAA,EA5D1B,iBA+DA,SAAAnJ,KAAA+C,UAAA,UAAA/C,KAAA+C,SACA,UAAsBoG,EAAA,EAhEtB,eAkEA,GAAAnJ,KAAA6f,MAAAhY,OAAAC,MAAAoY,SAAAlgB,KAAA6f,KAAA,KACA,UAAsB1W,EAAA,EAnEtB,gBAsEAkW,EApEA,qDCLIc,EAAa,WACjB,SAAAC,EAAAC,GACArgB,KAAAqgB,SAEArgB,KAAAsgB,QAAA,GAwEA,OAnEAF,EAAAnhB,UAAAshB,QAAA,WACA,YAAAlW,IAAArK,KAAAqgB,QAAArgB,KAAAI,SAAAJ,KAAAqgB,QAQAD,EAAAnhB,UAAAuhB,IAAA,SAAAC,GACA,IAAAhE,EAAAzc,KACA,OAAAA,KAAAugB,YAGA,IAAAvgB,KAAAsgB,QAAA5J,QAAA+J,IACAzgB,KAAAsgB,QAAA3f,KAAA8f,GAEAA,EACA5P,KAAA,WAA+B,OAAA4L,EAAAiE,OAAAD,KAC/BvD,MAAA,WACA,OAAAT,EAAAiE,OAAAD,GAAAvD,MAAA,gBAKAuD,GAbAhH,QAAAC,OAAA,IAAsC9Y,EAAA,EAAW,qDAqBjDwf,EAAAnhB,UAAAyhB,OAAA,SAAAD,GAEA,OADAzgB,KAAAsgB,QAAA9I,OAAAxX,KAAAsgB,QAAA5J,QAAA+J,GAAA,OAMAL,EAAAnhB,UAAAmB,OAAA,WACA,OAAAJ,KAAAsgB,QAAAlgB,QAQAggB,EAAAnhB,UAAA0hB,MAAA,SAAAnH,GACA,IAAAiD,EAAAzc,KACA,WAAAyZ,QAAA,SAAAqD,GACA,IAAA8D,EAAAvS,WAAA,WACAmL,KAAA,GACAsD,GAAA,IAEatD,GACbC,QAAAoH,IAAApE,EAAA6D,SACAzP,KAAA,WACA9B,aAAA6R,GACA9D,GAAA,KAEAI,MAAA,WACAJ,GAAA,QAIAsD,EA5EiB,GCFjBnjB,EAAAU,EAAA0B,EAAA,sBAAAyhB,IAGA,IAAIA,EAAa,WACjB,SAAAC,EAAAlT,GACA7N,KAAA6N,UAEA7N,KAAAsgB,QAAA,IAA2BH,EAAa,IACxCngB,KAAAyC,IAAA,IAAuBue,EAAA,EAAGhhB,KAAA6N,QAAAoT,KAAAC,qCAc1B,OATAH,EAAA9hB,UAAAkiB,UAAA,SAAAC,GACA,UAAkBxgB,EAAA,EAAW,wDAK7BmgB,EAAA9hB,UAAA8Z,MAAA,SAAAS,GACA,OAAAxZ,KAAAsgB,QAAAK,MAAAnH,IAEAuH,EAnBiB,oBCFjB,IAOAM,EACAC,EARAxgB,EAAA1D,EAAAD,QAAA,GAUA,SAAAokB,IACA,UAAAhc,MAAA,mCAEA,SAAAic,IACA,UAAAjc,MAAA,qCAsBA,SAAAkc,EAAAC,GACA,GAAAL,IAAAhT,WAEA,OAAAA,WAAAqT,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAAhT,WAEA,OADAgT,EAAAhT,WACAA,WAAAqT,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,GACK,MAAAnhB,GACL,IAEA,OAAA8gB,EAAA7jB,KAAA,KAAAkkB,EAAA,GACS,MAAAnhB,GAET,OAAA8gB,EAAA7jB,KAAAwC,KAAA0hB,EAAA,MAvCA,WACA,IAEAL,EADA,mBAAAhT,WACAA,WAEAkT,EAEK,MAAAhhB,GACL8gB,EAAAE,EAEA,IAEAD,EADA,mBAAAvS,aACAA,aAEAyS,EAEK,MAAAjhB,GACL+gB,EAAAE,GAjBA,GAwEA,IAEAG,EAFAC,EAAA,GACAC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAF,IAGAE,GAAA,EACAF,EAAAvhB,OACAwhB,EAAAD,EAAA9gB,OAAA+gB,GAEAE,GAAA,EAEAF,EAAAxhB,QACA4hB,KAIA,SAAAA,IACA,IAAAH,EAAA,CAGA,IAAArI,EAAAiI,EAAAM,GACAF,GAAA,EAGA,IADA,IAAAtS,EAAAqS,EAAAxhB,OACAmP,GAAA,CAGA,IAFAoS,EAAAC,EACAA,EAAA,KACAE,EAAAvS,GACAoS,GACAA,EAAAG,GAAApW,MAGAoW,GAAA,EACAvS,EAAAqS,EAAAxhB,OAEAuhB,EAAA,KACAE,GAAA,EAnEA,SAAAI,GACA,GAAAX,IAAAvS,aAEA,OAAAA,aAAAkT,GAGA,IAAAX,IAAAE,IAAAF,IAAAvS,aAEA,OADAuS,EAAAvS,aACAA,aAAAkT,GAEA,IAEAX,EAAAW,GACK,MAAA1hB,GACL,IAEA,OAAA+gB,EAAA9jB,KAAA,KAAAykB,GACS,MAAA1hB,GAGT,OAAA+gB,EAAA9jB,KAAAwC,KAAAiiB,KAgDAC,CAAA1I,IAiBA,SAAA2I,EAAAT,EAAAU,GACApiB,KAAA0hB,MACA1hB,KAAAoiB,QAYA,SAAAC,KA5BAvhB,EAAAwhB,SAAA,SAAAZ,GACA,IAAAtc,EAAA,IAAAtF,MAAAK,UAAAC,OAAA,GACA,GAAAD,UAAAC,OAAA,EACA,QAAA/C,EAAA,EAAuBA,EAAA8C,UAAAC,OAAsB/C,IAC7C+H,EAAA/H,EAAA,GAAA8C,UAAA9C,GAGAukB,EAAAjhB,KAAA,IAAAwhB,EAAAT,EAAAtc,IACA,IAAAwc,EAAAxhB,QAAAyhB,GACAJ,EAAAO,IASAG,EAAAljB,UAAAyM,IAAA,WACA1L,KAAA0hB,IAAArhB,MAAA,KAAAL,KAAAoiB,QAEAthB,EAAAyhB,MAAA,UACAzhB,EAAA0hB,SAAA,EACA1hB,EAAA2hB,IAAA,GACA3hB,EAAA4hB,KAAA,GACA5hB,EAAAkJ,QAAA,GACAlJ,EAAA6hB,SAAA,GAIA7hB,EAAA8hB,GAAAP,EACAvhB,EAAA+hB,YAAAR,EACAvhB,EAAAgiB,KAAAT,EACAvhB,EAAAiiB,IAAAV,EACAvhB,EAAAkiB,eAAAX,EACAvhB,EAAAmiB,mBAAAZ,EACAvhB,EAAAoiB,KAAAb,EACAvhB,EAAAqiB,gBAAAd,EACAvhB,EAAAsiB,oBAAAf,EAEAvhB,EAAAuiB,UAAA,SAAAzlB,GAAqC,UAErCkD,EAAAwiB,QAAA,SAAA1lB,GACA,UAAA2H,MAAA,qCAGAzE,EAAAyiB,IAAA,WAA2B,WAC3BziB,EAAA0iB,MAAA,SAAAC,GACA,UAAAle,MAAA,mCAEAzE,EAAA4iB,MAAA,WAA4B,wCCvL5BzmB,EAAAU,EAAA0B,EAAA,sBAAAskB,IAAA,IAAAC,EAAA3mB,EAAA,IAEA0mB,EAAA,WACA,SAAAA,KAiBA,OAZAA,EAAA1kB,UAAAkiB,UAAA,SAAAC,GACA,OAAA3H,QAAAqD,QAAA,CACAzH,OAAA,sEACAwO,OAAoBD,EAAA,EAAME,WAM1BH,EAAA1kB,UAAA8Z,MAAA,SAAAqI,GACA,OAAA3H,QAAAqD,SAAA,IAEA6G,EAlBA,kJCSII,EAAc,SAAAtF,GAElB,SAAAuF,IACA,cAAAvF,KAAApe,MAAAL,KAAAG,YAAAH,KA4GA,OA9GI0S,EAAA,EAAiBsR,EAAAvF,GAOrBuF,EAAA/kB,UAAAglB,gBAAA,WACA,IAAAjkB,KAAAsR,SAAA2P,IAEA,OAAAxC,EAAAxf,UAAAglB,gBAAAzmB,KAAAwC,MAEA,IAAAkkB,EAAAlkB,KAAAsR,SAAA4S,iBACAlkB,KAAAsR,SAAA4S,iBACA,CAAejD,IAAAjhB,KAAAsR,SAAA2P,KACf,OAAAjhB,KAAAsR,SAAA6S,UACA,IAAAnkB,KAAAsR,SAAA6S,UAAAD,GAEYnmB,OAAAqmB,EAAA,EAAArmB,GACZ,IAAuBsmB,EAAA,EAAcH,GAErC,IAAmBI,EAAA,EAAYJ,IAK/BF,EAAA/kB,UAAAslB,mBAAA,SAAAphB,EAAAwH,GACA,IACA1H,EADAwZ,EAAAzc,KAEA,GAAYjC,OAAAif,EAAA,EAAAjf,CAAYoF,MAAAvC,MAKxB,OAFAuC,EADAA,EACAvC,MACAqC,EAAoBlF,OAAAymB,EAAA,EAAAzmB,CAAoBA,OAAA0mB,EAAA,EAAA1mB,CAAkBoF,IACvC0Z,EAAA,EAAWC,QAAA9c,KAAA0kB,YAAAzhB,EAAA0H,IAE9B,GAAY5M,OAAAif,EAAA,EAAAjf,CAAUoF,IAAepF,OAAAif,EAAA,EAAAjf,CAAcoF,GAAA,CAKnD,IAAAwhB,EAAAxhB,EACAyhB,EAAAD,EAAA/mB,OAA+CG,OAAAif,EAAA,EAAAjf,CAAU4mB,GAAA,2BACzDE,EAAAF,EAAAzhB,QAAA0hB,EAAA,KAAAD,EAAAzhB,QAAA0hB,EACA,OAAA5kB,KAAA8kB,iBAAAD,EAAoDE,EAAA,EAAQxf,MAAAoF,GAAAkG,KAAA,SAAAmU,GAE5D,OADgBjnB,OAAA8T,EAAA,EAAA9T,CAAqBinB,EAAAH,GACdhI,EAAA,EAAWC,QAAAL,EAAAiI,YAAAM,EAAAra,MAGlC,GAAY5M,OAAAif,EAAA,EAAAjf,CAAOoF,GAGnB,OADAF,EAAoBlF,OAAAymB,EAAA,EAAAzmB,CAAoBA,OAAA0mB,EAAA,EAAA1mB,CAAkBoF,IACvC0Z,EAAA,EAAWC,QAAA9c,KAAA0kB,YAAAzhB,EAAA0H,IAE9B,GAAY5M,OAAAif,EAAA,EAAAjf,CAAaoF,IAAAwH,KAAAnF,mBAAA,CAIzB,IAAAyf,EAAA9hB,EAQA,OAPAF,EAAoBlF,OAAAymB,EAAA,EAAAzmB,CAAoBknB,EAAAta,EAAAnF,oBAC5BzH,OAAA8T,EAAA,EAAA9T,CAAqBkF,EAAA,qBAAAoH,EAAA,CACjClG,SAAA,EACA+gB,WAAA,EACA7hB,KAAA,YAEAJ,EAAAW,MAA0BmhB,EAAA,EAAQxf,MACfsX,EAAA,EAAWC,QAAA9c,KAAA0kB,YAAAzhB,EAAA0H,IAQ9B,IAAAwa,EAAAhiB,EACA,OAAAnD,KAAA8kB,iBAAAK,OAAA9a,EAAAM,GAAAkG,KAAA,SAAAmU,GAOA,OANYjnB,OAAA8T,EAAA,EAAA9T,CAAqBinB,EAAA,GAAAG,OAAA9a,EAAA,CACjClG,SAAA,EACA+gB,WAAA,EACA7hB,KAAA,YAEA2hB,EAAAphB,MAAiCmhB,EAAA,EAAQxf,MACtBsX,EAAA,EAAWC,QAAAL,EAAAiI,YAAAM,EAAAra,OAM9BqZ,EAAA/kB,UAAAylB,YAAA,SAAAzhB,EAAA0H,GACA,OAAe+H,EAAA,EAAgB,GAAGzP,EAAA,CAAUK,SAAAqH,KAAArH,YAK5C0gB,EAAA/kB,UAAA6lB,iBAAA,SAAA5hB,EAAAU,EAAA+G,QACA,IAAA/G,IAA+BA,EAASmhB,EAAA,EAAQK,MAChD,IAAAniB,EAAA,CACAK,SAAAqH,KAAArH,SACAM,QACAV,WAEA,GAAAlD,KAAAsR,SAAA+T,kBAAA1a,KAAAnF,mBAAA,CACA,IAAAoN,EAA6B7U,OAAA0mB,EAAA,EAAA1mB,CAAkB4M,EAAAnF,oBAC/CqN,EAA2B9U,OAAAymB,EAAA,EAAAzmB,CAAqB6U,EAAAtK,OAChDrF,EAAA2P,WAAA,CACAE,OAAAD,GAGA,OAAegK,EAAA,EAAWC,QAAA7Z,IAE1B+gB,EA/GkB,CAgHhBsB,EAAA,WC3HFroB,EAAAU,EAAA0B,EAAA,sBAAAkmB,IAWA,IAAIA,EAAa,SAAA9G,GAOjB,SAAA+G,EAAA3X,GAEA,YADA,IAAAA,IAAiCA,EAAA,IACjC4Q,EAAAjhB,KAAAwC,KAAiC+jB,EAAclW,IAAA7N,KAgD/C,OAxDI0S,EAAA,EAAiB8S,EAAA/G,GAarB+G,EAAAvmB,UAAAwmB,cAAA,SAAAxiB,EAAAuG,EAAAmB,GAQA,OAPA1H,EAAAyiB,SAAAziB,EAAAyiB,UAAA,aACAziB,EAAA0iB,IAAoBjT,EAAA,EAAgB,GAAGzP,EAAA0iB,IAAA,CAAc/nB,KAAOoM,EAAA,EAAQ4b,SAAYlT,EAAA,EAAgBzP,EAAA0iB,KAAA1iB,EAAA0iB,IAAAC,UAAA,IAChG,CACAhoB,KAAA,sBACAoM,QAA6BA,EAAA,KAE7BA,QAAyBA,EAAA,IACzByU,EAAAxf,UAAAwmB,cAAAjoB,KAAAwC,KAAAiD,EAAAuG,EAAAmB,IAOA6a,EAAAvmB,UAAA0Z,iBAAA,SAAA9K,QACA,IAAAA,IAAiCA,EAAA,IAEjC,IAAAnG,EAAuB3J,OAAA8T,EAAA,EAAA9T,GAAe2J,SACtC,GAAAA,EAGA,GAAA1H,KAAA6lB,aAAA,CAIA,IAAA5E,EAAApT,EAAAoT,KAAAjhB,KAAA8lB,SACA,GAAAjY,EAAAjD,QAIA,GAAAqW,EAAA,CAIA,IAAA8E,EAAAre,EAAAse,cAAA,UACAD,EAAAE,OAAA,EACAF,EAAAxN,IAAA,IAAyByI,EAAA,EAAGC,GAAAiF,wBAAArY,GAC5BA,EAAAgL,SACAkN,EAAAI,OAAAtY,EAAAgL,SAEAnR,EAAA0e,MAAA1e,EAAA2e,MAAAC,YAAAP,QATYnU,EAAA,EAAMhR,MAAA,sDAJNgR,EAAA,EAAMhR,MAAA,0DALNgR,EAAA,EAAMhR,MAAA,mEAoBlB4kB,EAzDiB,CA0Dfe,EAAA,iCCrEFtpB,EAAAU,EAAA0B,EAAA,sBAAAmnB,IAAA,IAAAzM,EAAA9c,EAAA,GAAAwpB,EAAAxpB,EAAA,IAIAupB,EAAA,WAEA,SAAAA,EAAAvF,GACAjhB,KAAAihB,MACAjhB,KAAA0mB,WAAA,IAA8BD,EAAA,EAAGxF,GA4EjC,OAzEAuF,EAAAvnB,UAAA6mB,OAAA,WACA,OAAA9lB,KAAA0mB,YAGAF,EAAAvnB,UAAA0nB,iBAAA,WACA,SAAA3mB,KAAA4mB,cAAA5mB,KAAA6mB,wBAGAL,EAAAvnB,UAAAiiB,mCAAA,WACA,IACA4F,EAAA,CACAC,WAFA/mB,KAAA0mB,WAEA3gB,KACAihB,eArBA,KAyBA,OAAAhnB,KAAA2mB,mBAAA,IAA+C5oB,OAAAgc,EAAA,EAAAhc,CAAS+oB,IAGxDN,EAAAvnB,UAAA2nB,YAAA,WACA,IAAA3F,EAAAjhB,KAAA0mB,WACA3jB,EAAAke,EAAAle,SAAAke,EAAAle,SAAA,OACA8c,EAAAoB,EAAApB,KAAA,IAAAoB,EAAApB,KAAA,GACA,OAAA9c,EAAA,KAAAke,EAAApe,KAAAgd,GAGA2G,EAAAvnB,UAAA4nB,qBAAA,WACA,IAAA5F,EAAAjhB,KAAA0mB,WACA,OAAAzF,EAAAne,KAAA,IAAAme,EAAAne,KAAA,YAAAme,EAAAnB,UAAA,WAGA0G,EAAAvnB,UAAAgoB,kBAAA,SAAAC,EAAAC,GACA,IAAAlG,EAAAjhB,KAAA0mB,WACAU,EAAA,4BAOA,OANAA,EAAAzmB,KAAA,yBAAA0K,MAAAC,WACA8b,EAAAzmB,KAAA,iBAAAumB,EAAA,IAAAC,GACAC,EAAAzmB,KAAA,cAAAsgB,EAAAlb,MACAkb,EAAArB,MACAwH,EAAAzmB,KAAA,iBAAAsgB,EAAArB,MAEA,CACAyH,eAAA,mBACAC,gBAAAF,EAAAtgB,KAAA,QAIA0f,EAAAvnB,UAAAinB,wBAAA,SAAAqB,QACA,IAAAA,IAAuCA,EAAA,IACvC,IAAAtG,EAAAjhB,KAAA0mB,WACAc,EAAAxnB,KAAA4mB,eAAA3F,EAAAne,KAAA,IAAAme,EAAAne,KAAA,6BACA2kB,EAAA,GAEA,QAAA7oB,KADA6oB,EAAA9mB,KAAA,OAAAsgB,EAAAtf,YACA4lB,EACA,YAAA3oB,EAAA,CACA,IAAA2oB,EAAAxhB,KACA,SAEAwhB,EAAAxhB,KAAAnI,MACA6pB,EAAA9mB,KAAA,QAAAkG,mBAAA0gB,EAAAxhB,KAAAnI,OAEA2pB,EAAAxhB,KAAA2hB,OACAD,EAAA9mB,KAAA,SAAAkG,mBAAA0gB,EAAAxhB,KAAA2hB,aAIAD,EAAA9mB,KAAAkG,mBAAAjI,GAAA,IAAAiI,mBAAA0gB,EAAA3oB,KAGA,OAAA6oB,EAAArnB,OACAonB,EAAA,IAAAC,EAAA3gB,KAAA,KAEA0gB,GAEAhB,EAhFA,iCCHO,IAAAmB,EADP1qB,EAAAU,EAAA0B,EAAA,sBAAAsoB,IAEA,SAAAA,GAEAA,EAAA,cAEAA,EAAA,cAEAA,EAAA,kBAEAA,EAAA,UAEAA,EAAA,YAEAA,EAAA,cAEAA,EAAA,oBAdA,CAeCA,MAAA,KAGD,SAAAA,GA2BAA,EAAAC,WApBA,SAAAhkB,GACA,OAAAA,GACA,YACA,OAAA+jB,EAAAE,MACA,WACA,OAAAF,EAAAvC,KACA,WACA,cACA,OAAAuC,EAAAG,QACA,YACA,OAAAH,EAAApiB,MACA,YACA,OAAAoiB,EAAAI,MACA,eACA,OAAAJ,EAAAK,SACA,UACA,QACA,OAAAL,EAAAM,MAxBA,CA4BCN,MAAA,mCC/CM,IAAAO,EADPjrB,EAAAU,EAAA0B,EAAA,sBAAA6oB,IAEA,SAAAA,GAEAA,EAAA,kBAEAA,EAAA,kBAEAA,EAAA,kBAEAA,EAAA,uBAEAA,EAAA,kBAEAA,EAAA,gBAZA,CAaCA,MAAA,KAGD,SAAAA,GAsBAA,EAAAC,aAfA,SAAAC,GACA,OAAAA,GAAA,KAAAA,EAAA,IACAF,EAAAG,QAEA,MAAAD,EACAF,EAAAI,UAEAF,GAAA,KAAAA,EAAA,IACAF,EAAAK,QAEAH,GAAA,IACAF,EAAAM,OAEAN,EAAAO,SApBA,CAuBCP,MAAA,mCCzCDjrB,EAAAU,EAAA0B,EAAA,sBAAAqpB,IAAAzrB,EAAAU,EAAA0B,EAAA,sBAAAspB,IAAA1rB,EAAAU,EAAA0B,EAAA,sBAAAupB,IAAA3rB,EAAAU,EAAA0B,EAAA,sBAAAwpB,IAAA,IAAAziB,EAAAnJ,EAAA,GAQO,SAAAyrB,EAAA3I,EAAA+I,GAGP,YAFA,IAAAA,IAAyBA,EAAA,GAEzB,iBAAA/I,GAAA,IAAA+I,EACA/I,EAEAA,EAAA3f,QAAA0oB,EAAA/I,IAAAgJ,OAAA,EAAAD,GAAA,MA6CO,SAAAH,EAAA9f,EAAAmgB,GACP,IAAAlpB,MAAA2I,QAAAI,GACA,SAIA,IAFA,IAAAogB,EAAA,GAEA5rB,EAAA,EAAmBA,EAAAwL,EAAAzI,OAAkB/C,IAAA,CACrC,IAAAiB,EAAAuK,EAAAxL,GACA,IACA4rB,EAAAtoB,KAAAuoB,OAAA5qB,IAEA,MAAAiC,GACA0oB,EAAAtoB,KAAA,iCAGA,OAAAsoB,EAAAniB,KAAAkiB,GAGO,SAAAJ,EAAA3kB,EAAAklB,GAEP,QADA,IAAAA,IAA+BA,EAAA,KAC/BllB,EAAA7D,OACA,6BAEA,GAAA6D,EAAA,GAAA7D,QAAA+oB,EACA,OAAAT,EAAAzkB,EAAA,GAAAklB,GAEA,QAAAC,EAAAnlB,EAAA7D,OAAwCgpB,EAAA,EAAkBA,IAAA,CAC1D,IAAA7hB,EAAAtD,EAAA+J,MAAA,EAAAob,GAAAtiB,KAAA,MACA,KAAAS,EAAAnH,OAAA+oB,GAGA,OAAAC,IAAAnlB,EAAA7D,OACAmH,EAEAmhB,EAAAnhB,EAAA4hB,GAEA,SAOO,SAAAN,EAAAvqB,EAAAgU,GACP,OAAQvU,OAAAqI,EAAA,EAAArI,CAAQuU,GAChBA,EAAA+W,KAAA/qB,GAEA,iBAAAgU,GACAhU,EAAAkc,SAAAlI,kCC3GArV,EAAAkB,EAAAkB,GAAA,IAAAiqB,EAAArsB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,kCAAAiqB,EAAA,QAAAC,EAAAtsB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,mCAAAkqB,EAAA,QAAAC,EAAAvsB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,iCAAAmqB,EAAA,mCCAAvsB,EAAAU,EAAA0B,EAAA,sBAAAoqB,IAAA,IAAA1P,EAAA9c,EAAA,GAAAkM,EAAAlM,EAAA,GAAAysB,EAAAzsB,EAAA,GAGAwsB,EAAA,WACA,SAAAA,IAEAzpB,KAAA2pB,eAAA,EAIA3pB,KAAApC,KAAA6rB,EAAAzd,GAoIA,OAjIAyd,EAAAxqB,UAAA2qB,kBAAA,SAAApjB,GACA,kBAEA,IADA,IAAApB,EAAA,GACAC,EAAA,EAA4BA,EAAAlF,UAAAC,OAAuBiF,IACnDD,EAAAC,GAAAlF,UAAAkF,GAEA,IAAAwkB,EAAAzkB,EAAA,GAQA,OAPAA,EAAA,GAAsBrH,OAAA2rB,EAAA,EAAA3rB,CAAI8rB,EAAA,CAC1B3lB,UAAA,CACA4lB,KAAA,CAA2BnP,SAAAoP,EAAAvjB,IAC3BrC,SAAA,EACAd,KAAA,gBAGAmD,EAAAnG,MAAAL,KAAAoF,KAIAqkB,EAAAxqB,UAAA+qB,SAAA,SAAAxjB,GACA,gBAAAjD,GACA,OAAAiD,EAA4BzI,OAAA2rB,EAAA,EAAA3rB,CAAIwF,EAAA,CAChCW,UAAA,CACA4lB,KAAA,CACAnP,SAAA,wBACAlF,QAAAsU,EAAAvjB,IAEArC,SAAA,EACAd,KAAA,mBAMAomB,EAAAxqB,UAAAgrB,iBAAA,SAAArb,GACA,IAAA7N,EAAqBhD,OAAAgc,EAAA,EAAAhc,GACrBmsB,EAAAnpB,EAAA6N,IAAA7N,EAAA6N,GAAA3P,UACAirB,KAAAhrB,gBAAAgrB,EAAAhrB,eAAA,sBAGQnB,OAAAoL,EAAA,EAAApL,CAAImsB,EAAA,4BAAA1jB,GACZ,gBAAAiI,EAAAb,EAAAC,GACA,IACAD,EAAAO,YAAqCpQ,OAAA2rB,EAAA,EAAA3rB,CAAI6P,EAAAO,YAAAtP,KAAA+O,GAAA,CACzC1J,UAAA,CACA4lB,KAAA,CACAnP,SAAA,cACAlF,QAAAsU,EAAAnc,GACAgB,UAEAzK,SAAA,EACAd,KAAA,gBAIA,MAAAgF,IAGA,OAAA7B,EAAAhJ,KAAAwC,KAAAyO,EAAsD1Q,OAAA2rB,EAAA,EAAA3rB,CAAI6P,EAAA,CAC1D1J,UAAA,CACA4lB,KAAA,CACAnP,SAAA,mBACAlF,QAAAsU,EAAAnc,GACAgB,UAEAzK,SAAA,EACAd,KAAA,gBAEiBwK,MAGT9P,OAAAoL,EAAA,EAAApL,CAAImsB,EAAA,+BAAA1jB,GACZ,gBAAAiI,EAAAb,EAAAC,GACA,IAAAtK,EAAAqK,EACA,IACArK,QAAAO,oBAAAP,GAEA,MAAAhD,IAGA,OAAAiG,EAAAhJ,KAAAwC,KAAAyO,EAAAlL,EAAAsK,QAQA4b,EAAAxqB,UAAAgS,UAAA,WACAjR,KAAA2pB,eAAA3pB,KAAA2pB,eACA,IAAA5oB,EAAqBhD,OAAAgc,EAAA,EAAAhc,GACbA,OAAAoL,EAAA,EAAApL,CAAIgD,EAAA,aAAAf,KAAA4pB,kBAAA/qB,KAAAmB,OACJjC,OAAAoL,EAAA,EAAApL,CAAIgD,EAAA,cAAAf,KAAA4pB,kBAAA/qB,KAAAmB,OACJjC,OAAAoL,EAAA,EAAApL,CAAIgD,EAAA,wBAAAf,KAAAgqB,SAAAnrB,KAAAmB,OACZ,CACA,cACA,SACA,OACA,mBACA,iBACA,oBACA,kBACA,cACA,aACA,qBACA,cACA,aACA,iBACA,eACA,kBACA,cACA,cACA,eACA,qBACA,SACA,YACA,eACA,gBACA,YACA,kBACA,SACA,iBACA,4BACA,wBACA2D,QAAA3D,KAAAiqB,iBAAAprB,KAAAmB,QAKAypB,EAAAzd,GAAA,WACAyd,EA3IA,GAiJA,SAAAM,EAAAnc,GACA,IACA,OAAAA,KAAAhQ,MAAA,cAEA,MAAA2C,GAGA,oDC3JAtD,EAAAU,EAAA0B,EAAA,sBAAA8qB,IAAA,IAMAC,EANAplB,EAAA/H,EAAA,GAAAoQ,EAAApQ,EAAA,GAAAqQ,EAAArQ,EAAA,IAAAotB,EAAAptB,EAAA,IAAAuQ,EAAAvQ,EAAA,GAAAwQ,EAAAxQ,EAAA,GAAAqtB,EAAArtB,EAAA,IAAAstB,EAAAttB,EAAA,IAAAutB,EAAAvtB,EAAA,GAAAwtB,EAAAxtB,EAAA,IAAAytB,EAAAztB,EAAA,GAKA8D,EAAahD,OAAAyP,EAAA,EAAAzP,GAGbosB,EAAA,WAIA,SAAAA,EAAAtc,GAIA7N,KAAApC,KAAAusB,EAAAne,GACAhM,KAAAsR,SAAwBtM,EAAA,EAAgB,CAAEvB,SAAA,EAAAknB,KAAA,EAAAtG,OAAA,EAAAuG,SAAA,EAAAC,QAAA,EAAAvG,KAAA,GAAgFzW,GAgZ1H,OA7YAsc,EAAAlrB,UAAA6rB,mBAAA,WACA,YAAA/pB,GAGA,+CAAA4C,QAAA,SAAAC,GACAA,KAAA7C,EAAA0C,SAGY1F,OAAA0P,EAAA,EAAA1P,CAAIgD,EAAA0C,QAAAG,EAAA,SAAAmnB,GAChB,kBAEA,IADA,IAAA3lB,EAAA,GACAC,EAAA,EAAoCA,EAAAlF,UAAAC,OAAuBiF,IAC3DD,EAAAC,GAAAlF,UAAAkF,GAEA,IAAA2lB,EAAA,CACAlc,SAAA,UACAgb,KAAA,CACAhkB,MAAA,CACA3F,UAA2CpC,OAAA0P,EAAA,EAAA1P,CAASqH,EAAA,IAEpDwM,OAAA,WAEAhO,MAA+BymB,EAAA,EAAQzC,WAAAhkB,GACvCV,QAAiCnF,OAAAusB,EAAA,EAAAvsB,CAAQqH,EAAA,MAEzC,WAAAxB,IACA,IAAAwB,EAAA,KACA4lB,EAAA9nB,QAAA,sBAA6EnF,OAAAusB,EAAA,EAAAvsB,CAAQqH,EAAA4I,MAAA,2BACrFgd,EAAAlB,KAAAhkB,MAAA3F,UAAkEpC,OAAA0P,EAAA,EAAA1P,CAASqH,EAAA4I,MAAA,OAG3Emc,EAAA3lB,cAAAwmB,EAAA,CACAniB,MAAAzD,EACAxB,UAGAmnB,GACA7Z,SAAAjS,UAAAoB,MAAA7C,KAAAutB,EAAAhqB,EAAA0C,QAAA2B,SAOA+kB,EAAAlrB,UAAAgsB,eAAA,WACA,aAAAlqB,IAKAA,EAAA2G,SAAAwjB,iBAAA,QAAkDntB,OAAA2sB,EAAA,EAAA3sB,CAAsB,aACxEgD,EAAA2G,SAAAwjB,iBAAA,WAAqDntB,OAAA2sB,EAAA,EAAA3sB,IAAoB,GAEzE,uBAAA4F,QAAA,SAAAiL,GACA,IAAAsb,EAAAnpB,EAAA6N,IAAA7N,EAAA6N,GAAA3P,UACAirB,KAAAhrB,gBAAAgrB,EAAAhrB,eAAA,sBAGYnB,OAAA0P,EAAA,EAAA1P,CAAImsB,EAAA,4BAAA1jB,GAChB,gBAAAiI,EAAAb,EAAAC,GAsBA,OArBAD,KAAAO,aACA,UAAAM,GAC4B1Q,OAAA0P,EAAA,EAAA1P,CAAI6P,EAAA,uBAAAud,GAChC,gBAAAloB,GAEA,OADoClF,OAAA2sB,EAAA,EAAA3sB,CAAsB,QAAtBA,CAAsBkF,GAC1DkoB,EAAA3tB,KAAAwC,KAAAiD,MAIA,aAAAwL,GAC4B1Q,OAAA0P,EAAA,EAAA1P,CAAI6P,EAAA,cAAoB7P,OAAA2sB,EAAA,EAAA3sB,MAIpD,UAAA0Q,GAC4B1Q,OAAA2sB,EAAA,EAAA3sB,CAAsB,WAAtBA,CAAsBiC,MAElD,aAAAyO,GAC4B1Q,OAAA2sB,EAAA,EAAA3sB,GAAoBiC,OAGhDwG,EAAAhJ,KAAAwC,KAAAyO,EAAAb,EAAAC,MAGY9P,OAAA0P,EAAA,EAAA1P,CAAImsB,EAAA,+BAAA1jB,GAChB,gBAAAiI,EAAAb,EAAAC,GACA,IAAAtK,EAAAqK,EACA,IACArK,QAAAO,oBAAAP,GAEA,MAAAhD,IAGA,OAAAiG,EAAAhJ,KAAAwC,KAAAyO,EAAAlL,EAAAsK,WAMAsc,EAAAlrB,UAAAmsB,iBAAA,WACartB,OAAAwsB,EAAA,EAAAxsB,IAGLA,OAAA0P,EAAA,EAAA1P,CAAIgD,EAAA,iBAAAsqB,GACZ,kBAEA,IADA,IAAAjmB,EAAA,GACAC,EAAA,EAAgCA,EAAAlF,UAAAC,OAAuBiF,IACvDD,EAAAC,GAAAlF,UAAAkF,GAEA,IAEA5C,EAFA6oB,EAAAlmB,EAAA,GACAD,EAAA,MAEA,iBAAAmmB,EACA7oB,EAAA6oB,EAEA,YAAAvqB,GAAAuqB,aAAAC,SACA9oB,EAAA6oB,EAAA7oB,IACA6oB,EAAAnmB,SACAA,EAAAmmB,EAAAnmB,SAIA1C,EAAAymB,OAAAoC,GAEAlmB,EAAA,IAAAA,EAAA,GAAAD,SACAA,EAAAC,EAAA,GAAAD,QAEA,IAAAoE,EAA6BxL,OAAAsP,EAAA,EAAAtP,GAAawM,YAC1C0W,EAAA1X,KAAAuc,SACA,GAAA7E,EAAA,CACA,IAAAuK,EAAA,IAAwCle,EAAA,EAAG2T,GAAA0F,mBAG3C,GAAA6E,GAAA/oB,EAAA+X,SAAAgR,GAIA,MAHA,SAAArmB,GAAAC,EAAA,IAAAA,EAAA,GAAAihB,MACAoF,EAAArmB,EAAA,GAAAihB,MAEAgF,EAAAhrB,MAAAU,EAAAqE,GAGA,IAAAsmB,EAAA,CACAvmB,SACA1C,OAEA,OAAA4oB,EACAhrB,MAAAU,EAAAqE,GACAyL,KAAA,SAAA8a,GAUA,OATAD,EAAAE,YAAAD,EAAA9H,OACAsG,EAAA3lB,cAAA,CACAsK,SAAA,QACAgb,KAAA4B,EACAroB,KAAA,QACqB,CACrBwF,MAAAzD,EACAumB,aAEAA,IAEAzO,MAAA,SAAAtc,GAUA,MATAupB,EAAA3lB,cAAA,CACAsK,SAAA,QACAgb,KAAA4B,EACA9nB,MAA+BymB,EAAA,EAAQ9kB,MACvClC,KAAA,QACqB,CACrBzC,QACAiI,MAAAzD,IAEAxE,QAMAupB,EAAAlrB,UAAA4sB,mBAAA,WACA,IAAApP,EAAAzc,KACA,GAAajC,OAAAwsB,EAAA,EAAAxsB,GAAb,CAGA,IAAA+tB,EAAA,SAAAvM,EAAAwM,GACA,IAAAC,EAA4BjuB,OAAAyP,EAAA,EAAAzP,CAAQgD,EAAA+S,SAAAC,MACpCkY,EAA2BluB,OAAAyP,EAAA,EAAAzP,CAAQguB,GACnCG,EAA6BnuB,OAAAyP,EAAA,EAAAzP,CAAQwhB,GAErC2M,EAAAppB,OACAopB,EAAAF,GAKA5B,EAAA2B,EAGAC,EAAAjpB,WAAAkpB,EAAAlpB,UAAAipB,EAAAnpB,OAAAopB,EAAAppB,OAEAkpB,EAAAE,EAAAjpB,UAEAgpB,EAAAjpB,WAAAmpB,EAAAnpB,UAAAipB,EAAAnpB,OAAAqpB,EAAArpB,OAEA0c,EAAA2M,EAAAlpB,UAEAmnB,EAAA3lB,cAAA,CACAsK,SAAA,aACAgb,KAAA,CACAvK,OACAwM,SAKAI,EAAAprB,EAAAqrB,WACArrB,EAAAqrB,WAAA,WAEA,IADA,IAAAhnB,EAAA,GACAC,EAAA,EAA4BA,EAAAlF,UAAAC,OAAuBiF,IACnDD,EAAAC,GAAAlF,UAAAkF,GAEA,IAAAgnB,EAAAtrB,EAAA+S,SAAAC,KAEA,GADA+X,EAAA1B,EAAAiC,GACAF,EACA,OAAAA,EAAA9rB,MAAAoc,EAAArX,IAuBQrH,OAAA0P,EAAA,EAAA1P,CAAIgD,EAAA6pB,QAAA,YAAA0B,GACJvuB,OAAA0P,EAAA,EAAA1P,CAAIgD,EAAA6pB,QAAA,eAAA0B,GAlBZ,SAAAA,EAAAC,GAGA,kBAEA,IADA,IAAAnnB,EAAA,GACAC,EAAA,EAAgCA,EAAAlF,UAAAC,OAAuBiF,IACvDD,EAAAC,GAAAlF,UAAAkF,GAEA,IAAA5C,EAAA2C,EAAAhF,OAAA,EAAAgF,EAAA,QAAAiF,EAMA,OAJA5H,GAEAqpB,EAAA1B,EAAAlB,OAAAzmB,IAEA8pB,EAAAlsB,MAAAL,KAAAoF,MAOA+kB,EAAAlrB,UAAAutB,eAAA,WACA,sBAAAzrB,EAAA,CAuBA,IAAA0rB,EAAAC,eAAAztB,UACQlB,OAAA0P,EAAA,EAAA1P,CAAI0uB,EAAA,gBAAAE,GACZ,kBAEA,IADA,IAAAvnB,EAAA,GACAC,EAAA,EAAgCA,EAAAlF,UAAAC,OAAuBiF,IACvDD,EAAAC,GAAAlF,UAAAkF,GAEA,IAAA5C,EAAA2C,EAAA,GACApF,KAAA4sB,eAAA,CACAznB,OAAAC,EAAA,GACA3C,IAAA2C,EAAA,IAEA,IAAAmE,EAA6BxL,OAAAsP,EAAA,EAAAtP,GAAawM,YAC1C0W,EAAA1X,KAAAuc,SACA,GAAA7E,EAAA,CACA,IAAAuK,EAAA,IAAwCle,EAAA,EAAG2T,GAAA0F,mBAGnB5oB,OAAAysB,EAAA,EAAAzsB,CAAQ0E,IAAA+oB,GAAA/oB,EAAA+X,SAAAgR,KAChCxrB,KAAA6sB,wBAAA,GAGA,OAAAF,EAAAtsB,MAAAL,KAAAoF,MAGQrH,OAAA0P,EAAA,EAAA1P,CAAI0uB,EAAA,gBAAAK,GACZ,kBAEA,IADA,IAAA1nB,EAAA,GACAC,EAAA,EAAgCA,EAAAlF,UAAAC,OAAuBiF,IACvDD,EAAAC,GAAAlF,UAAAkF,GAEA,IAAAif,EAAAtkB,KAOA,SAAA+sB,IACA,OAAAzI,EAAA0I,WAAA,CACA,GAAA1I,EAAAuI,uBACA,OAEA,IAGAvI,EAAAsI,iBACAtI,EAAAsI,eAAAhB,YAAAtH,EAAAT,QAGA,MAAAtjB,IAGA4pB,EAAA3lB,cAAA,CACAsK,SAAA,MACAgb,KAAAxF,EAAAsI,eACAvpB,KAAA,QACyB,CACzBihB,SA0BA,OApDAA,EAAAuI,wBACApB,EAAArmB,EAAA,IA6BA,kCAAAzB,QAAA,SAAAspB,IA/EA,SAAAA,EAAA3I,GAEA2I,KAAA3I,GAAA,mBAAAA,EAAA2I,IACgBlvB,OAAA0P,EAAA,EAAA1P,CAAIumB,EAAA2I,EAAA,SAAAzmB,GACpB,OAA2BzI,OAAA2sB,EAAA,EAAA3sB,CAAIyI,EAAA,CAC/BtC,UAAA,CACA4lB,KAAA,CACAnP,SAAAsS,EACAxX,QAAAjP,KAAA5I,MAAA,eAEAuG,SAAA,EACAd,KAAA,kBAqEA6pB,CAAAD,EAAA3I,KAEA,uBAAAA,GAAA,mBAAAA,EAAA6I,mBACoBpvB,OAAA0P,EAAA,EAAA1P,CAAIumB,EAAA,8BAAA9d,GACxB,OAA+BzI,OAAA2sB,EAAA,EAAA3sB,CAAIyI,EAAA,CACnCtC,UAAA,CACA4lB,KAAA,CACAnP,SAAA,qBACAlF,QAAAjP,KAAA5I,MAAA,eAEAuG,SAAA,EACAd,KAAA,eAEyB0pB,KAMzBzI,EAAA6I,mBAAAJ,EAEAD,EAAAzsB,MAAAL,KAAAoF,QASA+kB,EAAA3lB,cAAA,SAAAkB,EAAAiF,GACY5M,OAAAsP,EAAA,EAAAtP,GAAa8N,eAAAse,IACbpsB,OAAAsP,EAAA,EAAAtP,GAAayG,cAAAkB,EAAAiF,IAWzBwf,EAAAlrB,UAAAgS,UAAA,WACAjR,KAAAsR,SAAA7N,SACAzD,KAAA8qB,qBAEA9qB,KAAAsR,SAAAqZ,KACA3qB,KAAAirB,iBAEAjrB,KAAAsR,SAAAgT,KACAtkB,KAAAwsB,iBAEAxsB,KAAAsR,SAAA+S,OACArkB,KAAAorB,mBAEAprB,KAAAsR,SAAAsZ,SACA5qB,KAAA6rB,sBAMA1B,EAAAne,GAAA,cACAme,EAzZA,GA6ZA,SAAAsB,EAAA2B,GAEA,IACA,IAAAC,EAAAlmB,KAAA2B,MAAAskB,GACAjD,EAAA3lB,cAAA,CACAsK,SAAA,SACAxL,SAAA+pB,EAAA/pB,SACAM,MAAAypB,EAAAzpB,OAAoCymB,EAAA,EAAQzC,WAAA,SAC5C1kB,QAAqBnF,OAAAyP,EAAA,EAAAzP,CAAmBsvB,IAC/B,CACTpqB,MAAAoqB,IAGA,MAAAtkB,GACQ0hB,EAAA,EAAM7pB,MAAA,6ECnbd3D,EAAAU,EAAA0B,EAAA,sBAAAiuB,IAAA,IAAAtoB,EAAA/H,EAAA,GAAAoQ,EAAApQ,EAAA,GAAAmM,EAAAnM,EAAA,IAAAsQ,EAAAtQ,EAAA,GAAAuQ,EAAAvQ,EAAA,IAAAwQ,EAAAxQ,EAAA,GAAAqtB,EAAArtB,EAAA,GAAAswB,EAAAtwB,EAAA,GAAAuwB,EAAAvwB,EAAA,IAAAwwB,EAAAxwB,EAAA,IAOAqwB,EAAA,WAEA,SAAAA,EAAAzf,GAIA7N,KAAApC,KAAA0vB,EAAAthB,GACAhM,KAAAsR,SAAwBtM,EAAA,EAAgB,CAAE0Q,SAAA,EAAAC,sBAAA,GAA4C9H,GAoFtF,OA/EAyf,EAAAruB,UAAAgS,UAAA,WACA1L,MAAAmoB,gBAAA,GACQ3vB,OAAA0vB,EAAA,EAAA1vB,CAAU,SAAAuK,EAAA8Y,EAAAxgB,GAelB,IAAgB7C,OAAAwvB,EAAA,EAAAxvB,GAAhB,CAGA,IAAA8D,EAAuB9D,OAAAsP,EAAA,EAAAtP,GAAa8N,eAAAyhB,GACpCzrB,GACgB9D,OAAAsP,EAAA,EAAAtP,GAAauG,aAAAzC,EAAA8rB,wBAAArlB,GAAA,CAC7BwhB,KAAA,CAA2BxhB,SAC3B7C,kBAAA7E,OAIAZ,KAAAsR,SAAAoE,UACYtM,EAAA,EAAMgW,IAAA,oCACNrhB,OAAA0vB,EAAA,EAAA1vB,IAEZiC,KAAAsR,SAAAqE,uBACYvM,EAAA,EAAMgW,IAAA,iDACNrhB,OAAA0vB,EAAA,EAAA1vB,KAQZuvB,EAAAruB,UAAA0uB,wBAAA,SAAA/a,GACA,IAAa7U,OAAAwP,EAAA,EAAAxP,CAAQ6U,EAAA1P,UAAA,yBAAA0P,EAAA1O,UAAA,CAIrB,IAAAhB,EAAA0P,EAAA1P,QACA0P,EAAA1P,QACAA,EAAAtC,OAAiC7C,OAAAwP,EAAA,EAAAxP,CAAQmF,EAAAtC,MAAAsC,WAAAtC,MAAAsC,QAAA,mBAEzC,IAAAD,EAAoBlF,OAAAyvB,EAAA,EAAAzvB,CAAmB6U,GACvCkX,EAAA,CACAtrB,KAAAoU,EAAApU,MAEAoU,EAAA1P,UACA4mB,EAAA5mB,QAAA0P,EAAA1P,SAEA0P,EAAAhV,OACAksB,EAAAlsB,KAAAgV,EAAAhV,MAEA,IAAA2L,EAAqBxL,OAAAsP,EAAA,EAAAtP,GAAawM,YAClCqjB,EAAArkB,KAAAwB,aAAA6iB,gBAAA,IACAC,EAAAjb,EAAApM,SACczI,OAAAyP,EAAA,EAAAzP,CAAQoJ,KAAAC,UAAgBrJ,OAAA0P,EAAA,EAAA1P,CAAS6U,EAAApM,WAAAonB,GAC/C,GACAE,EAAA,yBAAAlb,EAAA1O,UAAA,6BAOA,OALQnG,OAAAusB,EAAA,EAAAvsB,CAAqBkF,EAAA4qB,EAAAC,EAAA,CAC7BhE,OACA3lB,SAAA,EACAd,KAAAuP,EAAA1O,YAEAjB,GAKAqqB,EAAAthB,GAAA,iBACAshB,EA3FA,iCCPArwB,EAAAU,EAAA0B,EAAA,sBAAA0uB,IAAA,IAAA/oB,EAAA/H,EAAA,GAAAoQ,EAAApQ,EAAA,IAAAqQ,EAAArQ,EAAA,GAAA+wB,EAAA/wB,EAAA,IAAAgxB,EAAAhxB,EAAA,IAIAixB,EAAA,QACAC,EAAA,EAEAJ,EAAA,WAIA,SAAAA,EAAAlgB,QACA,IAAAA,IAAiCA,EAAA,IAIjC7N,KAAApC,KAAAmwB,EAAA/hB,GACAhM,KAAAouB,KAAAvgB,EAAAjP,KAAAsvB,EACAluB,KAAAqgB,OAAAxS,EAAAwgB,OAAAF,EAyCA,OApCAJ,EAAA9uB,UAAAgS,UAAA,WACQlT,OAAAsP,EAAA,EAAAtP,CAAuB,SAAAkF,EAAA0H,GAC/B,IAAA9I,EAAuB9D,OAAAuP,EAAA,EAAAvP,GAAa8N,eAAAkiB,GACpC,OAAAlsB,EACAA,EAAAysB,SAAArrB,EAAA0H,GAEA1H,KAMA8qB,EAAA9uB,UAAAqvB,SAAA,SAAArrB,EAAA0H,GACA,KAAA1H,EAAAE,WAAAF,EAAAE,UAAAC,QAAAuH,KAAAlF,6BAAAF,OACA,OAAAtC,EAEA,IAAAsrB,EAAAvuB,KAAAwuB,eAAA7jB,EAAAlF,kBAAAzF,KAAAouB,MAEA,OADAnrB,EAAAE,UAAAC,OAAiC4B,EAAA,EAAgBupB,EAAAtrB,EAAAE,UAAAC,QACjDH,GAKA8qB,EAAA9uB,UAAAuvB,eAAA,SAAA5tB,EAAAhC,EAAA0J,GAEA,QADA,IAAAA,IAA+BA,EAAA,MAC/B1H,EAAAhC,aAAA2G,QAAA+C,EAAAlI,OAAA,GAAAJ,KAAAqgB,OACA,OAAA/X,EAEA,IAAAsK,EAAyB7U,OAAAkwB,EAAA,EAAAlwB,CAAkB6C,EAAAhC,IAC3CuE,EAAwBpF,OAAAiwB,EAAA,EAAAjwB,CAAuB6U,GAC/C,OAAA5S,KAAAwuB,eAAA5tB,EAAAhC,KAAoDoG,EAAA,EAAgB,CAAA7B,GAAAmF,KAKpEylB,EAAA/hB,GAAA,eACA+hB,EApDA,iCCPA9wB,EAAAU,EAAA0B,EAAA,sBAAAovB,IAAA,IAAAzpB,EAAA/H,EAAA,GAAAoQ,EAAApQ,EAAA,IAAAqQ,EAAArQ,EAAA,GAAAsQ,EAAAtQ,EAAA,GAGA8D,EAAahD,OAAAwP,EAAA,EAAAxP,GAEb0wB,EAAA,WACA,SAAAA,IAIAzuB,KAAApC,KAAA6wB,EAAAziB,GAyBA,OApBAyiB,EAAAxvB,UAAAgS,UAAA,WACQlT,OAAAsP,EAAA,EAAAtP,CAAuB,SAAAkF,GAC/B,GAAgBlF,OAAAuP,EAAA,EAAAvP,GAAa8N,eAAA4iB,GAAA,CAC7B,IAAA1tB,EAAA2tB,YAAA3tB,EAAA+S,SACA,OAAA7Q,EAGA,IAAA/B,EAAA+B,EAAA/B,SAAA,GAIA,OAHAA,EAAAuB,IAAAvB,EAAAuB,KAAA1B,EAAA+S,SAAAC,KACA7S,EAAAytB,QAAAztB,EAAAytB,SAAA,GACAztB,EAAAytB,QAAA,cAAA5tB,EAAA2tB,UAAAE,UACuB5pB,EAAA,EAAgB,GAAG/B,EAAA,CAAU/B,YAEpD,OAAA+B,KAMAwrB,EAAAziB,GAAA,YACAyiB,EA9BA,iCCLAxxB,EAAAU,EAAA0B,EAAA,sBAAAwvB,IAAA,IAAAC,EAAA7xB,EAAA,GAAAkM,EAAAlM,EAAA,IASO,SAAA4xB,EAAAE,EAAAlhB,IACP,IAAAA,EAAAmhB,OACQ7lB,EAAA,EAAMgW,SAEVphB,OAAA+wB,EAAA,EAAA/wB,GAAakM,WAAA,IAAA8kB,EAAAlhB,mCCbjB5Q,EAAAkB,EAAAkB,GAAApC,EAAAU,EAAA0B,EAAA,iCAAA4vB,IAAA,IAAAjqB,EAAA/H,EAAA,GAAAiyB,EAAAjyB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,6BAAA6vB,EAAA,QAAAC,EAAAlyB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,2BAAA8vB,EAAA,QAAAC,EAAAnyB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,4CAAA+vB,EAAA,QAAAC,EAAApyB,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,kCAAAgwB,EAAA,IAAApyB,EAAAU,EAAA0B,EAAA,qCAAAgwB,EAAA,IAAApyB,EAAAU,EAAA0B,EAAA,iCAAAgwB,EAAA,IAAApyB,EAAAU,EAAA0B,EAAA,mCAAAgwB,EAAA,IAAApyB,EAAAU,EAAA0B,EAAA,mCAAAgwB,EAAA,QAAAC,EAAAryB,EAAA,GAAAA,EAAAU,EAAA0B,EAAA,sCAAAiwB,EAAA,IAAAryB,EAAAU,EAAA0B,EAAA,kCAAAiwB,EAAA,IAAAryB,EAAAU,EAAA0B,EAAA,wBAAAiwB,EAAA,IAAAryB,EAAAU,EAAA0B,EAAA,0BAAA+vB,EAAA,IAAAnyB,EAAAU,EAAA0B,EAAA,+BAAAgwB,EAAA,IAAApyB,EAAAU,EAAA0B,EAAA,6BAAAgwB,EAAA,IAAApyB,EAAAU,EAAA0B,EAAA,8BAAAgwB,EAAA,IAAApyB,EAAAU,EAAA0B,EAAA,2BAAAgwB,EAAA,IAAApyB,EAAAU,EAAA0B,EAAA,4BAAAgwB,EAAA,IAAApyB,EAAAU,EAAA0B,EAAA,4BAAAgwB,EAAA,IAAApyB,EAAAU,EAAA0B,EAAA,8BAAAgwB,EAAA,QAAAE,EAAAtyB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,kCAAAkwB,EAAA,QAAAC,EAAAvyB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,wCAAAmwB,EAAA,IAAAvyB,EAAAU,EAAA0B,EAAA,8BAAAmwB,EAAA,IAAAvyB,EAAAU,EAAA0B,EAAA,yBAAAmwB,EAAA,IAAAvyB,EAAAU,EAAA0B,EAAA,gCAAAmwB,EAAA,IAAAvyB,EAAAU,EAAA0B,EAAA,2BAAAmwB,EAAA,IAAAvyB,EAAAU,EAAA0B,EAAA,qCAAAmwB,EAAA,IAAAvyB,EAAAU,EAAA0B,EAAA,0BAAAmwB,EAAA,IAAAvyB,EAAAU,EAAA0B,EAAA,0BAAAmwB,EAAA,IAAAvyB,EAAAU,EAAA0B,EAAA,yBAAAmwB,EAAA,QAAAC,EAAAxyB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,6BAAAowB,EAAA,IAAAxyB,EAAAU,EAAA0B,EAAA,gCAAAowB,EAAA,QAAAC,EAAAzyB,EAAA,GAAA0yB,EAAA1yB,EAAA,GAAA2yB,EAAA3yB,EAAA,IAAA4yB,EAAA5yB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,+BAAAwwB,IAUA,IAAAC,EAAA,GAGAC,EAAchyB,OAAA4xB,EAAA,EAAA5xB,GACdgyB,EAAAC,QAAAD,EAAAC,OAAAC,eACAH,EAAAC,EAAAC,OAAAC,cAGA,IAAAhB,EAAmBjqB,EAAA,EAAgB,GAAG8qB,EAAsBJ,EAAA,EAAkBE,iCClB9E3yB,EAAAkB,EAAAkB,GAAA,IAAA6wB,EAAAjzB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,mCAAA6wB,EAAA,QAAAC,EAAAlzB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,6BAAA8wB,EAAA,QAAAC,EAAAnzB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,gCAAA+wB,EAAA,QAAAC,EAAApzB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,iCAAAgxB,EAAA,QAAAC,EAAArzB,EAAA,IAAAA,EAAAU,EAAA0B,EAAA,8BAAAixB,EAAA,kCCAArzB,EAAAU,EAAA0B,EAAA,sBAAAkxB,IAAAtzB,EAAAU,EAAA0B,EAAA,sBAAAmxB,IAAAvzB,EAAAU,EAAA0B,EAAA,sBAAAoxB,IAAAxzB,EAAAU,EAAA0B,EAAA,sBAAAqxB,IAAA,IAAA5R,EAAA7hB,EAAA,GA2DO,SAAAszB,IACP,eAAqBxyB,OAAA+gB,EAAA,EAAA/gB,IACrB,SAEA,IAOA,OALA,IAAA4yB,QAEA,IAAApF,QAAA,IAEA,IAAAqF,UACA,EAEA,MAAArwB,GACA,UASO,SAAAiwB,IACP,QAAAD,MAIA,IADiBxyB,OAAA+gB,EAAA,EAAA/gB,GACjBsmB,MAAA1iB,WAAA+U,QAAA,UAkBO,SAAA+Z,IAKP,IAAAF,IACA,SAEA,IAKA,OAHA,IAAAhF,QAAA,KACAsF,eAAA,YAEA,EAEA,MAAAtwB,GACA,UASO,SAAAmwB,IAIP,IAAA3vB,EAAiBhD,OAAA+gB,EAAA,EAAA/gB,GACjBiY,EAAAjV,EAAAiV,OAEA8a,EAAA9a,KAAA+a,KAAA/a,EAAA+a,IAAAC,QACAC,EAAA,YAAAlwB,OAAA6pB,QAAAsG,aAAAnwB,EAAA6pB,QAAAuG,aACA,OAAAL,GAAAG,yCC3IAh0B,EAAAU,EAAA0B,EAAA,sBAAA+xB,IAAA,IAAApsB,EAAA/H,EAAA,GAAAiyB,EAAAjyB,EAAA,IAAAmM,EAAAnM,EAAA,GAAAsQ,EAAAtQ,EAAA,IAAAo0B,EAAAp0B,EAAA,IAIA8D,EAAahD,OAAAqL,EAAA,EAAArL,GAEbqzB,EAAA,SAAA3S,GAEA,SAAA2S,IACA,cAAA3S,KAAApe,MAAAL,KAAAG,YAAAH,KAmBA,OArBIgF,EAAA,EAAiBosB,EAAA3S,GAOrB2S,EAAAnyB,UAAAkiB,UAAA,SAAAle,GACA,IAAAquB,EAAA,CACAjL,KAAAlf,KAAAC,UAAAnE,GACAkC,OAAA,OAKA0rB,eAA6B9yB,OAAAwP,EAAA,EAAAxP,GAAsB,aAEnD,OAAAiC,KAAAsgB,QAAAE,IAAAzf,EAAAsjB,MAAArkB,KAAAyC,IAAA6uB,GAAAzgB,KAAA,SAAA8a,GAAiG,OACjG9H,OAAoBqL,EAAA,EAAM/G,aAAAwD,EAAA9H,aAG1BuN,EAtBA,CAuBEC,EAAA,iCC7BFp0B,EAAAU,EAAA0B,EAAA,sBAAAkyB,IAAA,IAAAvsB,EAAA/H,EAAA,GAAAiyB,EAAAjyB,EAAA,IAIAs0B,EAAA,SAAA9S,GAEA,SAAA8S,IACA,cAAA9S,KAAApe,MAAAL,KAAAG,YAAAH,KAwBA,OA1BIgF,EAAA,EAAiBusB,EAAA9S,GAOrB8S,EAAAtyB,UAAAkiB,UAAA,SAAAle,GACA,IAAAwZ,EAAAzc,KACA,OAAAA,KAAAsgB,QAAAE,IAAA,IAAA/G,QAAA,SAAAqD,EAAApD,GACA,IAAAxY,EAAA,IAAAwrB,eACAxrB,EAAAisB,mBAAA,WACA,IAAAjsB,EAAA8rB,aAGA,MAAA9rB,EAAA2iB,QACA/G,EAAA,CACA+G,OAAgCqL,EAAA,EAAM/G,aAAAjnB,EAAA2iB,UAGtCnK,EAAAxY,KAEAA,EAAAswB,KAAA,OAAA/U,EAAAha,KACAvB,EAAAuwB,KAAAtqB,KAAAC,UAAAnE,QAGAsuB,EA3BA,CAJAt0B,EAAA,IAgCE,iCChCFA,EAAAU,EAAA0B,EAAA,sBAAAqyB,IAAA,IAAA3X,EAAA9c,EAAA,IAAAkM,EAAAlM,EAAA,IAAA00B,EAAA10B,EAAA,IAMAy0B,EAAA,WAEA,SAAAA,EAAA7jB,GACA7N,KAAAsR,SAAAzD,EACA7N,KAAAsR,SAAA2P,KACYlH,EAAA,EAAMhO,KAAA,kDAElB/L,KAAA4xB,WAAA5xB,KAAAikB,kBAkCA,OA7BAyN,EAAAzyB,UAAAglB,gBAAA,WACA,WAAmB0N,EAAA,GAKnBD,EAAAzyB,UAAAslB,mBAAA,SAAAsN,EAAAC,GACA,UAAkB3oB,EAAA,EAAW,yDAK7BuoB,EAAAzyB,UAAA6lB,iBAAA,SAAAiN,EAAAxU,EAAAuU,GACA,UAAkB3oB,EAAA,EAAW,uDAK7BuoB,EAAAzyB,UAAAkiB,UAAA,SAAAle,GACAjD,KAAA4xB,WAAAzQ,UAAAle,GAAAia,MAAA,SAAA7H,GACY0E,EAAA,EAAMnZ,MAAA,8BAAAyU,MAMlBqc,EAAAzyB,UAAA+yB,aAAA,WACA,OAAAhyB,KAAA4xB,YAEAF,EAzCA,yGCHOO,EAAA,GAiDA,SAAAC,EAAArkB,GACP,IAAAskB,EAAA,GAKA,OArDO,SAAAtkB,GACP,IAAA4K,EAAA5K,EAAA4K,qBAA8D/F,EAAA,EAAgB7E,EAAA4K,sBAAA,GAC9E2Z,EAAAvkB,EAAAskB,aACAA,EAAA,GACA,GAAAryB,MAAA2I,QAAA2pB,GAAA,CACA,IAAAC,EAAAD,EAAAxrB,IAAA,SAAAvJ,GAAyE,OAAAA,EAAAO,OACzE00B,EAAA,GAEA7Z,EAAA9U,QAAA,SAAA4uB,IACA,IAAAF,EAAA3b,QAAA6b,EAAA30B,QACA,IAAA00B,EAAA5b,QAAA6b,EAAA30B,QACAu0B,EAAAxxB,KAAA4xB,GACAD,EAAA3xB,KAAA4xB,EAAA30B,SAIAw0B,EAAAzuB,QAAA,SAAA6uB,IACA,IAAAF,EAAA5b,QAAA8b,EAAA50B,QACAu0B,EAAAxxB,KAAA6xB,GACAF,EAAA3xB,KAAA6xB,EAAA50B,aAIA,uBAAAw0B,EAKA,OAAe1f,EAAA,EAAgB+F,GAJ/B0Z,EAAAC,EAAA3Z,GACA0Z,EAAAryB,MAAA2I,QAAA0pB,KAAA,CAAAA,GAKA,OAAAA,EAmBAM,CAAA5kB,GAAAlK,QAAA,SAAAmI,GACAqmB,EAAArmB,EAAAlO,MAAAkO,EAjBO,SAAAA,IACP,IAAAmmB,EAAAvb,QAAA5K,EAAAlO,QAGAkO,EAAAmF,UAA0ByhB,EAAA,EAAyBptB,EAAA,GACnD2sB,EAAAtxB,KAAAmL,EAAAlO,MACIgU,EAAA,EAAMwN,IAAA,0BAAAtT,EAAAlO,OAYV+0B,CAAA7mB,KAEAqmB,EC1DAl1B,EAAAU,EAAA0B,EAAA,sBAAAuzB,IAoCA,IAAIA,EAAU,WAOd,SAAAC,EAAAC,EAAAjlB,GAEA7N,KAAA+yB,aAAA,EACA/yB,KAAAgzB,SAAA,IAAAF,EAAAjlB,GACA7N,KAAAsR,SAAAzD,EACAA,EAAAoT,MACAjhB,KAAAizB,KAAA,IAA4BhS,EAAA,EAAGpT,EAAAoT,MAE/BjhB,KAAAkzB,cAA6BhB,EAAiBlyB,KAAAsR,UA2S9C,OAtSAuhB,EAAA5zB,UAAAmF,iBAAA,SAAAjB,EAAAwH,EAAAnB,GACA,IAAAiT,EAAAzc,KACA4K,EAAAD,KAAArH,SAcA,OAbAtD,KAAA+yB,aAAA,EACA/yB,KAAAmzB,cACA5O,mBAAAphB,EAAAwH,GACAkG,KAAA,SAAA5N,GAAoC,OAAAwZ,EAAA2W,cAAAnwB,EAAA0H,EAAAnB,KACpCqH,KAAA,SAAAwiB,GAEAzoB,EAAAyoB,KAAA/vB,SACAmZ,EAAAsW,aAAA,IAEA7V,MAAA,SAAA7H,GACYzD,EAAA,EAAMhR,MAAAyU,GAClBoH,EAAAsW,aAAA,IAEAnoB,GAKAioB,EAAA5zB,UAAAoF,eAAA,SAAAnB,EAAAU,EAAA+G,EAAAnB,GACA,IAAAiT,EAAAzc,KACA4K,EAAAD,KAAArH,SAgBA,OAfAtD,KAAA+yB,aAAA,GAC4Bh1B,OAAAif,EAAA,EAAAjf,CAAWmF,GACvClD,KAAAmzB,cAAArO,iBAAA,GAAA5hB,EAAAU,EAAA+G,GACA3K,KAAAmzB,cAAA5O,mBAAArhB,EAAAyH,IAEAkG,KAAA,SAAA5N,GAAoC,OAAAwZ,EAAA2W,cAAAnwB,EAAA0H,EAAAnB,KACpCqH,KAAA,SAAAwiB,GAEAzoB,EAAAyoB,KAAA/vB,SACAmZ,EAAAsW,aAAA,IAEA7V,MAAA,SAAA7H,GACYzD,EAAA,EAAMhR,MAAAyU,GAClBoH,EAAAsW,aAAA,IAEAnoB,GAKAioB,EAAA5zB,UAAAqF,aAAA,SAAArB,EAAA0H,EAAAnB,GACA,IAAAiT,EAAAzc,KACA4K,EAAAD,KAAArH,SAYA,OAXAtD,KAAA+yB,aAAA,EACA/yB,KAAAozB,cAAAnwB,EAAA0H,EAAAnB,GACAqH,KAAA,SAAAwiB,GAEAzoB,EAAAyoB,KAAA/vB,SACAmZ,EAAAsW,aAAA,IAEA7V,MAAA,SAAA7H,GACYzD,EAAA,EAAMhR,MAAAyU,GAClBoH,EAAAsW,aAAA,IAEAnoB,GAKAioB,EAAA5zB,UAAA6mB,OAAA,WACA,OAAA9lB,KAAAizB,MAKAJ,EAAA5zB,UAAA8L,WAAA,WACA,OAAA/K,KAAAsR,UAKAuhB,EAAA5zB,UAAA6Z,MAAA,SAAAU,GACA,IAAAiD,EAAAzc,KACA,OAAAA,KAAAszB,oBAAA9Z,GAAA3I,KAAA,SAAA0iB,GAIA,OAHA9W,EAAA+W,qBACAC,cAAAhX,EAAA+W,qBAEA/W,EAAA0W,cACAnB,eACAjZ,MAAAS,GACA3I,KAAA,SAAA6iB,GAAmD,OAAAH,GAAAG,OAMnDb,EAAA5zB,UAAA8Z,MAAA,SAAAS,GACA,IAAAiD,EAAAzc,KACA,OAAAA,KAAA8Y,MAAAU,GAAA3I,KAAA,SAAA7M,GAEA,OADAyY,EAAA1R,aAAA4oB,SAAA,EACA3vB,KAMA6uB,EAAA5zB,UAAA20B,gBAAA,WACA,OAAA5zB,KAAAkzB,eAAA,IAKAL,EAAA5zB,UAAA4M,eAAA,SAAAC,GACA,IACA,OAAA9L,KAAAkzB,cAAApnB,EAAAE,KAAA,KAEA,MAAAjD,GAEA,OADY6I,EAAA,EAAM7F,KAAA,+BAAAD,EAAAE,GAAA,4BAClB,OAIA6mB,EAAA5zB,UAAAq0B,oBAAA,SAAA9Z,GACA,IAAAiD,EAAAzc,KACA,WAAAyZ,QAAA,SAAAqD,GACA,IAAA+W,EAAA,EAEApX,EAAA+W,qBACAC,cAAAhX,EAAA+W,qBAEA/W,EAAA+W,oBAAAM,YAAA,WACArX,EAAAsW,aAIAc,GATA,EAUAra,GAAAqa,GAAAra,GACAsD,GAAA,IALAA,GAAA,IANA,MAkBA+V,EAAA5zB,UAAAk0B,YAAA,WACA,OAAAnzB,KAAAgzB,UAGAH,EAAA5zB,UAAA4mB,WAAA,WACA,WAAA7lB,KAAA+K,aAAA4oB,cAAAtpB,IAAArK,KAAAizB,MAgBAJ,EAAA5zB,UAAAwmB,cAAA,SAAAxiB,EAAAuG,EAAAmB,GACA,IAAAf,EAAA5J,KAAA+K,aAAAgpB,EAAAnqB,EAAAmqB,YAAAC,EAAApqB,EAAAoqB,QAAAC,EAAArqB,EAAAqqB,KAAAjpB,EAAApB,EAAAgkB,sBAAA,IAAA5iB,EAAA,IAAAA,EACAkpB,EAAuBxhB,EAAA,EAAgB,GAAGzP,QAC1CoH,IAAA6pB,EAAAH,kBAAA1pB,IAAA0pB,IACAG,EAAAH,oBAEA1pB,IAAA6pB,EAAAF,cAAA3pB,IAAA2pB,IACAE,EAAAF,gBAEA3pB,IAAA6pB,EAAAD,WAAA5pB,IAAA4pB,IACAC,EAAAD,QAEAC,EAAAhxB,UACAgxB,EAAAhxB,QAA+BnF,OAAAwU,EAAA,EAAAxU,CAAQm2B,EAAAhxB,QAAA0qB,IAEvC,IAAAzqB,EAAA+wB,EAAA/wB,WAAA+wB,EAAA/wB,UAAAC,QAAA8wB,EAAA/wB,UAAAC,OAAA,GACAD,KAAA7E,QACA6E,EAAA7E,MAA8BP,OAAAwU,EAAA,EAAAxU,CAAQoF,EAAA7E,MAAAsvB,IAEtC,IAAA1sB,EAAAgzB,EAAAhzB,QACAA,KAAAuB,MACAvB,EAAAuB,IAA0B1E,OAAAwU,EAAA,EAAAxU,CAAQmD,EAAAuB,IAAAmrB,SAElCvjB,IAAA6pB,EAAA5wB,WACA4wB,EAAA5wB,SAAgCvF,OAAA8T,EAAA,EAAA9T,IAEhCiC,KAAAm0B,iBAAAD,EAAAvO,KAEA,IAAA3hB,EAAqB6Y,EAAA,EAAWC,QAAAoX,GAOhC,OAJA1qB,IAEAxF,EAAAwF,EAAA0U,aAAAgW,EAAAvpB,IAEA3G,GAMA6uB,EAAA5zB,UAAAk1B,iBAAA,SAAAC,GACA,IAAAC,EAAAt2B,OAAAkG,KAAAjE,KAAAkzB,eACAkB,GAAAC,EAAAj0B,OAAA,IACAg0B,EAAAjC,aAAAkC,IAgBAxB,EAAA5zB,UAAAm0B,cAAA,SAAAnwB,EAAA0H,EAAAnB,GACA,IAAAiT,EAAAzc,KACA4J,EAAA5J,KAAA+K,aAAAupB,EAAA1qB,EAAA0qB,WAAAC,EAAA3qB,EAAA2qB,WACA,OAAAv0B,KAAA6lB,aAKA,iBAAA0O,GAAAhyB,KAAAC,SAAA+xB,EACmB1X,EAAA,EAAWnD,OAAA,qDAE9B,IAAmBmD,EAAA,EAAW,SAAAC,EAAApD,GAC9B+C,EAAAgJ,cAAAxiB,EAAAuG,EAAAmB,GAAAkG,KAAA,SAAAqjB,GACA,UAAAA,EAAA,CAIA,IAAAb,EAAAa,EACA,IAEA,GADAvpB,KAAAmf,OAAA,IAAAnf,EAAAmf,KAAAjmB,aACAywB,EAGA,OAFA7X,EAAA0W,cAAAhS,UAAAkS,QACAvW,EAAAuW,GAGA,IAAAmB,EAAAF,EAAAJ,EAAAvpB,GACA,YAAA6pB,EACwB5iB,EAAA,EAAMhR,MAAA,mEAE9B,GAA6B7C,OAAAif,EAAA,EAAAjf,CAAUy2B,GACvC/X,EAAAgY,uBAAAD,EAAA1X,EAAApD,OAEA,CAEA,WADA2Z,EAAAmB,GAIA,OAF4B5iB,EAAA,EAAMwN,IAAA,2DAClCtC,EAAA,MAIAL,EAAA0W,cAAAhS,UAAAkS,GACAvW,EAAAuW,IAGA,MAAAlwB,GACAsZ,EAAArY,iBAAAjB,EAAA,CACA2mB,KAAA,CACAjmB,YAAA,GAEA4B,kBAAAtC,IAEAuW,EAAA,2DArCAA,EAAA,8DAVmBmD,EAAA,EAAWnD,OAAA,0CAuD9BmZ,EAAA5zB,UAAAw1B,uBAAA,SAAAH,EAAAxX,EAAApD,GACA,IAAA+C,EAAAzc,KACAs0B,EACAzjB,KAAA,SAAAtC,GACA,OAAAA,GAKAkO,EAAA0W,cAAAhS,UAAA5S,GACAuO,EAAAvO,IALAmL,EAAA,wDAOAwD,MAAA,SAAA3c,GACAmZ,EAAA,4BAAAnZ,MAGAsyB,EA1Tc,iCCpCd51B,EAAAU,EAAA0B,EAAA,sBAAAq1B,IAIA,IAAAA,EAAA,WACA,SAAAA,IAEA10B,KAAA20B,YAAA,mBAAAC,QACA50B,KAAA60B,OAAA70B,KAAA20B,YAAA,IAAAC,QAAA,GAyCA,OAnCAF,EAAAz1B,UAAAyJ,QAAA,SAAAosB,GACA,GAAA90B,KAAA20B,YACA,QAAA30B,KAAA60B,OAAAE,IAAAD,KAGA90B,KAAA60B,OAAArU,IAAAsU,IACA,GAGA,QAAAz3B,EAAA,EAAuBA,EAAA2C,KAAA60B,OAAAz0B,OAAwB/C,IAAA,CAE/C,GADA2C,KAAA60B,OAAAx3B,KACAy3B,EACA,SAIA,OADA90B,KAAA60B,OAAAl0B,KAAAm0B,IACA,GAMAJ,EAAAz1B,UAAA2J,UAAA,SAAAksB,GACA,GAAA90B,KAAA20B,YACA30B,KAAA60B,OAAAG,OAAAF,QAGA,QAAAz3B,EAAA,EAA2BA,EAAA2C,KAAA60B,OAAAz0B,OAAwB/C,IACnD,GAAA2C,KAAA60B,OAAAx3B,KAAAy3B,EAAA,CACA90B,KAAA60B,OAAArd,OAAAna,EAAA,GACA,QAKAq3B,EA7CA,8FCJAz3B,EAAAkB,EAAAkB,GAAA,IAAA41B,EAAAh4B,EAAA,IAAAi4B,EAAAj4B,EAAA,IAOI+yB,IAAY,CAAE/O,IAAKngB,SACnBc,OAAOouB,OAASA,iBCRpB5yB,EAAAD,QAAA,SAAAg4B,GACA,IAAAA,EAAAC,gBAAA,CACA,IAAAh4B,EAAAW,OAAAY,OAAAw2B,GAEA/3B,EAAAi4B,WAAAj4B,EAAAi4B,SAAA,IACAt3B,OAAAC,eAAAZ,EAAA,UACAa,YAAA,EACAC,IAAA,WACA,OAAAd,EAAAE,KAGAS,OAAAC,eAAAZ,EAAA,MACAa,YAAA,EACAC,IAAA,WACA,OAAAd,EAAAC,KAGAU,OAAAC,eAAAZ,EAAA,WACAa,YAAA,IAEAb,EAAAg4B,gBAAA,EAEA,OAAAh4B,uCCtBAH,EAAAU,EAAA0B,EAAA,sBAAAi2B,IAAA,IAEAC,EAFAnvB,EAAAnJ,EAAA,IAGA,SAAAs4B,GAEAA,EAAA,kBAEAA,EAAA,oBAEAA,EAAA,oBANA,CAOCA,MAAA,KAED,IAAAD,EAAA,WACA,SAAAA,EAAA/xB,GACA,IAAAkZ,EAAAzc,KAEAA,KAAAw1B,OAAAD,EAAAE,QAEAz1B,KAAA01B,UAAA,GAEA11B,KAAA21B,SAAA,SAAAr3B,GACAme,EAAAmZ,WAAAt3B,EAAAi3B,EAAAM,WAGA71B,KAAA81B,QAAA,SAAAzgB,GACAoH,EAAAmZ,WAAAvgB,EAAAkgB,EAAAQ,WAGA/1B,KAAA41B,WAAA,SAAAt3B,EAAA03B,GACAvZ,EAAA+Y,SAAAD,EAAAE,UAGgB13B,OAAAqI,EAAA,EAAArI,CAAUO,GAC1BA,EAAAuS,KAAA4L,EAAAkZ,SAAAlZ,EAAAqZ,UAGArZ,EAAAwZ,OAAA33B,EACAme,EAAA+Y,OAAAQ,EACAvZ,EAAAyZ,sBAGAl2B,KAAAk2B,iBAAA,WACAzZ,EAAA+Y,SAAAD,EAAAE,UAGAhZ,EAAA+Y,SAAAD,EAAAQ,SAEAtZ,EAAAiZ,UAAA/xB,QAAA,SAAAwyB,GAAsD,OAAAA,EAAAC,QAAAD,EAAAC,OAAA3Z,EAAAwZ,UAItDxZ,EAAAiZ,UAAA/xB,QAAA,SAAAwyB,GAAsD,OAAAA,EAAAE,WAAAF,EAAAE,UAAA5Z,EAAAwZ,UAEtDxZ,EAAAiZ,UAAA,KAIA11B,KAAAs2B,eAAA,SAAA7gB,GACAgH,EAAAiZ,UAAAjZ,EAAAiZ,UAAA70B,OAAA4U,GACAgH,EAAAyZ,oBAEA,IACA3yB,EAAAvD,KAAA21B,SAAA31B,KAAA81B,SAEA,MAAAv1B,GACAP,KAAA81B,QAAAv1B,IA6DA,OAzDA+0B,EAAAr2B,UAAA4R,KAAA,SAAA0lB,EAAAC,GACA,IAAA/Z,EAAAzc,KAEA,WAAAs1B,EAAA,SAAAxY,EAAApD,GACA+C,EAAA6Z,eAAA,CACAF,OAAA,SAAA/gB,GACA,GAAAmhB,EAIA,IAEA,YADA1Z,EAAA0Z,EAAAnhB,IAGA,MAAA9U,GAEA,YADAmZ,EAAAnZ,QARAmZ,EAAArE,IAYAghB,UAAA,SAAAryB,GACA,GAAAuyB,EAIA,IAEA,YADAzZ,EAAAyZ,EAAAvyB,IAGA,MAAAzD,GAEA,YADAmZ,EAAAnZ,QARAuc,EAAA9Y,SAgBAsxB,EAAAr2B,UAAAie,MAAA,SAAAkZ,GAEA,OAAAp2B,KAAA6Q,KAAA,SAAA4lB,GAAyC,OAAAA,GAAcL,IAGvDd,EAAAr2B,UAAA0C,SAAA,WACA,8BAGA2zB,EAAAxY,QAAA,SAAAxe,GACA,WAAAg3B,EAAA,SAAAxY,GACAA,EAAAxe,MAIAg3B,EAAA5b,OAAA,SAAArE,GACA,WAAAigB,EAAA,SAAAlU,EAAA1H,GACAA,EAAArE,MAGAigB,EAlHA","file":"/js/err.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 82);\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Requires a module which is protected _against bundler minification.\n *\n * @param request The module path to resolve\n */\nexport function dynamicRequire(mod, request) {\n    // tslint:disable-next-line: no-unsafe-any\n    return mod.require(request);\n}\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv() {\n    // tslint:disable:strict-type-predicates\n    return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject() {\n    return (isNodeEnv()\n        ? global\n        : typeof window !== 'undefined'\n            ? window\n            : typeof self !== 'undefined'\n                ? self\n                : fallbackGlobalObject);\n}\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4() {\n    var global = getGlobalObject();\n    var crypto = global.crypto || global.msCrypto;\n    if (!(crypto === void 0) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n        // set 4 in byte 7\n        // tslint:disable-next-line:no-bitwise\n        arr[3] = (arr[3] & 0xfff) | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        // tslint:disable-next-line:no-bitwise\n        arr[4] = (arr[4] & 0x3fff) | 0x8000;\n        var pad = function (num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = \"0\" + v;\n            }\n            return v;\n        };\n        return (pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]));\n    }\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n    return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        // tslint:disable-next-line:no-bitwise\n        var r = (Math.random() * 16) | 0;\n        // tslint:disable-next-line:no-bitwise\n        var v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(url) {\n    if (!url) {\n        return {};\n    }\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) {\n        return {};\n    }\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        host: match[4],\n        path: match[5],\n        protocol: match[2],\n        relative: match[5] + query + fragment,\n    };\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event) {\n    if (event.message) {\n        return event.message;\n    }\n    if (event.exception && event.exception.values && event.exception.values[0]) {\n        var exception = event.exception.values[0];\n        if (exception.type && exception.value) {\n            return exception.type + \": \" + exception.value;\n        }\n        return exception.type || exception.value || event.event_id || '<unknown>';\n    }\n    return event.event_id || '<unknown>';\n}\n/** JSDoc */\nexport function consoleSandbox(callback) {\n    var global = getGlobalObject();\n    var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n    if (!('console' in global)) {\n        return callback();\n    }\n    var originalConsole = global.console;\n    var wrappedLevels = {};\n    // Restore all wrapped console methods\n    levels.forEach(function (level) {\n        if (level in global.console && originalConsole[level].__sentry__) {\n            wrappedLevels[level] = originalConsole[level].__sentry_wrapped__;\n            originalConsole[level] = originalConsole[level].__sentry_original__;\n        }\n    });\n    // Perform callback manipulations\n    var result = callback();\n    // Revert restoration to wrapped state\n    Object.keys(wrappedLevels).forEach(function (level) {\n        originalConsole[level] = wrappedLevels[level];\n    });\n    return result;\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @param mechanism Mechanism of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event, value, type, mechanism) {\n    if (mechanism === void 0) { mechanism = {\n        handled: true,\n        type: 'generic',\n    }; }\n    event.exception = event.exception || {};\n    event.exception.values = event.exception.values || [];\n    event.exception.values[0] = event.exception.values[0] || {};\n    event.exception.values[0].value = event.exception.values[0].value || value || '';\n    event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n    event.exception.values[0].mechanism = event.exception.values[0].mechanism || mechanism;\n}\n//# sourceMappingURL=misc.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/hub';\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\nfunction callOnHub(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    var hub = getCurrentHub();\n    if (hub && hub[method]) {\n        // tslint:disable-next-line:no-unsafe-any\n        return hub[method].apply(hub, tslib_1.__spread(args));\n    }\n    throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\nexport function captureException(exception) {\n    var syntheticException;\n    try {\n        throw new Error('Sentry syntheticException');\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureException', exception, {\n        originalException: exception,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message, level) {\n    var syntheticException;\n    try {\n        throw new Error(message);\n    }\n    catch (exception) {\n        syntheticException = exception;\n    }\n    return callOnHub('captureMessage', message, level, {\n        originalException: message,\n        syntheticException: syntheticException,\n    });\n}\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event) {\n    return callOnHub('captureEvent', event);\n}\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback) {\n    callOnHub('configureScope', callback);\n}\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb) {\n    callOnHub('addBreadcrumb', breadcrumb);\n}\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normailzed.\n */\nexport function setContext(name, context) {\n    callOnHub('setContext', name, context);\n}\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras) {\n    callOnHub('setExtras', extras);\n}\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags) {\n    callOnHub('setTags', tags);\n}\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normailzed.\n */\nexport function setExtra(key, extra) {\n    callOnHub('setExtra', key, extra);\n}\n/**\n * Set key:value that will be sent as tags data with the event.\n * @param key String key of tag\n * @param value String value of tag\n */\nexport function setTag(key, value) {\n    callOnHub('setTag', key, value);\n}\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user) {\n    callOnHub('setUser', user);\n}\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback) {\n    callOnHub('withScope', callback);\n}\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n */\nexport function _callOnClient(method) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    callOnHub.apply(void 0, tslib_1.__spread(['_invokeClient', method], args));\n}\n//# sourceMappingURL=index.js.map","import { isError, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\nexport function fill(source, name, replacement) {\n    if (!(name in source)) {\n        return;\n    }\n    var original = source[name];\n    var wrapped = replacement(original);\n    // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n    // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof wrapped === 'function') {\n        try {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __sentry__: {\n                    enumerable: false,\n                    value: true,\n                },\n                __sentry_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n                __sentry_wrapped__: {\n                    enumerable: false,\n                    value: wrapped,\n                },\n            });\n        }\n        catch (_Oo) {\n            // This can throw if multiple fill happens on a global object like XMLHttpRequest\n            // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n        }\n    }\n    source[name] = wrapped;\n}\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object) {\n    return Object.keys(object)\n        .map(\n    // tslint:disable-next-line:no-unsafe-any\n    function (key) { return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]); })\n        .join('&');\n}\n/**\n * Transforms Error object into an object literal with all it's attributes\n * attached to it.\n *\n * Based on: https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\n *\n * @param error An Error containing all relevant information\n * @returns An object with all error properties\n */\nfunction objectifyError(error) {\n    // These properties are implemented as magical getters and don't show up in `for-in` loop\n    var err = {\n        message: error.message,\n        name: error.name,\n        stack: error.stack,\n    };\n    for (var i in error) {\n        if (Object.prototype.hasOwnProperty.call(error, i)) {\n            err[i] = error[i];\n        }\n    }\n    return err;\n}\n/** Calculates bytes size of input string */\nfunction utf8Length(value) {\n    // tslint:disable-next-line:no-bitwise\n    return ~-encodeURI(value).split(/%..|./).length;\n}\n/** Calculates bytes size of input object */\nfunction jsonSize(value) {\n    return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\nexport function normalizeToSize(object, \n// Default Node.js REPL depth\ndepth, \n// 100kB, as 200kB is max payload size, so half sounds reasonable\nmaxSize) {\n    if (depth === void 0) { depth = 3; }\n    if (maxSize === void 0) { maxSize = 100 * 1024; }\n    var serialized = normalize(object, depth);\n    if (jsonSize(serialized) > maxSize) {\n        return normalizeToSize(object, depth - 1, maxSize);\n    }\n    return serialized;\n}\n/** Transforms any input value into a string form, either primitive value or a type of the input */\nfunction serializeValue(value) {\n    var type = Object.prototype.toString.call(value);\n    // Node.js REPL notation\n    if (typeof value === 'string') {\n        return value;\n    }\n    if (type === '[object Object]') {\n        return '[Object]';\n    }\n    if (type === '[object Array]') {\n        return '[Array]';\n    }\n    var normalized = normalizeValue(value);\n    return isPrimitive(normalized) ? normalized : type;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue(value, key) {\n    if (key === 'domain' && typeof value === 'object' && value._events) {\n        return '[Domain]';\n    }\n    if (key === 'domainEmitter') {\n        return '[DomainEmitter]';\n    }\n    if (typeof global !== 'undefined' && value === global) {\n        return '[Global]';\n    }\n    if (typeof window !== 'undefined' && value === window) {\n        return '[Window]';\n    }\n    if (typeof document !== 'undefined' && value === document) {\n        return '[Document]';\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof Event !== 'undefined' && value instanceof Event) {\n        return Object.getPrototypeOf(value) ? value.constructor.name : 'Event';\n    }\n    // React's SyntheticEvent thingy\n    if (isSyntheticEvent(value)) {\n        return '[SyntheticEvent]';\n    }\n    if (Number.isNaN(value)) {\n        return '[NaN]';\n    }\n    if (value === void 0) {\n        return '[undefined]';\n    }\n    if (typeof value === 'function') {\n        return \"[Function: \" + (value.name || '<unknown-function-name>') + \"]\";\n    }\n    return value;\n}\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\nexport function walk(key, value, depth, memo) {\n    if (depth === void 0) { depth = +Infinity; }\n    if (memo === void 0) { memo = new Memo(); }\n    // If we reach the maximum depth, serialize whatever has left\n    if (depth === 0) {\n        return serializeValue(value);\n    }\n    // If value implements `toJSON` method, call it and return early\n    // tslint:disable:no-unsafe-any\n    if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n        return value.toJSON();\n    }\n    // tslint:enable:no-unsafe-any\n    // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n    var normalized = normalizeValue(value, key);\n    if (isPrimitive(normalized)) {\n        return normalized;\n    }\n    // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n    var source = (isError(value) ? objectifyError(value) : value);\n    // Create an accumulator that will act as a parent for all future itterations of that branch\n    var acc = Array.isArray(value) ? [] : {};\n    // If we already walked that branch, bail out, as it's circular reference\n    if (memo.memoize(value)) {\n        return '[Circular ~]';\n    }\n    // Walk all keys of the source\n    for (var innerKey in source) {\n        // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n        if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n            continue;\n        }\n        // Recursively walk through all the child nodes\n        acc[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n    }\n    // Once walked through all the branches, remove the parent from memo storage\n    memo.unmemoize(value);\n    // Return accumulated values\n    return acc;\n}\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\nexport function normalize(input, depth) {\n    try {\n        // tslint:disable-next-line:no-unsafe-any\n        return JSON.parse(JSON.stringify(input, function (key, value) { return walk(key, value, depth); }));\n    }\n    catch (_oO) {\n        return '**non-serializable**';\n    }\n}\n//# sourceMappingURL=object.js.map","import * as tslib_1 from \"tslib\";\nimport { consoleSandbox, dynamicRequire, getGlobalObject, logger, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nvar DEFAULT_BREADCRUMBS = 30;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\nvar Hub = /** @class */ (function () {\n    /**\n     * Creates a new instance of the hub, will push one {@link Layer} into the\n     * internal stack on creation.\n     *\n     * @param client bound to the hub.\n     * @param scope bound to the hub.\n     * @param version number, higher number means higher priority.\n     */\n    function Hub(client, scope, _version) {\n        if (scope === void 0) { scope = new Scope(); }\n        if (_version === void 0) { _version = API_VERSION; }\n        this._version = _version;\n        /** Is a {@link Layer}[] containing the client and scope */\n        this._stack = [];\n        this._stack.push({ client: client, scope: scope });\n    }\n    /**\n     * Internal helper function to call a method on the top client if it exists.\n     *\n     * @param method The method to call on the client.\n     * @param args Arguments to pass to the client function.\n     */\n    Hub.prototype._invokeClient = function (method) {\n        var _a;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var top = this.getStackTop();\n        if (top && top.client && top.client[method]) {\n            (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.isOlderThan = function (version) {\n        return this._version < version;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.bindClient = function (client) {\n        var top = this.getStackTop();\n        top.client = client;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.pushScope = function () {\n        // We want to clone the content of prev scope\n        var stack = this.getStack();\n        var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n        var scope = Scope.clone(parentScope);\n        this.getStack().push({\n            client: this.getClient(),\n            scope: scope,\n        });\n        return scope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.popScope = function () {\n        return this.getStack().pop() !== undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.withScope = function (callback) {\n        var scope = this.pushScope();\n        try {\n            callback(scope);\n        }\n        finally {\n            this.popScope();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getClient = function () {\n        return this.getStackTop().client;\n    };\n    /** Returns the scope of the top stack. */\n    Hub.prototype.getScope = function () {\n        return this.getStackTop().scope;\n    };\n    /** Returns the scope stack for domains or the process. */\n    Hub.prototype.getStack = function () {\n        return this._stack;\n    };\n    /** Returns the topmost scope layer in the order domain > local > process. */\n    Hub.prototype.getStackTop = function () {\n        return this._stack[this._stack.length - 1];\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureException = function (exception, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureException', exception, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureMessage = function (message, level, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureMessage', message, level, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.captureEvent = function (event, hint) {\n        var eventId = (this._lastEventId = uuid4());\n        this._invokeClient('captureEvent', event, tslib_1.__assign({}, hint, { event_id: eventId }));\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.lastEventId = function () {\n        return this._lastEventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n        var top = this.getStackTop();\n        if (!top.scope || !top.client) {\n            return;\n        }\n        var _a = (top.client.getOptions && top.client.getOptions()) || {}, _b = _a.beforeBreadcrumb, beforeBreadcrumb = _b === void 0 ? null : _b, _c = _a.maxBreadcrumbs, maxBreadcrumbs = _c === void 0 ? DEFAULT_BREADCRUMBS : _c;\n        if (maxBreadcrumbs <= 0) {\n            return;\n        }\n        var timestamp = new Date().getTime() / 1000;\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        var finalBreadcrumb = beforeBreadcrumb\n            ? consoleSandbox(function () { return beforeBreadcrumb(mergedBreadcrumb, hint); })\n            : mergedBreadcrumb;\n        if (finalBreadcrumb === null) {\n            return;\n        }\n        top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setUser = function (user) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setUser(user);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTags = function (tags) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setTags(tags);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtras = function (extras) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setExtras(extras);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setTag = function (key, value) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setTag(key, value);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setExtra = function (key, extra) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setExtra(key, extra);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.setContext = function (name, context) {\n        var top = this.getStackTop();\n        if (!top.scope) {\n            return;\n        }\n        top.scope.setContext(name, context);\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.configureScope = function (callback) {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            callback(top.scope);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.run = function (callback) {\n        var oldHub = makeMain(this);\n        try {\n            callback(this);\n        }\n        finally {\n            makeMain(oldHub);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.getIntegration = function (integration) {\n        var client = this.getClient();\n        if (!client) {\n            return null;\n        }\n        try {\n            return client.getIntegration(integration);\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Hub.prototype.traceHeaders = function () {\n        var top = this.getStackTop();\n        if (top.scope && top.client) {\n            var span = top.scope.getSpan();\n            if (span) {\n                return {\n                    'sentry-trace': span.toTraceparent(),\n                };\n            }\n        }\n        return {};\n    };\n    return Hub;\n}());\nexport { Hub };\n/** Returns the global shim registry. */\nexport function getMainCarrier() {\n    var carrier = getGlobalObject();\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {\n        hub: undefined,\n    };\n    return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub) {\n    var registry = getMainCarrier();\n    var oldHub = getHubFromCarrier(registry);\n    setHubOnCarrier(registry, hub);\n    return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub() {\n    // Get main carrier (global for every environment)\n    var registry = getMainCarrier();\n    // If there's no hub, or its an old API, assign a new one\n    if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n        setHubOnCarrier(registry, new Hub());\n    }\n    // Prefer domains over global if they are there\n    try {\n        // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n        // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n        // for example so we do not have to shim it and use `getCurrentHub` universally.\n        var domain = dynamicRequire(module, 'domain');\n        var activeDomain = domain.active;\n        // If there no active domain, just return global hub\n        if (!activeDomain) {\n            return getHubFromCarrier(registry);\n        }\n        // If there's no hub on current domain, or its an old API, assign a new one\n        if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n            var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n            setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n        }\n        // Return hub that lives on a domain\n        return getHubFromCarrier(activeDomain);\n    }\n    catch (_Oo) {\n        // Return hub that lives on a global object\n        return getHubFromCarrier(registry);\n    }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return true;\n    }\n    return false;\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier) {\n    if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n        return carrier.__SENTRY__.hub;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = new Hub();\n    return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\nexport function setHubOnCarrier(carrier, hub) {\n    if (!carrier) {\n        return false;\n    }\n    carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n    carrier.__SENTRY__.hub = hub;\n    return true;\n}\n//# sourceMappingURL=hub.js.map","import * as tslib_1 from \"tslib\";\nimport { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { addExceptionTypeValue, isString, normalize } from '@sentry/utils';\nvar debounceDuration = 1000;\nvar keypressTimeout;\nvar lastCapturedEvent;\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    if (options === void 0) { options = {}; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // We don't wanna wrap it twice\n        if (fn.__sentry__) {\n            return fn;\n        }\n        // If this has already been wrapped in the past, return that wrapped function\n        if (fn.__sentry_wrapped__) {\n            return fn.__sentry_wrapped__;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    var sentryWrapped = function () {\n        // tslint:disable-next-line:strict-type-predicates\n        if (before && typeof before === 'function') {\n            before.apply(this, arguments);\n        }\n        var args = Array.prototype.slice.call(arguments);\n        // tslint:disable:no-unsafe-any\n        try {\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means the sentry.javascript SDK caught an error invoking your application code. This\n            //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            if (fn.handleEvent) {\n                return fn.handleEvent.apply(this, wrappedArguments);\n            }\n            return fn.apply(this, wrappedArguments);\n            // tslint:enable:no-unsafe-any\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    var processedEvent = tslib_1.__assign({}, event);\n                    if (options.mechanism) {\n                        addExceptionTypeValue(processedEvent, undefined, undefined, options.mechanism);\n                    }\n                    processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, { arguments: normalize(args, 3) });\n                    return processedEvent;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // tslint:disable-line:no-empty\n    fn.prototype = fn.prototype || {};\n    sentryWrapped.prototype = fn.prototype;\n    Object.defineProperty(fn, '__sentry_wrapped__', {\n        enumerable: false,\n        value: sentryWrapped,\n    });\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    Object.defineProperties(sentryWrapped, {\n        __sentry__: {\n            enumerable: false,\n            value: true,\n        },\n        __sentry_original__: {\n            enumerable: false,\n            value: fn,\n        },\n    });\n    // Restore original function name (not all browsers allow that)\n    try {\n        Object.defineProperty(sentryWrapped, 'name', {\n            get: function () {\n                return fn.name;\n            },\n        });\n    }\n    catch (_oO) {\n        /*no-empty*/\n    }\n    return sentryWrapped;\n}\nvar debounceTimer = 0;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param eventName the event name (e.g. \"click\")\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\nexport function breadcrumbEventHandler(eventName, debounce) {\n    if (debounce === void 0) { debounce = false; }\n    return function (event) {\n        // reset keypress timeout; e.g. triggering a 'click' after\n        // a 'keypress' will reset the keypress debounce so that a new\n        // set of keypresses can be recorded\n        keypressTimeout = undefined;\n        // It's possible this handler might trigger multiple times for the same\n        // event (e.g. event propagation through node ancestors). Ignore if we've\n        // already captured the event.\n        if (!event || lastCapturedEvent === event) {\n            return;\n        }\n        lastCapturedEvent = event;\n        var captureBreadcrumb = function () {\n            // try/catch both:\n            // - accessing event.target (see getsentry/raven-js#838, #768)\n            // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n            //   can throw an exception in some circumstances.\n            var target;\n            try {\n                target = event.target ? _htmlTreeAsString(event.target) : _htmlTreeAsString(event);\n            }\n            catch (e) {\n                target = '<unknown>';\n            }\n            if (target.length === 0) {\n                return;\n            }\n            getCurrentHub().addBreadcrumb({\n                category: \"ui.\" + eventName,\n                message: target,\n            }, {\n                event: event,\n                name: eventName,\n            });\n        };\n        if (debounceTimer) {\n            clearTimeout(debounceTimer);\n        }\n        if (debounce) {\n            debounceTimer = setTimeout(captureBreadcrumb);\n        }\n        else {\n            captureBreadcrumb();\n        }\n    };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @returns wrapped keypress events handler\n * @hidden\n */\nexport function keypressEventHandler() {\n    // TODO: if somehow user switches keypress target before\n    //       debounce timeout is triggered, we will only capture\n    //       a single breadcrumb from the FIRST target (acceptable?)\n    return function (event) {\n        var target;\n        try {\n            target = event.target;\n        }\n        catch (e) {\n            // just accessing event properties can throw an exception in some rare circumstances\n            // see: https://github.com/getsentry/raven-js/issues/838\n            return;\n        }\n        var tagName = target && target.tagName;\n        // only consider keypress events on actual input elements\n        // this will disregard keypresses targeting body (e.g. tabbing\n        // through elements, hotkeys, etc)\n        if (!tagName || (tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable)) {\n            return;\n        }\n        // record first keypress in a series, but ignore subsequent\n        // keypresses until debounce clears\n        if (!keypressTimeout) {\n            breadcrumbEventHandler('input')(event);\n        }\n        clearTimeout(keypressTimeout);\n        keypressTimeout = setTimeout(function () {\n            keypressTimeout = undefined;\n        }, debounceDuration);\n    };\n}\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlTreeAsString(elem) {\n    var currentElem = elem;\n    var MAX_TRAVERSE_HEIGHT = 5;\n    var MAX_OUTPUT_LEN = 80;\n    var out = [];\n    var height = 0;\n    var len = 0;\n    var separator = ' > ';\n    var sepLength = separator.length;\n    var nextStr;\n    while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n        nextStr = _htmlElementAsString(currentElem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || (height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN)) {\n            break;\n        }\n        out.push(nextStr);\n        len += nextStr.length;\n        currentElem = currentElem.parentNode;\n    }\n    return out.reverse().join(separator);\n}\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\nfunction _htmlElementAsString(elem) {\n    var out = [];\n    var className;\n    var classes;\n    var key;\n    var attr;\n    var i;\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push(\"#\" + elem.id);\n    }\n    className = elem.className;\n    if (className && isString(className)) {\n        classes = className.split(/\\s+/);\n        for (i = 0; i < classes.length; i++) {\n            out.push(\".\" + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n        }\n    }\n    return out.join('');\n}\n//# sourceMappingURL=helpers.js.map","/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat) {\n    switch (Object.prototype.toString.call(wat)) {\n        case '[object Error]':\n            return true;\n        case '[object Exception]':\n            return true;\n        case '[object DOMException]':\n            return true;\n        default:\n            return wat instanceof Error;\n    }\n}\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat) {\n    return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat) {\n    return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat) {\n    return Object.prototype.toString.call(wat) === '[object String]';\n}\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat) {\n    return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat) {\n    return Object.prototype.toString.call(wat) === '[object Object]';\n}\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat) {\n    return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat) {\n    // tslint:disable:no-unsafe-any\n    return Boolean(wat && wat.then && typeof wat.then === 'function');\n    // tslint:enable:no-unsafe-any\n}\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat) {\n    // tslint:disable-next-line:no-unsafe-any\n    return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n//# sourceMappingURL=is.js.map","var originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\nvar FunctionToString = /** @class */ (function () {\n    function FunctionToString() {\n        /**\n         * @inheritDoc\n         */\n        this.name = FunctionToString.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.prototype.setupOnce = function () {\n        originalFunctionToString = Function.prototype.toString;\n        Function.prototype.toString = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var context = this.__sentry__ ? this.__sentry_original__ : this;\n            // tslint:disable-next-line:no-unsafe-any\n            return originalFunctionToString.apply(context, args);\n        };\n    };\n    /**\n     * @inheritDoc\n     */\n    FunctionToString.id = 'FunctionToString';\n    return FunctionToString;\n}());\nexport { FunctionToString };\n//# sourceMappingURL=functiontostring.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils';\n// \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\nvar InboundFilters = /** @class */ (function () {\n    function InboundFilters(_options) {\n        if (_options === void 0) { _options = {}; }\n        this._options = _options;\n        /**\n         * @inheritDoc\n         */\n        this.name = InboundFilters.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            var hub = getCurrentHub();\n            if (!hub) {\n                return event;\n            }\n            var self = hub.getIntegration(InboundFilters);\n            if (self) {\n                var client = hub.getClient();\n                var clientOptions = client ? client.getOptions() : {};\n                var options = self._mergeOptions(clientOptions);\n                if (self._shouldDropEvent(event, options)) {\n                    return null;\n                }\n            }\n            return event;\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._shouldDropEvent = function (event, options) {\n        if (this._isSentryError(event, options)) {\n            logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isIgnoredError(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n            return true;\n        }\n        if (this._isBlacklistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        if (!this._isWhitelistedUrl(event, options)) {\n            logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n            return true;\n        }\n        return false;\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isSentryError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreInternal) {\n            return false;\n        }\n        try {\n            // tslint:disable-next-line:no-unsafe-any\n            return event.exception.values[0].type === 'SentryError';\n        }\n        catch (_oO) {\n            return false;\n        }\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isIgnoredError = function (event, options) {\n        if (options === void 0) { options = {}; }\n        if (!options.ignoreErrors || !options.ignoreErrors.length) {\n            return false;\n        }\n        return this._getPossibleEventMessages(event).some(function (message) {\n            // Not sure why TypeScript complains here...\n            return options.ignoreErrors.some(function (pattern) { return isMatchingPattern(message, pattern); });\n        });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isBlacklistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.blacklistUrls || !options.blacklistUrls.length) {\n            return false;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? false : options.blacklistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._isWhitelistedUrl = function (event, options) {\n        if (options === void 0) { options = {}; }\n        // TODO: Use Glob instead?\n        if (!options.whitelistUrls || !options.whitelistUrls.length) {\n            return true;\n        }\n        var url = this._getEventFilterUrl(event);\n        return !url ? true : options.whitelistUrls.some(function (pattern) { return isMatchingPattern(url, pattern); });\n    };\n    /** JSDoc */\n    InboundFilters.prototype._mergeOptions = function (clientOptions) {\n        if (clientOptions === void 0) { clientOptions = {}; }\n        return {\n            blacklistUrls: tslib_1.__spread((this._options.blacklistUrls || []), (clientOptions.blacklistUrls || [])),\n            ignoreErrors: tslib_1.__spread((this._options.ignoreErrors || []), (clientOptions.ignoreErrors || []), DEFAULT_IGNORE_ERRORS),\n            ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n            whitelistUrls: tslib_1.__spread((this._options.whitelistUrls || []), (clientOptions.whitelistUrls || [])),\n        };\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getPossibleEventMessages = function (event) {\n        if (event.message) {\n            return [event.message];\n        }\n        if (event.exception) {\n            try {\n                // tslint:disable-next-line:no-unsafe-any\n                var _a = event.exception.values[0], type = _a.type, value = _a.value;\n                return [\"\" + value, type + \": \" + value];\n            }\n            catch (oO) {\n                logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n                return [];\n            }\n        }\n        return [];\n    };\n    /** JSDoc */\n    InboundFilters.prototype._getEventFilterUrl = function (event) {\n        try {\n            if (event.stacktrace) {\n                // tslint:disable:no-unsafe-any\n                var frames_1 = event.stacktrace.frames;\n                return frames_1[frames_1.length - 1].filename;\n            }\n            if (event.exception) {\n                // tslint:disable:no-unsafe-any\n                var frames_2 = event.exception.values[0].stacktrace.frames;\n                return frames_2[frames_2.length - 1].filename;\n            }\n            return null;\n        }\n        catch (oO) {\n            logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    InboundFilters.id = 'InboundFilters';\n    return InboundFilters;\n}());\nexport { InboundFilters };\n//# sourceMappingURL=inboundfilters.js.map","export { addBreadcrumb, captureException, captureEvent, captureMessage, configureScope, setContext, setExtra, setExtras, setTag, setTags, setUser, withScope, } from '@sentry/minimal';\nexport { addGlobalEventProcessor, getCurrentHub, Hub, getHubFromCarrier, Scope } from '@sentry/hub';\nexport { API } from './api';\nexport { BaseClient } from './baseclient';\nexport { BaseBackend } from './basebackend';\nexport { Dsn } from './dsn';\nexport { initAndBind } from './sdk';\nexport { NoopTransport } from './transports/noop';\nimport * as Integrations from './integrations';\nexport { Integrations };\n//# sourceMappingURL=index.js.map","// tslint:disable\nimport * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isError, isErrorEvent, normalize } from '@sentry/utils';\n/**\n * TraceKit - Cross brower stack traces\n *\n * This was originally forked from github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n *\n * NOTE: Last merge with upstream repository\n * Jul 11,2018 - #f03357c\n *\n * https://github.com/csnover/TraceKit\n * @license MIT\n * @namespace TraceKit\n */\nvar window = getGlobalObject();\nvar TraceKit = {\n    _report: false,\n    _collectWindowErrors: false,\n    _computeStackTrace: false,\n    _linesOfContext: false,\n};\n// var TraceKit: TraceKitInterface = {};\n// var TraceKit = {};\n// global reference to slice\nvar UNKNOWN_FUNCTION = '?';\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\n/**\n * A better form of hasOwnProperty<br/>\n * Example: `_has(MainHostObject, property) === true/false`\n *\n * @param {Object} object to check property\n * @param {string} key to check\n * @return {Boolean} true if the object has the key and it is not inherited\n */\nfunction _has(object, key) {\n    return Object.prototype.hasOwnProperty.call(object, key);\n}\n/**\n * A safe form of location.href<br/>\n *\n * @return {string} location.href\n */\nfunction getLocationHref() {\n    if (typeof document === 'undefined' || document.location == null)\n        return '';\n    return document.location.href;\n}\n/**\n * Cross-browser processing of unhandled exceptions\n *\n * Syntax:\n * ```js\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n * ```\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *     on top frame; column number is not guaranteed\n *   - Opera: full stack trace with line and column numbers\n *   - Chrome: full stack trace with line and column numbers\n *   - Safari: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *   - IE: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit._computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a TraceKit.StackTrace object as described in the\n * TraceKit._computeStackTrace docs.\n *\n * @memberof TraceKit\n * @namespace\n */\nTraceKit._report = (function reportModuleWrapper() {\n    var handlers = [], lastException = null, lastExceptionStack = null;\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     * @memberof TraceKit.report\n     */\n    function _subscribe(handler) {\n        // NOTE: We call both handlers manually in browser/integrations/globalhandler.ts\n        // So user can choose which one he wants to attach\n        // installGlobalHandler();\n        // installGlobalUnhandledRejectionHandler();\n        handlers.push(handler);\n    }\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {TraceKit.StackTrace} stack\n     * @param {boolean} isWindowError Is this a top-level window error?\n     * @param {Error=} error The error that's being handled (if available, null otherwise)\n     * @memberof TraceKit.report\n     * @throws An exception if an error occurs while calling an handler.\n     */\n    function _notifyHandlers(stack, isWindowError, error) {\n        var exception = null;\n        if (isWindowError && !TraceKit._collectWindowErrors) {\n            return;\n        }\n        for (var i in handlers) {\n            if (_has(handlers, i)) {\n                try {\n                    handlers[i](stack, isWindowError, error);\n                }\n                catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n        if (exception) {\n            throw exception;\n        }\n    }\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error occurred.\n     * @param {(number|string)=} columnNo The column number at which the error occurred.\n     * @param {Error=} errorObj The actual Error object.\n     * @memberof TraceKit.report\n     */\n    function _traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\n        var stack = null;\n        // If 'errorObj' is ErrorEvent, get real Error from inside\n        errorObj = isErrorEvent(errorObj) ? errorObj.error : errorObj;\n        // If 'message' is ErrorEvent, get real message from inside\n        message = isErrorEvent(message) ? message.message : message;\n        if (lastExceptionStack) {\n            TraceKit._computeStackTrace._augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n            processLastException();\n        }\n        else if (errorObj && isError(errorObj)) {\n            stack = TraceKit._computeStackTrace(errorObj);\n            stack.mechanism = 'onerror';\n            _notifyHandlers(stack, true, errorObj);\n        }\n        else {\n            var location = {\n                url: url,\n                line: lineNo,\n                column: columnNo,\n            };\n            var name;\n            var msg = message; // must be new var or will modify original `arguments`\n            if ({}.toString.call(message) === '[object String]') {\n                var groups = message.match(ERROR_TYPES_RE);\n                if (groups) {\n                    name = groups[1];\n                    msg = groups[2];\n                }\n            }\n            location.func = UNKNOWN_FUNCTION;\n            location.context = null;\n            stack = {\n                name: name,\n                message: msg,\n                mode: 'onerror',\n                mechanism: 'onerror',\n                stack: [\n                    tslib_1.__assign({}, location, { \n                        // Firefox sometimes doesn't return url correctly and this is an old behavior\n                        // that I prefer to port here as well.\n                        // It can be altered only here, as previously it's using `location.url` for other things — Kamil\n                        url: location.url || getLocationHref() }),\n                ],\n            };\n            _notifyHandlers(stack, true, null);\n        }\n        if (_oldOnerrorHandler) {\n            // @ts-ignore\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n        return false;\n    }\n    /**\n     * Ensures all unhandled rejections are recorded.\n     * @param {PromiseRejectionEvent} e event.\n     * @memberof TraceKit.report\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onunhandledrejection\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n     */\n    function _traceKitWindowOnUnhandledRejection(e) {\n        var err = (e && (e.detail ? e.detail.reason : e.reason)) || e;\n        var stack = TraceKit._computeStackTrace(err);\n        stack.mechanism = 'onunhandledrejection';\n        if (!stack.message) {\n            stack.message = JSON.stringify(normalize(err));\n        }\n        _notifyHandlers(stack, true, err);\n    }\n    /**\n     * Install a global onerror handler\n     * @memberof TraceKit.report\n     */\n    function _installGlobalHandler() {\n        if (_onErrorHandlerInstalled === true) {\n            return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = _traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n    /**\n     * Install a global onunhandledrejection handler\n     * @memberof TraceKit.report\n     */\n    function _installGlobalUnhandledRejectionHandler() {\n        window.onunhandledrejection = _traceKitWindowOnUnhandledRejection;\n    }\n    /**\n     * Process the most recent exception\n     * @memberof TraceKit.report\n     */\n    function processLastException() {\n        var _lastExceptionStack = lastExceptionStack, _lastException = lastException;\n        lastExceptionStack = null;\n        lastException = null;\n        _notifyHandlers(_lastExceptionStack, false, _lastException);\n    }\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     * @memberof TraceKit.report\n     * @throws An exception if an incomplete stack trace is detected (old IE browsers).\n     */\n    function _report(ex) {\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            }\n            else {\n                processLastException();\n            }\n        }\n        var stack = TraceKit._computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        setTimeout(function () {\n            if (lastException === ex) {\n                processLastException();\n            }\n        }, stack.incomplete ? 2000 : 0);\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n    }\n    _report._subscribe = _subscribe;\n    _report._installGlobalHandler = _installGlobalHandler;\n    _report._installGlobalUnhandledRejectionHandler = _installGlobalUnhandledRejectionHandler;\n    return _report;\n})();\n/**\n * An object representing a single stack frame.\n * @typedef {Object} StackFrame\n * @property {string} url The JavaScript or HTML file URL.\n * @property {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * @property {string[]?} args The arguments passed to the function, if known.\n * @property {number=} line The line number, if known.\n * @property {number=} column The column number, if known.\n * @property {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n * @memberof TraceKit\n */\n/**\n * An object representing a JavaScript stack trace.\n * @typedef {Object} StackTrace\n * @property {string} name The name of the thrown exception.\n * @property {string} message The exception error message.\n * @property {TraceKit.StackFrame[]} stack An array of stack frames.\n * @property {string} mode 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace.\n * @memberof TraceKit\n */\n/**\n * TraceKit._computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   ```js\n *   s = TraceKit._computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n *   ```\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit._computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit._computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * @memberof TraceKit\n * @namespace\n */\nTraceKit._computeStackTrace = (function _computeStackTraceWrapper() {\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.columnNumber = 69\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack trace information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceFromStackProp(ex) {\n        if (!ex || !ex.stack) {\n            return null;\n        }\n        // Chromium based browsers: Chrome, Brave, new Opera, new Edge\n        var chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[a-z]:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i, \n        // gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n        // generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n        // We need this specific case for now because we want no other regex to match.\n        gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i, winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i, \n        // Used to additionally parse URL/line/column from eval frames\n        isEval, geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i, chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/, lines = ex.stack.split('\\n'), stack = [], submatch, parts, element, reference = /^(.*) is undefined$/.exec(ex.message);\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = chrome.exec(lines[i]))) {\n                var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n                isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n                if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n                    // throw out eval line/column and use top-most line/column number\n                    parts[2] = submatch[1]; // url\n                    parts[3] = submatch[2]; // line\n                    parts[4] = submatch[3]; // column\n                }\n                element = {\n                    url: parts[2],\n                    func: parts[1] || UNKNOWN_FUNCTION,\n                    args: isNative ? [parts[2]] : [],\n                    line: parts[3] ? +parts[3] : null,\n                    column: parts[4] ? +parts[4] : null,\n                };\n            }\n            else if ((parts = winjs.exec(lines[i]))) {\n                element = {\n                    url: parts[2],\n                    func: parts[1] || UNKNOWN_FUNCTION,\n                    args: [],\n                    line: +parts[3],\n                    column: parts[4] ? +parts[4] : null,\n                };\n            }\n            else if ((parts = gecko.exec(lines[i]))) {\n                isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n                if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n                    // throw out eval line/column and use top-most line number\n                    parts[1] = parts[1] || \"eval\";\n                    parts[3] = submatch[1];\n                    parts[4] = submatch[2];\n                    parts[5] = ''; // no column when eval\n                }\n                else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n                    // FireFox uses this awesome columnNumber property for its top frame\n                    // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n                    // so adding 1\n                    // NOTE: this hack doesn't work if top-most frame is eval\n                    stack[0].column = ex.columnNumber + 1;\n                }\n                element = {\n                    url: parts[3],\n                    func: parts[1] || UNKNOWN_FUNCTION,\n                    args: parts[2] ? parts[2].split(',') : [],\n                    line: parts[4] ? +parts[4] : null,\n                    column: parts[5] ? +parts[5] : null,\n                };\n            }\n            else {\n                continue;\n            }\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n            element.context = null;\n            stack.push(element);\n        }\n        if (!stack.length) {\n            return null;\n        }\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\n            stack[0].column = null;\n        }\n        return {\n            mode: 'stack',\n            name: ex.name,\n            message: ex.message,\n            stack: stack,\n        };\n    }\n    /**\n     * Computes stack trace information from the stacktrace property.\n     * Opera 10+ uses this property.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack trace information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceFromStacktraceProp(ex) {\n        // Access and store the stacktrace property before doing ANYTHING\n        // else to it because Opera is not very good at providing it\n        // reliably in other circumstances.\n        var stacktrace = ex.stacktrace;\n        if (!stacktrace) {\n            return;\n        }\n        var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i, opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i, lines = stacktrace.split('\\n'), stack = [], parts;\n        for (var line = 0; line < lines.length; line += 2) {\n            var element = null;\n            if ((parts = opera10Regex.exec(lines[line]))) {\n                element = {\n                    url: parts[2],\n                    line: +parts[1],\n                    column: null,\n                    func: parts[3],\n                    args: [],\n                };\n            }\n            else if ((parts = opera11Regex.exec(lines[line]))) {\n                element = {\n                    url: parts[6],\n                    line: +parts[1],\n                    column: +parts[2],\n                    func: parts[3] || parts[4],\n                    args: parts[5] ? parts[5].split(',') : [],\n                };\n            }\n            if (element) {\n                if (!element.func && element.line) {\n                    element.func = UNKNOWN_FUNCTION;\n                }\n                if (element.line) {\n                    element.context = null;\n                }\n                if (!element.context) {\n                    element.context = [lines[line + 1]];\n                }\n                stack.push(element);\n            }\n        }\n        if (!stack.length) {\n            return null;\n        }\n        return {\n            mode: 'stacktrace',\n            name: ex.name,\n            message: ex.message,\n            stack: stack,\n        };\n    }\n    /**\n     * NOT TESTED.\n     * Computes stack trace information from an error message that includes\n     * the stack trace.\n     * Opera 9 and earlier use this method if the option to show stack\n     * traces is turned on in opera:config.\n     * @param {Error} ex\n     * @return {?TraceKit.StackTrace} Stack information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceFromOperaMultiLineMessage(ex) {\n        // TODO: Clean this function up\n        // Opera includes a stack trace into the exception message. An example is:\n        //\n        // Statement on line 3: Undefined variable: undefinedFunc\n        // Backtrace:\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n        //         undefinedFunc(a);\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n        //           zzz(x, y, z);\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n        //           yyy(a, a, a);\n        //   Line 1 of function script\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n        //   ...\n        var lines = ex.message.split('\\n');\n        if (lines.length < 4) {\n            return null;\n        }\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i, lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i, lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i, stack = [], scripts = window && window.document && window.document.getElementsByTagName('script'), inlineScriptBlocks = [], parts;\n        for (var s in scripts) {\n            if (_has(scripts, s) && !scripts[s].src) {\n                inlineScriptBlocks.push(scripts[s]);\n            }\n        }\n        for (var line = 2; line < lines.length; line += 2) {\n            var item = null;\n            if ((parts = lineRE1.exec(lines[line]))) {\n                item = {\n                    url: parts[2],\n                    func: parts[3],\n                    args: [],\n                    line: +parts[1],\n                    column: null,\n                };\n            }\n            else if ((parts = lineRE2.exec(lines[line]))) {\n                item = {\n                    url: parts[3],\n                    func: parts[4],\n                    args: [],\n                    line: +parts[1],\n                    column: null,\n                };\n            }\n            else if ((parts = lineRE3.exec(lines[line]))) {\n                var url = getLocationHref().replace(/#.*$/, '');\n                item = {\n                    url: url,\n                    func: '',\n                    args: [],\n                    line: parts[1],\n                    column: null,\n                };\n            }\n            if (item) {\n                if (!item.func) {\n                    item.func = UNKNOWN_FUNCTION;\n                }\n                // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n                item.context = [lines[line + 1]];\n                stack.push(item);\n            }\n        }\n        if (!stack.length) {\n            return null; // could not parse multiline exception message as Opera stack trace\n        }\n        return {\n            mode: 'multiline',\n            name: ex.name,\n            message: lines[0],\n            stack: stack,\n        };\n    }\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {TraceKit.StackTrace} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            url: url,\n            line: lineNo,\n        };\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n            if (!initial.func) {\n                initial.func = UNKNOWN_FUNCTION;\n            }\n            if (!initial.context) {\n                initial.context = null;\n            }\n            var reference = / '([^']+)' /.exec(message);\n            if (reference) {\n                initial.column = null;\n            }\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    }\n                    else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        stackInfo.stack[0].context = initial.context;\n                        return false;\n                    }\n                }\n            }\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        }\n        else {\n            stackInfo.incomplete = true;\n        }\n        return false;\n    }\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {TraceKit.StackTrace=} Stack trace information.\n     * @memberof TraceKit._computeStackTrace\n     */\n    function _computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i, stack = [], funcs = {}, recursion = false, parts, item;\n        for (var curr = _computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === _computeStackTrace || curr === TraceKit._report) {\n                continue;\n            }\n            item = {\n                url: null,\n                func: UNKNOWN_FUNCTION,\n                args: [],\n                line: null,\n                column: null,\n            };\n            if (curr.name) {\n                item.func = curr.name;\n            }\n            else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n            if (typeof item.func === 'undefined') {\n                try {\n                    item.func = parts.input.substring(0, parts.input.indexOf('{'));\n                }\n                catch (e) { }\n            }\n            if (funcs['' + curr]) {\n                recursion = true;\n            }\n            else {\n                funcs['' + curr] = true;\n            }\n            stack.push(item);\n        }\n        if (depth) {\n            stack.splice(0, depth);\n        }\n        var result = {\n            mode: 'callers',\n            name: ex.name,\n            message: ex.message,\n            stack: stack,\n        };\n        _augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     * @memberof TraceKit._computeStackTrace\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = depth == null ? 0 : +depth;\n        try {\n            // This must be tried first because Opera 10 *destroys*\n            // its stacktrace property if you try to access the stack\n            // property first!!\n            stack = _computeStackTraceFromStacktraceProp(ex);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        try {\n            stack = _computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        try {\n            stack = _computeStackTraceFromOperaMultiLineMessage(ex);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        try {\n            stack = _computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        }\n        catch (e) { }\n        return {\n            original: ex,\n            name: ex.name,\n            message: ex.message,\n            mode: 'failed',\n        };\n    }\n    computeStackTrace._augmentStackTraceWithInitialElement = _augmentStackTraceWithInitialElement;\n    computeStackTrace._computeStackTraceFromStackProp = _computeStackTraceFromStackProp;\n    return computeStackTrace;\n})();\nTraceKit._collectWindowErrors = true;\nTraceKit._linesOfContext = 11;\nvar _subscribe = TraceKit._report._subscribe;\nvar _installGlobalHandler = TraceKit._report._installGlobalHandler;\nvar _installGlobalUnhandledRejectionHandler = TraceKit._report._installGlobalUnhandledRejectionHandler;\nvar _computeStackTrace = TraceKit._computeStackTrace;\nexport { _subscribe, _installGlobalHandler, _installGlobalUnhandledRejectionHandler, _computeStackTrace };\n//# sourceMappingURL=tracekit.js.map","import { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [\n    new CoreIntegrations.InboundFilters(),\n    new CoreIntegrations.FunctionToString(),\n    new TryCatch(),\n    new Breadcrumbs(),\n    new GlobalHandlers(),\n    new LinkedErrors(),\n    new UserAgent(),\n];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\nexport function init(options) {\n    if (options === void 0) { options = {}; }\n    if (options.defaultIntegrations === undefined) {\n        options.defaultIntegrations = defaultIntegrations;\n    }\n    initAndBind(BrowserClient, options);\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\nexport function showReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!options.eventId) {\n        options.eventId = getCurrentHub().lastEventId();\n    }\n    var client = getCurrentHub().getClient();\n    if (client) {\n        client.showReportDialog(options);\n    }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\nexport function lastEventId() {\n    return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function forceLoad() {\n    // Noop\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\nexport function onLoad(callback) {\n    callback();\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function flush(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.flush(timeout);\n    }\n    return Promise.reject(false);\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\nexport function close(timeout) {\n    var client = getCurrentHub().getClient();\n    if (client) {\n        return client.close(timeout);\n    }\n    return Promise.reject(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n */\nexport function wrap(fn) {\n    // tslint:disable-next-line: no-unsafe-any\n    internalWrap(fn)();\n}\n//# sourceMappingURL=sdk.js.map","import { keysToEventMessage, normalizeToSize } from '@sentry/utils';\nimport { _computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\nexport function exceptionFromStacktrace(stacktrace) {\n    var frames = prepareFramesForEvent(stacktrace.stack);\n    var exception = {\n        type: stacktrace.name,\n        value: stacktrace.message,\n    };\n    if (frames && frames.length) {\n        exception.stacktrace = { frames: frames };\n    }\n    // tslint:disable-next-line:strict-type-predicates\n    if (exception.type === undefined && exception.value === '') {\n        exception.value = 'Unrecoverable error caught';\n    }\n    return exception;\n}\n/**\n * @hidden\n */\nexport function eventFromPlainObject(exception, syntheticException) {\n    var exceptionKeys = Object.keys(exception).sort();\n    var event = {\n        extra: {\n            __serialized__: normalizeToSize(exception),\n        },\n        message: \"Non-Error exception captured with keys: \" + keysToEventMessage(exceptionKeys),\n    };\n    if (syntheticException) {\n        var stacktrace = _computeStackTrace(syntheticException);\n        var frames_1 = prepareFramesForEvent(stacktrace.stack);\n        event.stacktrace = {\n            frames: frames_1,\n        };\n    }\n    return event;\n}\n/**\n * @hidden\n */\nexport function eventFromStacktrace(stacktrace) {\n    var exception = exceptionFromStacktrace(stacktrace);\n    return {\n        exception: {\n            values: [exception],\n        },\n    };\n}\n/**\n * @hidden\n */\nexport function prepareFramesForEvent(stack) {\n    if (!stack || !stack.length) {\n        return [];\n    }\n    var localStack = stack;\n    var firstFrameFunction = localStack[0].func || '';\n    var lastFrameFunction = localStack[localStack.length - 1].func || '';\n    // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n    if (firstFrameFunction.includes('captureMessage') || firstFrameFunction.includes('captureException')) {\n        localStack = localStack.slice(1);\n    }\n    // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n    if (lastFrameFunction.includes('sentryWrapped')) {\n        localStack = localStack.slice(0, -1);\n    }\n    // The frame where the crash happened, should be the last entry in the array\n    return localStack\n        .map(function (frame) { return ({\n        colno: frame.column,\n        filename: frame.url || localStack[0].url,\n        function: frame.func || '?',\n        in_app: true,\n        lineno: frame.line,\n    }); })\n        .slice(0, STACKTRACE_LIMIT)\n        .reverse();\n}\n//# sourceMappingURL=parsers.js.map","import { uuid4 } from '@sentry/utils';\nexport var TRACEPARENT_REGEXP = /([0-9a-f]{2})-([0-9a-f]{32})-([0-9a-f]{16})-([0-9a-f]{2})/;\n/**\n * Span containg all data about a span\n */\nvar Span = /** @class */ (function () {\n    function Span(_traceId, _spanId, _recorded, _parent) {\n        if (_traceId === void 0) { _traceId = uuid4(); }\n        if (_spanId === void 0) { _spanId = uuid4().substring(16); }\n        if (_recorded === void 0) { _recorded = false; }\n        this._traceId = _traceId;\n        this._spanId = _spanId;\n        this._recorded = _recorded;\n        this._parent = _parent;\n    }\n    /**\n     * Continues a trace\n     * @param traceparent Traceparent string\n     */\n    Span.fromTraceparent = function (traceparent) {\n        var matches = traceparent.match(TRACEPARENT_REGEXP);\n        if (matches) {\n            var parent_1 = new Span(matches[2], matches[3], matches[4] === '01' ? true : false);\n            return new Span(matches[2], undefined, undefined, parent_1);\n        }\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toTraceparent = function () {\n        return \"00-\" + this._traceId + \"-\" + this._spanId + \"-\" + (this._recorded ? '01' : '00');\n    };\n    /**\n     * @inheritDoc\n     */\n    Span.prototype.toJSON = function () {\n        return {\n            parent: (this._parent && this._parent.toJSON()) || undefined,\n            span_id: this._spanId,\n            trace_id: this._traceId,\n        };\n    };\n    return Span;\n}());\nexport { Span };\n//# sourceMappingURL=span.js.map","import * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isThenable, normalize, SyncPromise } from '@sentry/utils';\nimport { Span } from './span';\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nvar Scope = /** @class */ (function () {\n    function Scope() {\n        /** Flag if notifiying is happening. */\n        this._notifyingListeners = false;\n        /** Callback for client to receive scope changes. */\n        this._scopeListeners = [];\n        /** Callback list that will be called after {@link applyToEvent}. */\n        this._eventProcessors = [];\n        /** Array of breadcrumbs. */\n        this._breadcrumbs = [];\n        /** User */\n        this._user = {};\n        /** Tags */\n        this._tags = {};\n        /** Extra */\n        this._extra = {};\n        /** Contexts */\n        this._context = {};\n    }\n    /**\n     * Add internal on change listener. Used for sub SDKs that need to store the scope.\n     * @hidden\n     */\n    Scope.prototype.addScopeListener = function (callback) {\n        this._scopeListeners.push(callback);\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addEventProcessor = function (callback) {\n        this._eventProcessors.push(callback);\n        return this;\n    };\n    /**\n     * This will be called on every set call.\n     */\n    Scope.prototype._notifyScopeListeners = function () {\n        var _this = this;\n        if (!this._notifyingListeners) {\n            this._notifyingListeners = true;\n            setTimeout(function () {\n                _this._scopeListeners.forEach(function (callback) {\n                    callback(_this);\n                });\n                _this._notifyingListeners = false;\n            });\n        }\n    };\n    /**\n     * This will be called after {@link applyToEvent} is finished.\n     */\n    Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n        var _this = this;\n        if (index === void 0) { index = 0; }\n        return new SyncPromise(function (resolve, reject) {\n            var processor = processors[index];\n            // tslint:disable-next-line:strict-type-predicates\n            if (event === null || typeof processor !== 'function') {\n                resolve(event);\n            }\n            else {\n                var result = processor(tslib_1.__assign({}, event), hint);\n                if (isThenable(result)) {\n                    result\n                        .then(function (final) { return _this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve); })\n                        .catch(reject);\n                }\n                else {\n                    _this._notifyEventProcessors(processors, result, hint, index + 1)\n                        .then(resolve)\n                        .catch(reject);\n                }\n            }\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setUser = function (user) {\n        this._user = normalize(user);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTags = function (tags) {\n        this._tags = tslib_1.__assign({}, this._tags, normalize(tags));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTag = function (key, value) {\n        var _a;\n        this._tags = tslib_1.__assign({}, this._tags, (_a = {}, _a[key] = normalize(value), _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtras = function (extra) {\n        this._extra = tslib_1.__assign({}, this._extra, normalize(extra));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setExtra = function (key, extra) {\n        var _a;\n        this._extra = tslib_1.__assign({}, this._extra, (_a = {}, _a[key] = normalize(extra), _a));\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setFingerprint = function (fingerprint) {\n        this._fingerprint = normalize(fingerprint);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setLevel = function (level) {\n        this._level = normalize(level);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setTransaction = function (transaction) {\n        this._transaction = transaction;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setContext = function (name, context) {\n        this._context[name] = context ? normalize(context) : undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.setSpan = function (span) {\n        this._span = span;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.startSpan = function () {\n        var span = new Span();\n        this.setSpan(span);\n        return span;\n    };\n    /**\n     * Internal getter for Span, used in Hub.\n     * @hidden\n     */\n    Scope.prototype.getSpan = function () {\n        return this._span;\n    };\n    /**\n     * Inherit values from the parent scope.\n     * @param scope to clone.\n     */\n    Scope.clone = function (scope) {\n        var newScope = new Scope();\n        Object.assign(newScope, scope, {\n            _scopeListeners: [],\n        });\n        if (scope) {\n            newScope._breadcrumbs = tslib_1.__spread(scope._breadcrumbs);\n            newScope._tags = tslib_1.__assign({}, scope._tags);\n            newScope._extra = tslib_1.__assign({}, scope._extra);\n            newScope._context = tslib_1.__assign({}, scope._context);\n            newScope._user = scope._user;\n            newScope._level = scope._level;\n            newScope._span = scope._span;\n            newScope._transaction = scope._transaction;\n            newScope._fingerprint = scope._fingerprint;\n            newScope._eventProcessors = tslib_1.__spread(scope._eventProcessors);\n        }\n        return newScope;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clear = function () {\n        this._breadcrumbs = [];\n        this._tags = {};\n        this._extra = {};\n        this._user = {};\n        this._context = {};\n        this._level = undefined;\n        this._transaction = undefined;\n        this._fingerprint = undefined;\n        this._span = undefined;\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n        var timestamp = new Date().getTime() / 1000;\n        var mergedBreadcrumb = tslib_1.__assign({ timestamp: timestamp }, breadcrumb);\n        this._breadcrumbs =\n            maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n                ? tslib_1.__spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]).slice(-maxBreadcrumbs)\n                : tslib_1.__spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]);\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * @inheritDoc\n     */\n    Scope.prototype.clearBreadcrumbs = function () {\n        this._breadcrumbs = [];\n        this._notifyScopeListeners();\n        return this;\n    };\n    /**\n     * Applies fingerprint from the scope to the event if there's one,\n     * uses message if there's one instead or get rid of empty fingerprint\n     */\n    Scope.prototype._applyFingerprint = function (event) {\n        // Make sure it's an array first and we actually have something in place\n        event.fingerprint = event.fingerprint\n            ? Array.isArray(event.fingerprint)\n                ? event.fingerprint\n                : [event.fingerprint]\n            : [];\n        // If we have something on the scope, then merge it with event\n        if (this._fingerprint) {\n            event.fingerprint = event.fingerprint.concat(this._fingerprint);\n        }\n        // If we have no data at all, remove empty array default\n        if (event.fingerprint && !event.fingerprint.length) {\n            delete event.fingerprint;\n        }\n    };\n    /**\n     * Applies the current context and fingerprint to the event.\n     * Note that breadcrumbs will be added by the client.\n     * Also if the event has already breadcrumbs on it, we do not merge them.\n     * @param event Event\n     * @param hint May contain additional informartion about the original exception.\n     * @param maxBreadcrumbs number of max breadcrumbs to merged into event.\n     * @hidden\n     */\n    Scope.prototype.applyToEvent = function (event, hint) {\n        if (this._extra && Object.keys(this._extra).length) {\n            event.extra = tslib_1.__assign({}, this._extra, event.extra);\n        }\n        if (this._tags && Object.keys(this._tags).length) {\n            event.tags = tslib_1.__assign({}, this._tags, event.tags);\n        }\n        if (this._user && Object.keys(this._user).length) {\n            event.user = tslib_1.__assign({}, this._user, event.user);\n        }\n        if (this._context && Object.keys(this._context).length) {\n            event.contexts = tslib_1.__assign({}, this._context, event.contexts);\n        }\n        if (this._level) {\n            event.level = this._level;\n        }\n        if (this._transaction) {\n            event.transaction = this._transaction;\n        }\n        if (this._span) {\n            event.contexts = event.contexts || {};\n            event.contexts.trace = this._span;\n        }\n        this._applyFingerprint(event);\n        event.breadcrumbs = tslib_1.__spread((event.breadcrumbs || []), this._breadcrumbs);\n        event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n        return this._notifyEventProcessors(tslib_1.__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n    };\n    return Scope;\n}());\nexport { Scope };\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors() {\n    var global = getGlobalObject();\n    global.__SENTRY__ = global.__SENTRY__ || {};\n    global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n    return global.__SENTRY__.globalEventProcessors;\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback) {\n    getGlobalEventProcessors().push(callback);\n}\n//# sourceMappingURL=scope.js.map","import * as tslib_1 from \"tslib\";\n/** An error emitted by Sentry SDKs and related utilities. */\nvar SentryError = /** @class */ (function (_super) {\n    tslib_1.__extends(SentryError, _super);\n    function SentryError(message) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message) || this;\n        _this.message = message;\n        // tslint:disable:no-unsafe-any\n        _this.name = _newTarget.prototype.constructor.name;\n        Object.setPrototypeOf(_this, _newTarget.prototype);\n        return _this;\n    }\n    return SentryError;\n}(Error));\nexport { SentryError };\n//# sourceMappingURL=error.js.map","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","export var SDK_NAME = 'sentry.javascript.browser';\nexport var SDK_VERSION = '5.4.0';\n//# sourceMappingURL=version.js.map","import { consoleSandbox, getGlobalObject } from './misc';\n// TODO: Implement different loggers for different environments\nvar global = getGlobalObject();\n/** Prefix for logging strings */\nvar PREFIX = 'Sentry Logger ';\n/** JSDoc */\nvar Logger = /** @class */ (function () {\n    /** JSDoc */\n    function Logger() {\n        this._enabled = false;\n    }\n    /** JSDoc */\n    Logger.prototype.disable = function () {\n        this._enabled = false;\n    };\n    /** JSDoc */\n    Logger.prototype.enable = function () {\n        this._enabled = true;\n    };\n    /** JSDoc */\n    Logger.prototype.log = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.log(PREFIX + \"[Log]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.warn = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.warn(PREFIX + \"[Warn]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    /** JSDoc */\n    Logger.prototype.error = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!this._enabled) {\n            return;\n        }\n        consoleSandbox(function () {\n            global.console.error(PREFIX + \"[Error]: \" + args.join(' ')); // tslint:disable-line:no-console\n        });\n    };\n    return Logger;\n}());\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nvar logger = global.__SENTRY__.logger || (global.__SENTRY__.logger = new Logger());\nexport { logger };\n//# sourceMappingURL=logger.js.map","import * as tslib_1 from \"tslib\";\nimport { SentryError } from '@sentry/utils';\n/** Regular expression used to parse a Dsn. */\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\nvar Dsn = /** @class */ (function () {\n    /** Creates a new Dsn component */\n    function Dsn(from) {\n        if (typeof from === 'string') {\n            this._fromString(from);\n        }\n        else {\n            this._fromComponents(from);\n        }\n        this._validate();\n    }\n    /**\n     * Renders the string representation of this Dsn.\n     *\n     * By default, this will render the public representation without the password\n     * component. To get the deprecated private _representation, set `withPassword`\n     * to true.\n     *\n     * @param withPassword When set to true, the password will be included.\n     */\n    Dsn.prototype.toString = function (withPassword) {\n        if (withPassword === void 0) { withPassword = false; }\n        // tslint:disable-next-line:no-this-assignment\n        var _a = this, host = _a.host, path = _a.path, pass = _a.pass, port = _a.port, projectId = _a.projectId, protocol = _a.protocol, user = _a.user;\n        return (protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') +\n            (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId));\n    };\n    /** Parses a string into this Dsn. */\n    Dsn.prototype._fromString = function (str) {\n        var match = DSN_REGEX.exec(str);\n        if (!match) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        var _a = tslib_1.__read(match.slice(1), 6), protocol = _a[0], user = _a[1], _b = _a[2], pass = _b === void 0 ? '' : _b, host = _a[3], _c = _a[4], port = _c === void 0 ? '' : _c, lastPath = _a[5];\n        var path = '';\n        var projectId = lastPath;\n        var split = projectId.split('/');\n        if (split.length > 1) {\n            path = split.slice(0, -1).join('/');\n            projectId = split.pop();\n        }\n        Object.assign(this, { host: host, pass: pass, path: path, projectId: projectId, port: port, protocol: protocol, user: user });\n    };\n    /** Maps Dsn components into this instance. */\n    Dsn.prototype._fromComponents = function (components) {\n        this.protocol = components.protocol;\n        this.user = components.user;\n        this.pass = components.pass || '';\n        this.host = components.host;\n        this.port = components.port || '';\n        this.path = components.path || '';\n        this.projectId = components.projectId;\n    };\n    /** Validates this Dsn and throws on error. */\n    Dsn.prototype._validate = function () {\n        var _this = this;\n        ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n            if (!_this[component]) {\n                throw new SentryError(ERROR_MESSAGE);\n            }\n        });\n        if (this.protocol !== 'http' && this.protocol !== 'https') {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n        if (this.port && Number.isNaN(parseInt(this.port, 10))) {\n            throw new SentryError(ERROR_MESSAGE);\n        }\n    };\n    return Dsn;\n}());\nexport { Dsn };\n//# sourceMappingURL=dsn.js.map","import { SentryError } from './error';\n/** A simple queue that holds promises. */\nvar PromiseBuffer = /** @class */ (function () {\n    function PromiseBuffer(_limit) {\n        this._limit = _limit;\n        /** Internal set of queued Promises */\n        this._buffer = [];\n    }\n    /**\n     * Says if the buffer is ready to take more requests\n     */\n    PromiseBuffer.prototype.isReady = function () {\n        return this._limit === undefined || this.length() < this._limit;\n    };\n    /**\n     * Add a promise to the queue.\n     *\n     * @param task Can be any Promise<T>\n     * @returns The original promise.\n     */\n    PromiseBuffer.prototype.add = function (task) {\n        var _this = this;\n        if (!this.isReady()) {\n            return Promise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n        }\n        if (this._buffer.indexOf(task) === -1) {\n            this._buffer.push(task);\n        }\n        task\n            .then(function () { return _this.remove(task); })\n            .catch(function () {\n            return _this.remove(task).catch(function () {\n                // We have to add this catch here otherwise we have an unhandledPromiseRejection\n                // because it's a new Promise chain.\n            });\n        });\n        return task;\n    };\n    /**\n     * Remove a promise to the queue.\n     *\n     * @param task Can be any Promise<T>\n     * @returns Removed promise.\n     */\n    PromiseBuffer.prototype.remove = function (task) {\n        var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n        return removedTask;\n    };\n    /**\n     * This function returns the number of unresolved promises in the queue.\n     */\n    PromiseBuffer.prototype.length = function () {\n        return this._buffer.length;\n    };\n    /**\n     * This will drain the whole queue, returns true if queue is empty or drained.\n     * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n     *\n     * @param timeout Number in ms to wait until it resolves with false.\n     */\n    PromiseBuffer.prototype.drain = function (timeout) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var capturedSetTimeout = setTimeout(function () {\n                if (timeout && timeout > 0) {\n                    resolve(false);\n                }\n            }, timeout);\n            Promise.all(_this._buffer)\n                .then(function () {\n                clearTimeout(capturedSetTimeout);\n                resolve(true);\n            })\n                .catch(function () {\n                resolve(true);\n            });\n        });\n    };\n    return PromiseBuffer;\n}());\nexport { PromiseBuffer };\n//# sourceMappingURL=promisebuffer.js.map","import { API } from '@sentry/core';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n/** Base Transport class implementation */\nvar BaseTransport = /** @class */ (function () {\n    function BaseTransport(options) {\n        this.options = options;\n        /** A simple buffer holding all requests. */\n        this._buffer = new PromiseBuffer(30);\n        this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.sendEvent = function (_) {\n        throw new SentryError('Transport Class has to implement `sendEvent` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseTransport.prototype.close = function (timeout) {\n        return this._buffer.drain(timeout);\n    };\n    return BaseTransport;\n}());\nexport { BaseTransport };\n//# sourceMappingURL=base.js.map","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import { Status } from '@sentry/types';\n/** Noop transport */\nvar NoopTransport = /** @class */ (function () {\n    function NoopTransport() {\n    }\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.sendEvent = function (_) {\n        return Promise.resolve({\n            reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n            status: Status.Skipped,\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    NoopTransport.prototype.close = function (_) {\n        return Promise.resolve(true);\n    };\n    return NoopTransport;\n}());\nexport { NoopTransport };\n//# sourceMappingURL=noop.js.map","import * as tslib_1 from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isPlainObject, supportsFetch, SyncPromise, } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { _computeStackTrace } from './tracekit';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\nvar BrowserBackend = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserBackend, _super);\n    function BrowserBackend() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype._setupTransport = function () {\n        if (!this._options.dsn) {\n            // We return the noop transport here in case there is no Dsn.\n            return _super.prototype._setupTransport.call(this);\n        }\n        var transportOptions = this._options.transportOptions\n            ? this._options.transportOptions\n            : { dsn: this._options.dsn };\n        if (this._options.transport) {\n            return new this._options.transport(transportOptions);\n        }\n        if (supportsFetch()) {\n            return new FetchTransport(transportOptions);\n        }\n        return new XHRTransport(transportOptions);\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromException = function (exception, hint) {\n        var _this = this;\n        var event;\n        if (isErrorEvent(exception) && exception.error) {\n            // If it is an ErrorEvent with `error` property, extract it to get actual Error\n            var errorEvent = exception;\n            exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n            event = eventFromStacktrace(_computeStackTrace(exception));\n            return SyncPromise.resolve(this._buildEvent(event, hint));\n        }\n        if (isDOMError(exception) || isDOMException(exception)) {\n            // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n            // then we just extract the name and message, as they don't provide anything else\n            // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n            // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n            var domException = exception;\n            var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n            var message_1 = domException.message ? name_1 + \": \" + domException.message : name_1;\n            return this.eventFromMessage(message_1, Severity.Error, hint).then(function (messageEvent) {\n                addExceptionTypeValue(messageEvent, message_1);\n                return SyncPromise.resolve(_this._buildEvent(messageEvent, hint));\n            });\n        }\n        if (isError(exception)) {\n            // we have a real Error object, do nothing\n            event = eventFromStacktrace(_computeStackTrace(exception));\n            return SyncPromise.resolve(this._buildEvent(event, hint));\n        }\n        if (isPlainObject(exception) && hint && hint.syntheticException) {\n            // If it is plain Object, serialize it manually and extract options\n            // This will allow us to group events based on top-level keys\n            // which is much better than creating new group when any key/value change\n            var objectException = exception;\n            event = eventFromPlainObject(objectException, hint.syntheticException);\n            addExceptionTypeValue(event, 'Custom Object', undefined, {\n                handled: true,\n                synthetic: true,\n                type: 'generic',\n            });\n            event.level = Severity.Error;\n            return SyncPromise.resolve(this._buildEvent(event, hint));\n        }\n        // If none of previous checks were valid, then it means that\n        // it's not a DOMError/DOMException\n        // it's not a plain Object\n        // it's not a valid ErrorEvent (one with an error property)\n        // it's not an Error\n        // So bail out and capture it as a simple message:\n        var stringException = exception;\n        return this.eventFromMessage(stringException, undefined, hint).then(function (messageEvent) {\n            addExceptionTypeValue(messageEvent, \"\" + stringException, undefined, {\n                handled: true,\n                synthetic: true,\n                type: 'generic',\n            });\n            messageEvent.level = Severity.Error;\n            return SyncPromise.resolve(_this._buildEvent(messageEvent, hint));\n        });\n    };\n    /**\n     * This is an internal helper function that creates an event.\n     */\n    BrowserBackend.prototype._buildEvent = function (event, hint) {\n        return tslib_1.__assign({}, event, { event_id: hint && hint.event_id });\n    };\n    /**\n     * @inheritDoc\n     */\n    BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n        if (level === void 0) { level = Severity.Info; }\n        var event = {\n            event_id: hint && hint.event_id,\n            level: level,\n            message: message,\n        };\n        if (this._options.attachStacktrace && hint && hint.syntheticException) {\n            var stacktrace = _computeStackTrace(hint.syntheticException);\n            var frames_1 = prepareFramesForEvent(stacktrace.stack);\n            event.stacktrace = {\n                frames: frames_1,\n            };\n        }\n        return SyncPromise.resolve(event);\n    };\n    return BrowserBackend;\n}(BaseBackend));\nexport { BrowserBackend };\n//# sourceMappingURL=backend.js.map","import * as tslib_1 from \"tslib\";\nimport { API, BaseClient } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nvar BrowserClient = /** @class */ (function (_super) {\n    tslib_1.__extends(BrowserClient, _super);\n    /**\n     * Creates a new Browser SDK instance.\n     *\n     * @param options Configuration options for this SDK.\n     */\n    function BrowserClient(options) {\n        if (options === void 0) { options = {}; }\n        return _super.call(this, BrowserBackend, options) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n        event.platform = event.platform || 'javascript';\n        event.sdk = tslib_1.__assign({}, event.sdk, { name: SDK_NAME, packages: tslib_1.__spread(((event.sdk && event.sdk.packages) || []), [\n                {\n                    name: 'npm:@sentry/browser',\n                    version: SDK_VERSION,\n                },\n            ]), version: SDK_VERSION });\n        return _super.prototype._prepareEvent.call(this, event, scope, hint);\n    };\n    /**\n     * Show a report dialog to the user to send feedback to a specific event.\n     *\n     * @param options Set individual options for the dialog\n     */\n    BrowserClient.prototype.showReportDialog = function (options) {\n        if (options === void 0) { options = {}; }\n        // doesn't work without a document (React Native)\n        var document = getGlobalObject().document;\n        if (!document) {\n            return;\n        }\n        if (!this._isEnabled()) {\n            logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n            return;\n        }\n        var dsn = options.dsn || this.getDsn();\n        if (!options.eventId) {\n            logger.error('Missing `eventId` option in showReportDialog call');\n            return;\n        }\n        if (!dsn) {\n            logger.error('Missing `Dsn` option in showReportDialog call');\n            return;\n        }\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = new API(dsn).getReportDialogEndpoint(options);\n        if (options.onLoad) {\n            script.onload = options.onLoad;\n        }\n        (document.head || document.body).appendChild(script);\n    };\n    return BrowserClient;\n}(BaseClient));\nexport { BrowserClient };\n//# sourceMappingURL=client.js.map","import { urlEncode } from '@sentry/utils';\nimport { Dsn } from './dsn';\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\nvar API = /** @class */ (function () {\n    /** Create a new instance of API */\n    function API(dsn) {\n        this.dsn = dsn;\n        this._dsnObject = new Dsn(dsn);\n    }\n    /** Returns the Dsn object. */\n    API.prototype.getDsn = function () {\n        return this._dsnObject;\n    };\n    /** Returns a string with auth headers in the url to the store endpoint. */\n    API.prototype.getStoreEndpoint = function () {\n        return \"\" + this._getBaseUrl() + this.getStoreEndpointPath();\n    };\n    /** Returns the store endpoint with auth added in url encoded. */\n    API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n        var dsn = this._dsnObject;\n        var auth = {\n            sentry_key: dsn.user,\n            sentry_version: SENTRY_API_VERSION,\n        };\n        // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n        // to avoid preflight CORS requests\n        return this.getStoreEndpoint() + \"?\" + urlEncode(auth);\n    };\n    /** Returns the base path of the url including the port. */\n    API.prototype._getBaseUrl = function () {\n        var dsn = this._dsnObject;\n        var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n        var port = dsn.port ? \":\" + dsn.port : '';\n        return protocol + \"//\" + dsn.host + port;\n    };\n    /** Returns only the path component for the store endpoint. */\n    API.prototype.getStoreEndpointPath = function () {\n        var dsn = this._dsnObject;\n        return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n    };\n    /** Returns an object that can be used in request headers. */\n    API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n        var dsn = this._dsnObject;\n        var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n        header.push(\"sentry_timestamp=\" + new Date().getTime());\n        header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n        header.push(\"sentry_key=\" + dsn.user);\n        if (dsn.pass) {\n            header.push(\"sentry_secret=\" + dsn.pass);\n        }\n        return {\n            'Content-Type': 'application/json',\n            'X-Sentry-Auth': header.join(', '),\n        };\n    };\n    /** Returns the url to the report dialog endpoint. */\n    API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n        if (dialogOptions === void 0) { dialogOptions = {}; }\n        var dsn = this._dsnObject;\n        var endpoint = \"\" + this._getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n        var encodedOptions = [];\n        encodedOptions.push(\"dsn=\" + dsn.toString());\n        for (var key in dialogOptions) {\n            if (key === 'user') {\n                if (!dialogOptions.user) {\n                    continue;\n                }\n                if (dialogOptions.user.name) {\n                    encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n                }\n                if (dialogOptions.user.email) {\n                    encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n                }\n            }\n            else {\n                encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n            }\n        }\n        if (encodedOptions.length) {\n            return endpoint + \"?\" + encodedOptions.join('&');\n        }\n        return endpoint;\n    };\n    return API;\n}());\nexport { API };\n//# sourceMappingURL=api.js.map","/** JSDoc */\nexport var Severity;\n(function (Severity) {\n    /** JSDoc */\n    Severity[\"Fatal\"] = \"fatal\";\n    /** JSDoc */\n    Severity[\"Error\"] = \"error\";\n    /** JSDoc */\n    Severity[\"Warning\"] = \"warning\";\n    /** JSDoc */\n    Severity[\"Log\"] = \"log\";\n    /** JSDoc */\n    Severity[\"Info\"] = \"info\";\n    /** JSDoc */\n    Severity[\"Debug\"] = \"debug\";\n    /** JSDoc */\n    Severity[\"Critical\"] = \"critical\";\n})(Severity || (Severity = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Severity) {\n    /**\n     * Converts a string-based level into a {@link Severity}.\n     *\n     * @param level string representation of Severity\n     * @returns Severity\n     */\n    function fromString(level) {\n        switch (level) {\n            case 'debug':\n                return Severity.Debug;\n            case 'info':\n                return Severity.Info;\n            case 'warn':\n            case 'warning':\n                return Severity.Warning;\n            case 'error':\n                return Severity.Error;\n            case 'fatal':\n                return Severity.Fatal;\n            case 'critical':\n                return Severity.Critical;\n            case 'log':\n            default:\n                return Severity.Log;\n        }\n    }\n    Severity.fromString = fromString;\n})(Severity || (Severity = {}));\n//# sourceMappingURL=severity.js.map","/** The status of an event. */\nexport var Status;\n(function (Status) {\n    /** The status could not be determined. */\n    Status[\"Unknown\"] = \"unknown\";\n    /** The event was skipped due to configuration or callbacks. */\n    Status[\"Skipped\"] = \"skipped\";\n    /** The event was sent to Sentry successfully. */\n    Status[\"Success\"] = \"success\";\n    /** The client is currently rate limited and will try again later. */\n    Status[\"RateLimit\"] = \"rate_limit\";\n    /** The event could not be processed. */\n    Status[\"Invalid\"] = \"invalid\";\n    /** A server-side error ocurred during submission. */\n    Status[\"Failed\"] = \"failed\";\n})(Status || (Status = {}));\n// tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n(function (Status) {\n    /**\n     * Converts a HTTP status code into a {@link Status}.\n     *\n     * @param code The HTTP response status code.\n     * @returns The send status or {@link Status.Unknown}.\n     */\n    function fromHttpCode(code) {\n        if (code >= 200 && code < 300) {\n            return Status.Success;\n        }\n        if (code === 429) {\n            return Status.RateLimit;\n        }\n        if (code >= 400 && code < 500) {\n            return Status.Invalid;\n        }\n        if (code >= 500) {\n            return Status.Failed;\n        }\n        return Status.Unknown;\n    }\n    Status.fromHttpCode = fromHttpCode;\n})(Status || (Status = {}));\n//# sourceMappingURL=status.js.map","import { isRegExp } from './is';\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function truncate(str, max) {\n    if (max === void 0) { max = 0; }\n    // tslint:disable-next-line:strict-type-predicates\n    if (typeof str !== 'string' || max === 0) {\n        return str;\n    }\n    return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\nexport function snipLine(line, colno) {\n    var newLine = line;\n    var ll = newLine.length;\n    if (ll <= 150) {\n        return newLine;\n    }\n    if (colno > ll) {\n        colno = ll; // tslint:disable-line:no-parameter-reassignment\n    }\n    var start = Math.max(colno - 60, 0);\n    if (start < 5) {\n        start = 0;\n    }\n    var end = Math.min(start + 140, ll);\n    if (end > ll - 5) {\n        end = ll;\n    }\n    if (end === ll) {\n        start = Math.max(end - 140, 0);\n    }\n    newLine = newLine.slice(start, end);\n    if (start > 0) {\n        newLine = \"'{snip} \" + newLine;\n    }\n    if (end < ll) {\n        newLine += ' {snip}';\n    }\n    return newLine;\n}\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\nexport function safeJoin(input, delimiter) {\n    if (!Array.isArray(input)) {\n        return '';\n    }\n    var output = [];\n    // tslint:disable-next-line:prefer-for-of\n    for (var i = 0; i < input.length; i++) {\n        var value = input[i];\n        try {\n            output.push(String(value));\n        }\n        catch (e) {\n            output.push('[value cannot be serialized]');\n        }\n    }\n    return output.join(delimiter);\n}\n/** Merges provided array of keys into */\nexport function keysToEventMessage(keys, maxLength) {\n    if (maxLength === void 0) { maxLength = 40; }\n    if (!keys.length) {\n        return '[object has no keys]';\n    }\n    if (keys[0].length >= maxLength) {\n        return truncate(keys[0], maxLength);\n    }\n    for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n        var serialized = keys.slice(0, includedKeys).join(', ');\n        if (serialized.length > maxLength) {\n            continue;\n        }\n        if (includedKeys === keys.length) {\n            return serialized;\n        }\n        return truncate(serialized, maxLength);\n    }\n    return '';\n}\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\nexport function isMatchingPattern(value, pattern) {\n    if (isRegExp(pattern)) {\n        return pattern.test(value);\n    }\n    if (typeof pattern === 'string') {\n        return value.includes(pattern);\n    }\n    return false;\n}\n//# sourceMappingURL=string.js.map","export { BaseTransport } from './base';\nexport { FetchTransport } from './fetch';\nexport { XHRTransport } from './xhr';\n//# sourceMappingURL=index.js.map","import { fill, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\nvar TryCatch = /** @class */ (function () {\n    function TryCatch() {\n        /** JSDoc */\n        this._ignoreOnError = 0;\n        /**\n         * @inheritDoc\n         */\n        this.name = TryCatch.id;\n    }\n    /** JSDoc */\n    TryCatch.prototype._wrapTimeFunction = function (original) {\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var originalCallback = args[0];\n            args[0] = wrap(originalCallback, {\n                mechanism: {\n                    data: { function: getFunctionName(original) },\n                    handled: true,\n                    type: 'instrument',\n                },\n            });\n            return original.apply(this, args);\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapRAF = function (original) {\n        return function (callback) {\n            return original(wrap(callback, {\n                mechanism: {\n                    data: {\n                        function: 'requestAnimationFrame',\n                        handler: getFunctionName(original),\n                    },\n                    handled: true,\n                    type: 'instrument',\n                },\n            }));\n        };\n    };\n    /** JSDoc */\n    TryCatch.prototype._wrapEventTarget = function (target) {\n        var global = getGlobalObject();\n        var proto = global[target] && global[target].prototype;\n        if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n            return;\n        }\n        fill(proto, 'addEventListener', function (original) {\n            return function (eventName, fn, options) {\n                try {\n                    fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n                        mechanism: {\n                            data: {\n                                function: 'handleEvent',\n                                handler: getFunctionName(fn),\n                                target: target,\n                            },\n                            handled: true,\n                            type: 'instrument',\n                        },\n                    });\n                }\n                catch (err) {\n                    // can sometimes get 'Permission denied to access property \"handle Event'\n                }\n                return original.call(this, eventName, wrap(fn, {\n                    mechanism: {\n                        data: {\n                            function: 'addEventListener',\n                            handler: getFunctionName(fn),\n                            target: target,\n                        },\n                        handled: true,\n                        type: 'instrument',\n                    },\n                }), options);\n            };\n        });\n        fill(proto, 'removeEventListener', function (original) {\n            return function (eventName, fn, options) {\n                var callback = fn;\n                try {\n                    callback = callback && (callback.__sentry_wrapped__ || callback);\n                }\n                catch (e) {\n                    // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                }\n                return original.call(this, eventName, callback, options);\n            };\n        });\n    };\n    /**\n     * Wrap timer functions and event targets to catch errors\n     * and provide better metadata.\n     */\n    TryCatch.prototype.setupOnce = function () {\n        this._ignoreOnError = this._ignoreOnError;\n        var global = getGlobalObject();\n        fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n        fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n        fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n        [\n            'EventTarget',\n            'Window',\n            'Node',\n            'ApplicationCache',\n            'AudioTrackList',\n            'ChannelMergerNode',\n            'CryptoOperation',\n            'EventSource',\n            'FileReader',\n            'HTMLUnknownElement',\n            'IDBDatabase',\n            'IDBRequest',\n            'IDBTransaction',\n            'KeyOperation',\n            'MediaController',\n            'MessagePort',\n            'ModalWindow',\n            'Notification',\n            'SVGElementInstance',\n            'Screen',\n            'TextTrack',\n            'TextTrackCue',\n            'TextTrackList',\n            'WebSocket',\n            'WebSocketWorker',\n            'Worker',\n            'XMLHttpRequest',\n            'XMLHttpRequestEventTarget',\n            'XMLHttpRequestUpload',\n        ].forEach(this._wrapEventTarget.bind(this));\n    };\n    /**\n     * @inheritDoc\n     */\n    TryCatch.id = 'TryCatch';\n    return TryCatch;\n}());\nexport { TryCatch };\n/**\n * Safely extract function name from itself\n */\nfunction getFunctionName(fn) {\n    try {\n        return (fn && fn.name) || '<anonymous>';\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        return '<anonymous>';\n    }\n}\n//# sourceMappingURL=trycatch.js.map","import * as tslib_1 from \"tslib\";\nimport { API, getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { fill, getEventDescription, getGlobalObject, isString, logger, normalize, parseUrl, safeJoin, supportsHistory, supportsNativeFetch, } from '@sentry/utils';\nimport { breadcrumbEventHandler, keypressEventHandler, wrap } from '../helpers';\nvar global = getGlobalObject();\nvar lastHref;\n/** Default Breadcrumbs instrumentations */\nvar Breadcrumbs = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function Breadcrumbs(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = Breadcrumbs.id;\n        this._options = tslib_1.__assign({ console: true, dom: true, fetch: true, history: true, sentry: true, xhr: true }, options);\n    }\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentConsole = function () {\n        if (!('console' in global)) {\n            return;\n        }\n        ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n            if (!(level in global.console)) {\n                return;\n            }\n            fill(global.console, level, function (originalConsoleLevel) {\n                return function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var breadcrumbData = {\n                        category: 'console',\n                        data: {\n                            extra: {\n                                arguments: normalize(args, 3),\n                            },\n                            logger: 'console',\n                        },\n                        level: Severity.fromString(level),\n                        message: safeJoin(args, ' '),\n                    };\n                    if (level === 'assert') {\n                        if (args[0] === false) {\n                            breadcrumbData.message = \"Assertion failed: \" + (safeJoin(args.slice(1), ' ') || 'console.assert');\n                            breadcrumbData.data.extra.arguments = normalize(args.slice(1), 3);\n                        }\n                    }\n                    Breadcrumbs.addBreadcrumb(breadcrumbData, {\n                        input: args,\n                        level: level,\n                    });\n                    // this fails for some browsers. :(\n                    if (originalConsoleLevel) {\n                        Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n                    }\n                };\n            });\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentDOM = function () {\n        if (!('document' in global)) {\n            return;\n        }\n        // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n        // to the document. Do this before we instrument addEventListener.\n        global.document.addEventListener('click', breadcrumbEventHandler('click'), false);\n        global.document.addEventListener('keypress', keypressEventHandler(), false);\n        // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n        ['EventTarget', 'Node'].forEach(function (target) {\n            var proto = global[target] && global[target].prototype;\n            if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n                return;\n            }\n            fill(proto, 'addEventListener', function (original) {\n                return function (eventName, fn, options) {\n                    if (fn && fn.handleEvent) {\n                        if (eventName === 'click') {\n                            fill(fn, 'handleEvent', function (innerOriginal) {\n                                return function (event) {\n                                    breadcrumbEventHandler('click')(event);\n                                    return innerOriginal.call(this, event);\n                                };\n                            });\n                        }\n                        if (eventName === 'keypress') {\n                            fill(fn, 'handleEvent', keypressEventHandler());\n                        }\n                    }\n                    else {\n                        if (eventName === 'click') {\n                            breadcrumbEventHandler('click', true)(this);\n                        }\n                        if (eventName === 'keypress') {\n                            keypressEventHandler()(this);\n                        }\n                    }\n                    return original.call(this, eventName, fn, options);\n                };\n            });\n            fill(proto, 'removeEventListener', function (original) {\n                return function (eventName, fn, options) {\n                    var callback = fn;\n                    try {\n                        callback = callback && (callback.__sentry_wrapped__ || callback);\n                    }\n                    catch (e) {\n                        // ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n                    }\n                    return original.call(this, eventName, callback, options);\n                };\n            });\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentFetch = function () {\n        if (!supportsNativeFetch()) {\n            return;\n        }\n        fill(global, 'fetch', function (originalFetch) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var fetchInput = args[0];\n                var method = 'GET';\n                var url;\n                if (typeof fetchInput === 'string') {\n                    url = fetchInput;\n                }\n                else if ('Request' in global && fetchInput instanceof Request) {\n                    url = fetchInput.url;\n                    if (fetchInput.method) {\n                        method = fetchInput.method;\n                    }\n                }\n                else {\n                    url = String(fetchInput);\n                }\n                if (args[1] && args[1].method) {\n                    method = args[1].method;\n                }\n                var client = getCurrentHub().getClient();\n                var dsn = client && client.getDsn();\n                if (dsn) {\n                    var filterUrl = new API(dsn).getStoreEndpoint();\n                    // if Sentry key appears in URL, don't capture it as a request\n                    // but rather as our own 'sentry' type breadcrumb\n                    if (filterUrl && url.includes(filterUrl)) {\n                        if (method === 'POST' && args[1] && args[1].body) {\n                            addSentryBreadcrumb(args[1].body);\n                        }\n                        return originalFetch.apply(global, args);\n                    }\n                }\n                var fetchData = {\n                    method: method,\n                    url: url,\n                };\n                return originalFetch\n                    .apply(global, args)\n                    .then(function (response) {\n                    fetchData.status_code = response.status;\n                    Breadcrumbs.addBreadcrumb({\n                        category: 'fetch',\n                        data: fetchData,\n                        type: 'http',\n                    }, {\n                        input: args,\n                        response: response,\n                    });\n                    return response;\n                })\n                    .catch(function (error) {\n                    Breadcrumbs.addBreadcrumb({\n                        category: 'fetch',\n                        data: fetchData,\n                        level: Severity.Error,\n                        type: 'http',\n                    }, {\n                        error: error,\n                        input: args,\n                    });\n                    throw error;\n                });\n            };\n        });\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentHistory = function () {\n        var _this = this;\n        if (!supportsHistory()) {\n            return;\n        }\n        var captureUrlChange = function (from, to) {\n            var parsedLoc = parseUrl(global.location.href);\n            var parsedTo = parseUrl(to);\n            var parsedFrom = parseUrl(from);\n            // Initial pushState doesn't provide `from` information\n            if (!parsedFrom.path) {\n                parsedFrom = parsedLoc;\n            }\n            // because onpopstate only tells you the \"new\" (to) value of location.href, and\n            // not the previous (from) value, we need to track the value of the current URL\n            // state ourselves\n            lastHref = to;\n            // Use only the path component of the URL if the URL matches the current\n            // document (almost all the time when using pushState)\n            if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                to = parsedTo.relative;\n            }\n            if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n                // tslint:disable-next-line:no-parameter-reassignment\n                from = parsedFrom.relative;\n            }\n            Breadcrumbs.addBreadcrumb({\n                category: 'navigation',\n                data: {\n                    from: from,\n                    to: to,\n                },\n            });\n        };\n        // record navigation (URL) changes\n        var oldOnPopState = global.onpopstate;\n        global.onpopstate = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var currentHref = global.location.href;\n            captureUrlChange(lastHref, currentHref);\n            if (oldOnPopState) {\n                return oldOnPopState.apply(_this, args);\n            }\n        };\n        /**\n         * @hidden\n         */\n        function historyReplacementFunction(originalHistoryFunction) {\n            // note history.pushState.length is 0; intentionally not declaring\n            // params to preserve 0 arity\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args.length > 2 ? args[2] : undefined;\n                // url argument is optional\n                if (url) {\n                    // coerce to string (this is what pushState does)\n                    captureUrlChange(lastHref, String(url));\n                }\n                return originalHistoryFunction.apply(this, args);\n            };\n        }\n        fill(global.history, 'pushState', historyReplacementFunction);\n        fill(global.history, 'replaceState', historyReplacementFunction);\n    };\n    /** JSDoc */\n    Breadcrumbs.prototype._instrumentXHR = function () {\n        if (!('XMLHttpRequest' in global)) {\n            return;\n        }\n        /**\n         * @hidden\n         */\n        function wrapProp(prop, xhr) {\n            // TODO: Fix XHR types\n            if (prop in xhr && typeof xhr[prop] === 'function') {\n                fill(xhr, prop, function (original) {\n                    return wrap(original, {\n                        mechanism: {\n                            data: {\n                                function: prop,\n                                handler: (original && original.name) || '<anonymous>',\n                            },\n                            handled: true,\n                            type: 'instrument',\n                        },\n                    });\n                });\n            }\n        }\n        var xhrproto = XMLHttpRequest.prototype;\n        fill(xhrproto, 'open', function (originalOpen) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var url = args[1];\n                this.__sentry_xhr__ = {\n                    method: args[0],\n                    url: args[1],\n                };\n                var client = getCurrentHub().getClient();\n                var dsn = client && client.getDsn();\n                if (dsn) {\n                    var filterUrl = new API(dsn).getStoreEndpoint();\n                    // if Sentry key appears in URL, don't capture it as a request\n                    // but rather as our own 'sentry' type breadcrumb\n                    if (isString(url) && (filterUrl && url.includes(filterUrl))) {\n                        this.__sentry_own_request__ = true;\n                    }\n                }\n                return originalOpen.apply(this, args);\n            };\n        });\n        fill(xhrproto, 'send', function (originalSend) {\n            return function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var xhr = this; // tslint:disable-line:no-this-assignment\n                if (xhr.__sentry_own_request__) {\n                    addSentryBreadcrumb(args[0]);\n                }\n                /**\n                 * @hidden\n                 */\n                function onreadystatechangeHandler() {\n                    if (xhr.readyState === 4) {\n                        if (xhr.__sentry_own_request__) {\n                            return;\n                        }\n                        try {\n                            // touching statusCode in some platforms throws\n                            // an exception\n                            if (xhr.__sentry_xhr__) {\n                                xhr.__sentry_xhr__.status_code = xhr.status;\n                            }\n                        }\n                        catch (e) {\n                            /* do nothing */\n                        }\n                        Breadcrumbs.addBreadcrumb({\n                            category: 'xhr',\n                            data: xhr.__sentry_xhr__,\n                            type: 'http',\n                        }, {\n                            xhr: xhr,\n                        });\n                    }\n                }\n                ['onload', 'onerror', 'onprogress'].forEach(function (prop) {\n                    wrapProp(prop, xhr);\n                });\n                if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n                    fill(xhr, 'onreadystatechange', function (original) {\n                        return wrap(original, {\n                            mechanism: {\n                                data: {\n                                    function: 'onreadystatechange',\n                                    handler: (original && original.name) || '<anonymous>',\n                                },\n                                handled: true,\n                                type: 'instrument',\n                            },\n                        }, onreadystatechangeHandler);\n                    });\n                }\n                else {\n                    // if onreadystatechange wasn't actually set by the page on this xhr, we\n                    // are free to set our own and capture the breadcrumb\n                    xhr.onreadystatechange = onreadystatechangeHandler;\n                }\n                return originalSend.apply(this, args);\n            };\n        });\n    };\n    /**\n     * Helper that checks if integration is enabled on the client.\n     * @param breadcrumb Breadcrumb\n     * @param hint BreadcrumbHint\n     */\n    Breadcrumbs.addBreadcrumb = function (breadcrumb, hint) {\n        if (getCurrentHub().getIntegration(Breadcrumbs)) {\n            getCurrentHub().addBreadcrumb(breadcrumb, hint);\n        }\n    };\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - Console API\n     *  - DOM API (click/typing)\n     *  - XMLHttpRequest API\n     *  - Fetch API\n     *  - History API\n     */\n    Breadcrumbs.prototype.setupOnce = function () {\n        if (this._options.console) {\n            this._instrumentConsole();\n        }\n        if (this._options.dom) {\n            this._instrumentDOM();\n        }\n        if (this._options.xhr) {\n            this._instrumentXHR();\n        }\n        if (this._options.fetch) {\n            this._instrumentFetch();\n        }\n        if (this._options.history) {\n            this._instrumentHistory();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Breadcrumbs.id = 'Breadcrumbs';\n    return Breadcrumbs;\n}());\nexport { Breadcrumbs };\n/** JSDoc */\nfunction addSentryBreadcrumb(serializedData) {\n    // There's always something that can go wrong with deserialization...\n    try {\n        var event_1 = JSON.parse(serializedData);\n        Breadcrumbs.addBreadcrumb({\n            category: 'sentry',\n            event_id: event_1.event_id,\n            level: event_1.level || Severity.fromString('error'),\n            message: getEventDescription(event_1),\n        }, {\n            event: event_1,\n        });\n    }\n    catch (_oO) {\n        logger.error('Error while adding sentry type breadcrumb');\n    }\n}\n//# sourceMappingURL=breadcrumbs.js.map","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/core';\nimport { addExceptionTypeValue, isString, logger, normalize, truncate } from '@sentry/utils';\nimport { shouldIgnoreOnError } from '../helpers';\nimport { eventFromStacktrace } from '../parsers';\nimport { _installGlobalHandler, _installGlobalUnhandledRejectionHandler, _subscribe, } from '../tracekit';\n/** Global handlers */\nvar GlobalHandlers = /** @class */ (function () {\n    /** JSDoc */\n    function GlobalHandlers(options) {\n        /**\n         * @inheritDoc\n         */\n        this.name = GlobalHandlers.id;\n        this._options = tslib_1.__assign({ onerror: true, onunhandledrejection: true }, options);\n    }\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.prototype.setupOnce = function () {\n        Error.stackTraceLimit = 50;\n        _subscribe(function (stack, _, error) {\n            // TODO: use stack.context to get a valuable information from TraceKit, eg.\n            // [\n            //   0: \"  })\"\n            //   1: \"\"\n            //   2: \"  function foo () {\"\n            //   3: \"    Sentry.captureException('some error')\"\n            //   4: \"    Sentry.captureMessage('some message')\"\n            //   5: \"    throw 'foo'\"\n            //   6: \"  }\"\n            //   7: \"\"\n            //   8: \"  function bar () {\"\n            //   9: \"    foo();\"\n            //   10: \"  }\"\n            // ]\n            if (shouldIgnoreOnError()) {\n                return;\n            }\n            var self = getCurrentHub().getIntegration(GlobalHandlers);\n            if (self) {\n                getCurrentHub().captureEvent(self._eventFromGlobalHandler(stack), {\n                    data: { stack: stack },\n                    originalException: error,\n                });\n            }\n        });\n        if (this._options.onerror) {\n            logger.log('Global Handler attached: onerror');\n            _installGlobalHandler();\n        }\n        if (this._options.onunhandledrejection) {\n            logger.log('Global Handler attached: onunhandledrejection');\n            _installGlobalUnhandledRejectionHandler();\n        }\n    };\n    /**\n     * This function creates an Event from an TraceKitStackTrace.\n     *\n     * @param stacktrace TraceKitStackTrace to be converted to an Event.\n     */\n    GlobalHandlers.prototype._eventFromGlobalHandler = function (stacktrace) {\n        if (!isString(stacktrace.message) && stacktrace.mechanism !== 'onunhandledrejection') {\n            // There are cases where stacktrace.message is an Event object\n            // https://github.com/getsentry/sentry-javascript/issues/1949\n            // In this specific case we try to extract stacktrace.message.error.message\n            var message = stacktrace.message;\n            stacktrace.message =\n                message.error && isString(message.error.message) ? message.error.message : 'No error message';\n        }\n        var event = eventFromStacktrace(stacktrace);\n        var data = {\n            mode: stacktrace.mode,\n        };\n        if (stacktrace.message) {\n            data.message = stacktrace.message;\n        }\n        if (stacktrace.name) {\n            data.name = stacktrace.name;\n        }\n        var client = getCurrentHub().getClient();\n        var maxValueLength = (client && client.getOptions().maxValueLength) || 250;\n        var fallbackValue = stacktrace.original\n            ? truncate(JSON.stringify(normalize(stacktrace.original)), maxValueLength)\n            : '';\n        var fallbackType = stacktrace.mechanism === 'onunhandledrejection' ? 'UnhandledRejection' : 'Error';\n        // This makes sure we have type/value in every exception\n        addExceptionTypeValue(event, fallbackValue, fallbackType, {\n            data: data,\n            handled: false,\n            type: stacktrace.mechanism,\n        });\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    GlobalHandlers.id = 'GlobalHandlers';\n    return GlobalHandlers;\n}());\nexport { GlobalHandlers };\n//# sourceMappingURL=globalhandlers.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { _computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\nvar LinkedErrors = /** @class */ (function () {\n    /**\n     * @inheritDoc\n     */\n    function LinkedErrors(options) {\n        if (options === void 0) { options = {}; }\n        /**\n         * @inheritDoc\n         */\n        this.name = LinkedErrors.id;\n        this._key = options.key || DEFAULT_KEY;\n        this._limit = options.limit || DEFAULT_LIMIT;\n    }\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event, hint) {\n            var self = getCurrentHub().getIntegration(LinkedErrors);\n            if (self) {\n                return self._handler(event, hint);\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._handler = function (event, hint) {\n        if (!event.exception || !event.exception.values || !hint || !(hint.originalException instanceof Error)) {\n            return event;\n        }\n        var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n        event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\n        return event;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n        if (stack === void 0) { stack = []; }\n        if (!(error[key] instanceof Error) || stack.length + 1 >= this._limit) {\n            return stack;\n        }\n        var stacktrace = _computeStackTrace(error[key]);\n        var exception = exceptionFromStacktrace(stacktrace);\n        return this._walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\n    };\n    /**\n     * @inheritDoc\n     */\n    LinkedErrors.id = 'LinkedErrors';\n    return LinkedErrors;\n}());\nexport { LinkedErrors };\n//# sourceMappingURL=linkederrors.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\nvar UserAgent = /** @class */ (function () {\n    function UserAgent() {\n        /**\n         * @inheritDoc\n         */\n        this.name = UserAgent.id;\n    }\n    /**\n     * @inheritDoc\n     */\n    UserAgent.prototype.setupOnce = function () {\n        addGlobalEventProcessor(function (event) {\n            if (getCurrentHub().getIntegration(UserAgent)) {\n                if (!global.navigator || !global.location) {\n                    return event;\n                }\n                // HTTP Interface: https://docs.sentry.io/clientdev/interfaces/http/?platform=javascript\n                var request = event.request || {};\n                request.url = request.url || global.location.href;\n                request.headers = request.headers || {};\n                request.headers['User-Agent'] = global.navigator.userAgent;\n                return tslib_1.__assign({}, event, { request: request });\n            }\n            return event;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    UserAgent.id = 'UserAgent';\n    return UserAgent;\n}());\nexport { UserAgent };\n//# sourceMappingURL=useragent.js.map","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\nexport function initAndBind(clientClass, options) {\n    if (options.debug === true) {\n        logger.enable();\n    }\n    getCurrentHub().bindClient(new clientClass(options));\n}\n//# sourceMappingURL=sdk.js.map","import * as tslib_1 from \"tslib\";\nexport { Severity, Status, } from '@sentry/types';\nexport { addGlobalEventProcessor, addBreadcrumb, captureException, captureEvent, captureMessage, configureScope, getHubFromCarrier, getCurrentHub, Hub, Scope, setContext, setExtra, setExtras, setTag, setTags, setUser, withScope, } from '@sentry/core';\nexport { BrowserClient } from './client';\nexport { defaultIntegrations, forceLoad, init, lastEventId, onLoad, showReportDialog, flush, close, wrap } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\nvar windowIntegrations = {};\n// This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\nvar _window = getGlobalObject();\nif (_window.Sentry && _window.Sentry.Integrations) {\n    windowIntegrations = _window.Sentry.Integrations;\n}\n// tslint:enable: no-unsafe-any\nvar INTEGRATIONS = tslib_1.__assign({}, windowIntegrations, CoreIntegrations, BrowserIntegrations);\nexport { INTEGRATIONS as Integrations, Transports };\n//# sourceMappingURL=index.js.map","export { GlobalHandlers } from './globalhandlers';\nexport { TryCatch } from './trycatch';\nexport { Breadcrumbs } from './breadcrumbs';\nexport { LinkedErrors } from './linkederrors';\nexport { UserAgent } from './useragent';\n//# sourceMappingURL=index.js.map","import { getGlobalObject } from './misc';\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsErrorEvent() {\n    try {\n        // tslint:disable:no-unused-expression\n        new ErrorEvent('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMError() {\n    try {\n        // It really needs 1 argument, not 0.\n        // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n        // 1 argument required, but only 0 present.\n        // @ts-ignore\n        // tslint:disable:no-unused-expression\n        new DOMError('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsDOMException() {\n    try {\n        // tslint:disable:no-unused-expression\n        new DOMException('');\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsFetch() {\n    if (!('fetch' in getGlobalObject())) {\n        return false;\n    }\n    try {\n        // tslint:disable-next-line:no-unused-expression\n        new Headers();\n        // tslint:disable-next-line:no-unused-expression\n        new Request('');\n        // tslint:disable-next-line:no-unused-expression\n        new Response();\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsNativeFetch() {\n    if (!supportsFetch()) {\n        return false;\n    }\n    var global = getGlobalObject();\n    return global.fetch.toString().indexOf('native') !== -1;\n}\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReportingObserver() {\n    // tslint:disable-next-line: no-unsafe-any\n    return 'ReportingObserver' in getGlobalObject();\n}\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsReferrerPolicy() {\n    // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n    // https://caniuse.com/#feat=referrer-policy\n    // It doesn't. And it throw exception instead of ignoring this parameter...\n    // REF: https://github.com/getsentry/raven-js/issues/1233\n    if (!supportsFetch()) {\n        return false;\n    }\n    try {\n        // tslint:disable:no-unused-expression\n        new Request('_', {\n            referrerPolicy: 'origin',\n        });\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\nexport function supportsHistory() {\n    // NOTE: in Chrome App environment, touching history.pushState, *even inside\n    //       a try/catch block*, will cause Chrome to output an error to console.error\n    // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n    var global = getGlobalObject();\n    var chrome = global.chrome;\n    // tslint:disable-next-line:no-unsafe-any\n    var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n    var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n    return !isChromePackagedApp && hasHistoryApi;\n}\n//# sourceMappingURL=supports.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { getGlobalObject, supportsReferrerPolicy } from '@sentry/utils';\nimport { BaseTransport } from './base';\nvar global = getGlobalObject();\n/** `fetch` based transport */\nvar FetchTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(FetchTransport, _super);\n    function FetchTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    FetchTransport.prototype.sendEvent = function (event) {\n        var defaultOptions = {\n            body: JSON.stringify(event),\n            method: 'POST',\n            // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n            // https://caniuse.com/#feat=referrer-policy\n            // It doesn't. And it throw exception instead of ignoring this parameter...\n            // REF: https://github.com/getsentry/raven-js/issues/1233\n            referrerPolicy: (supportsReferrerPolicy() ? 'origin' : ''),\n        };\n        return this._buffer.add(global.fetch(this.url, defaultOptions).then(function (response) { return ({\n            status: Status.fromHttpCode(response.status),\n        }); }));\n    };\n    return FetchTransport;\n}(BaseTransport));\nexport { FetchTransport };\n//# sourceMappingURL=fetch.js.map","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\nvar XHRTransport = /** @class */ (function (_super) {\n    tslib_1.__extends(XHRTransport, _super);\n    function XHRTransport() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XHRTransport.prototype.sendEvent = function (event) {\n        var _this = this;\n        return this._buffer.add(new Promise(function (resolve, reject) {\n            var request = new XMLHttpRequest();\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                if (request.status === 200) {\n                    resolve({\n                        status: Status.fromHttpCode(request.status),\n                    });\n                }\n                reject(request);\n            };\n            request.open('POST', _this.url);\n            request.send(JSON.stringify(event));\n        }));\n    };\n    return XHRTransport;\n}(BaseTransport));\nexport { XHRTransport };\n//# sourceMappingURL=xhr.js.map","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\nvar BaseBackend = /** @class */ (function () {\n    /** Creates a new backend instance. */\n    function BaseBackend(options) {\n        this._options = options;\n        if (!this._options.dsn) {\n            logger.warn('No DSN provided, backend will not do anything.');\n        }\n        this._transport = this._setupTransport();\n    }\n    /**\n     * Sets up the transport so it can be used later to send requests.\n     */\n    BaseBackend.prototype._setupTransport = function () {\n        return new NoopTransport();\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n        throw new SentryError('Backend has to implement `eventFromException` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n        throw new SentryError('Backend has to implement `eventFromMessage` method');\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.sendEvent = function (event) {\n        this._transport.sendEvent(event).catch(function (reason) {\n            logger.error(\"Error while sending event: \" + reason);\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseBackend.prototype.getTransport = function () {\n        return this._transport;\n    };\n    return BaseBackend;\n}());\nexport { BaseBackend };\n//# sourceMappingURL=basebackend.js.map","import * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/** Gets integration to install */\nexport function getIntegrationsToSetup(options) {\n    var defaultIntegrations = (options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations)) || [];\n    var userIntegrations = options.integrations;\n    var integrations = [];\n    if (Array.isArray(userIntegrations)) {\n        var userIntegrationsNames_1 = userIntegrations.map(function (i) { return i.name; });\n        var pickedIntegrationsNames_1 = [];\n        // Leave only unique default integrations, that were not overridden with provided user integrations\n        defaultIntegrations.forEach(function (defaultIntegration) {\n            if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 &&\n                pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n                integrations.push(defaultIntegration);\n                pickedIntegrationsNames_1.push(defaultIntegration.name);\n            }\n        });\n        // Don't add same user integration twice\n        userIntegrations.forEach(function (userIntegration) {\n            if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n                integrations.push(userIntegration);\n                pickedIntegrationsNames_1.push(userIntegration.name);\n            }\n        });\n    }\n    else if (typeof userIntegrations === 'function') {\n        integrations = userIntegrations(defaultIntegrations);\n        integrations = Array.isArray(integrations) ? integrations : [integrations];\n    }\n    else {\n        return tslib_1.__spread(defaultIntegrations);\n    }\n    return integrations;\n}\n/** Setup given integration */\nexport function setupIntegration(integration) {\n    if (installedIntegrations.indexOf(integration.name) !== -1) {\n        return;\n    }\n    integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n    installedIntegrations.push(integration.name);\n    logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\nexport function setupIntegrations(options) {\n    var integrations = {};\n    getIntegrationsToSetup(options).forEach(function (integration) {\n        integrations[integration.name] = integration;\n        setupIntegration(integration);\n    });\n    return integrations;\n}\n//# sourceMappingURL=integration.js.map","import * as tslib_1 from \"tslib\";\nimport { isPrimitive, isThenable, logger, SyncPromise, truncate, uuid4 } from '@sentry/utils';\nimport { Dsn } from './dsn';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\nvar BaseClient = /** @class */ (function () {\n    /**\n     * Initializes this client instance.\n     *\n     * @param backendClass A constructor function to create the backend.\n     * @param options Options for the client.\n     */\n    function BaseClient(backendClass, options) {\n        /** Is the client still processing a call? */\n        this._processing = false;\n        this._backend = new backendClass(options);\n        this._options = options;\n        if (options.dsn) {\n            this._dsn = new Dsn(options.dsn);\n        }\n        this._integrations = setupIntegrations(this._options);\n    }\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureException = function (exception, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._getBackend()\n            .eventFromException(exception, hint)\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .catch(function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        var promisedEvent = isPrimitive(message)\n            ? this._getBackend().eventFromMessage(\"\" + message, level, hint)\n            : this._getBackend().eventFromException(message, hint);\n        promisedEvent\n            .then(function (event) { return _this._processEvent(event, hint, scope); })\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .catch(function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.captureEvent = function (event, hint, scope) {\n        var _this = this;\n        var eventId = hint && hint.event_id;\n        this._processing = true;\n        this._processEvent(event, hint, scope)\n            .then(function (finalEvent) {\n            // We need to check for finalEvent in case beforeSend returned null\n            eventId = finalEvent && finalEvent.event_id;\n            _this._processing = false;\n        })\n            .catch(function (reason) {\n            logger.error(reason);\n            _this._processing = false;\n        });\n        return eventId;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getDsn = function () {\n        return this._dsn;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getOptions = function () {\n        return this._options;\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.flush = function (timeout) {\n        var _this = this;\n        return this._isClientProcessing(timeout).then(function (clientReady) {\n            if (_this._processingInterval) {\n                clearInterval(_this._processingInterval);\n            }\n            return _this._getBackend()\n                .getTransport()\n                .close(timeout)\n                .then(function (transportFlushed) { return clientReady && transportFlushed; });\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.close = function (timeout) {\n        var _this = this;\n        return this.flush(timeout).then(function (result) {\n            _this.getOptions().enabled = false;\n            return result;\n        });\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegrations = function () {\n        return this._integrations || {};\n    };\n    /**\n     * @inheritDoc\n     */\n    BaseClient.prototype.getIntegration = function (integration) {\n        try {\n            return this._integrations[integration.id] || null;\n        }\n        catch (_oO) {\n            logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n            return null;\n        }\n    };\n    /** Waits for the client to be done with processing. */\n    BaseClient.prototype._isClientProcessing = function (timeout) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var ticked = 0;\n            var tick = 1;\n            if (_this._processingInterval) {\n                clearInterval(_this._processingInterval);\n            }\n            _this._processingInterval = setInterval(function () {\n                if (!_this._processing) {\n                    resolve(true);\n                }\n                else {\n                    ticked += tick;\n                    if (timeout && ticked >= timeout) {\n                        resolve(false);\n                    }\n                }\n            }, tick);\n        });\n    };\n    /** Returns the current backend. */\n    BaseClient.prototype._getBackend = function () {\n        return this._backend;\n    };\n    /** Determines whether this SDK is enabled and a valid Dsn is present. */\n    BaseClient.prototype._isEnabled = function () {\n        return this.getOptions().enabled !== false && this._dsn !== undefined;\n    };\n    /**\n     * Adds common information to events.\n     *\n     * The information includes release and environment from `options`,\n     * breadcrumbs and context (extra, tags and user) from the scope.\n     *\n     * Information that is already present in the event is never overwritten. For\n     * nested objects, such as the context, keys are merged.\n     *\n     * @param event The original event.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A new event with more information.\n     */\n    BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n        var _a = this.getOptions(), environment = _a.environment, release = _a.release, dist = _a.dist, _b = _a.maxValueLength, maxValueLength = _b === void 0 ? 250 : _b;\n        var prepared = tslib_1.__assign({}, event);\n        if (prepared.environment === undefined && environment !== undefined) {\n            prepared.environment = environment;\n        }\n        if (prepared.release === undefined && release !== undefined) {\n            prepared.release = release;\n        }\n        if (prepared.dist === undefined && dist !== undefined) {\n            prepared.dist = dist;\n        }\n        if (prepared.message) {\n            prepared.message = truncate(prepared.message, maxValueLength);\n        }\n        var exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n        if (exception && exception.value) {\n            exception.value = truncate(exception.value, maxValueLength);\n        }\n        var request = prepared.request;\n        if (request && request.url) {\n            request.url = truncate(request.url, maxValueLength);\n        }\n        if (prepared.event_id === undefined) {\n            prepared.event_id = uuid4();\n        }\n        this._addIntegrations(prepared.sdk);\n        // We prepare the result here with a resolved Event.\n        var result = SyncPromise.resolve(prepared);\n        // This should be the last thing called, since we want that\n        // {@link Hub.addEventProcessor} gets the finished prepared event.\n        if (scope) {\n            // In case we have a hub we reassign it.\n            result = scope.applyToEvent(prepared, hint);\n        }\n        return result;\n    };\n    /**\n     * This function adds all used integrations to the SDK info in the event.\n     * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n     */\n    BaseClient.prototype._addIntegrations = function (sdkInfo) {\n        var integrationsArray = Object.keys(this._integrations);\n        if (sdkInfo && integrationsArray.length > 0) {\n            sdkInfo.integrations = integrationsArray;\n        }\n    };\n    /**\n     * Processes an event (either error or message) and sends it to Sentry.\n     *\n     * This also adds breadcrumbs and context information to the event. However,\n     * platform specific meta data (such as the User's IP address) must be added\n     * by the SDK implementor.\n     *\n     *\n     * @param event The event to send to Sentry.\n     * @param hint May contain additional informartion about the original exception.\n     * @param scope A scope containing event metadata.\n     * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n     */\n    BaseClient.prototype._processEvent = function (event, hint, scope) {\n        var _this = this;\n        var _a = this.getOptions(), beforeSend = _a.beforeSend, sampleRate = _a.sampleRate;\n        if (!this._isEnabled()) {\n            return SyncPromise.reject('SDK not enabled, will not send event.');\n        }\n        // 1.0 === 100% events are sent\n        // 0.0 === 0% events are sent\n        if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n            return SyncPromise.reject('This event has been sampled, will not send event.');\n        }\n        return new SyncPromise(function (resolve, reject) {\n            _this._prepareEvent(event, scope, hint).then(function (prepared) {\n                if (prepared === null) {\n                    reject('An event processor returned null, will not send event.');\n                    return;\n                }\n                var finalEvent = prepared;\n                try {\n                    var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n                    if (isInternalException || !beforeSend) {\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                        return;\n                    }\n                    var beforeSendResult = beforeSend(prepared, hint);\n                    if (typeof beforeSendResult === 'undefined') {\n                        logger.error('`beforeSend` method has to return `null` or a valid event.');\n                    }\n                    else if (isThenable(beforeSendResult)) {\n                        _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n                    }\n                    else {\n                        finalEvent = beforeSendResult;\n                        if (finalEvent === null) {\n                            logger.log('`beforeSend` returned `null`, will not send event.');\n                            resolve(null);\n                            return;\n                        }\n                        // From here on we are really async\n                        _this._getBackend().sendEvent(finalEvent);\n                        resolve(finalEvent);\n                    }\n                }\n                catch (exception) {\n                    _this.captureException(exception, {\n                        data: {\n                            __sentry__: true,\n                        },\n                        originalException: exception,\n                    });\n                    reject('`beforeSend` throw an error, will not send event.');\n                }\n            });\n        });\n    };\n    /**\n     * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n     */\n    BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n        var _this = this;\n        beforeSend\n            .then(function (processedEvent) {\n            if (processedEvent === null) {\n                reject('`beforeSend` returned `null`, will not send event.');\n                return;\n            }\n            // From here on we are really async\n            _this._getBackend().sendEvent(processedEvent);\n            resolve(processedEvent);\n        })\n            .catch(function (e) {\n            reject(\"beforeSend rejected with \" + e);\n        });\n    };\n    return BaseClient;\n}());\nexport { BaseClient };\n//# sourceMappingURL=baseclient.js.map","// tslint:disable:no-unsafe-any\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nvar Memo = /** @class */ (function () {\n    function Memo() {\n        // tslint:disable-next-line\n        this._hasWeakSet = typeof WeakSet === 'function';\n        this._inner = this._hasWeakSet ? new WeakSet() : [];\n    }\n    /**\n     * Sets obj to remember.\n     * @param obj Object to remember\n     */\n    Memo.prototype.memoize = function (obj) {\n        if (this._hasWeakSet) {\n            if (this._inner.has(obj)) {\n                return true;\n            }\n            this._inner.add(obj);\n            return false;\n        }\n        // tslint:disable-next-line:prefer-for-of\n        for (var i = 0; i < this._inner.length; i++) {\n            var value = this._inner[i];\n            if (value === obj) {\n                return true;\n            }\n        }\n        this._inner.push(obj);\n        return false;\n    };\n    /**\n     * Removes object from internal storage.\n     * @param obj Object to forget\n     */\n    Memo.prototype.unmemoize = function (obj) {\n        if (this._hasWeakSet) {\n            this._inner.delete(obj);\n        }\n        else {\n            for (var i = 0; i < this._inner.length; i++) {\n                if (this._inner[i] === obj) {\n                    this._inner.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    return Memo;\n}());\nexport { Memo };\n//# sourceMappingURL=memo.js.map","/*\nOkay, something weird happened : let Sentry prompt the user for details\n*/\n\nimport * as Sentry from '@sentry/browser';\n\nif (process.env.MIX_SENTRY_DSN) {\n    Sentry.init({ dsn: process.env.MIX_SENTRY_DSN });\n    window.Sentry = Sentry;\n}\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import { isThenable } from './is';\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n    /** Pending */\n    States[\"PENDING\"] = \"PENDING\";\n    /** Resolved / OK */\n    States[\"RESOLVED\"] = \"RESOLVED\";\n    /** Rejected / Error */\n    States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/** JSDoc */\nvar SyncPromise = /** @class */ (function () {\n    function SyncPromise(callback) {\n        var _this = this;\n        /** JSDoc */\n        this._state = States.PENDING;\n        /** JSDoc */\n        this._handlers = [];\n        /** JSDoc */\n        this._resolve = function (value) {\n            _this._setResult(value, States.RESOLVED);\n        };\n        /** JSDoc */\n        this._reject = function (reason) {\n            _this._setResult(reason, States.REJECTED);\n        };\n        /** JSDoc */\n        this._setResult = function (value, state) {\n            if (_this._state !== States.PENDING) {\n                return;\n            }\n            if (isThenable(value)) {\n                value.then(_this._resolve, _this._reject);\n                return;\n            }\n            _this._value = value;\n            _this._state = state;\n            _this._executeHandlers();\n        };\n        /** JSDoc */\n        this._executeHandlers = function () {\n            if (_this._state === States.PENDING) {\n                return;\n            }\n            if (_this._state === States.REJECTED) {\n                // tslint:disable-next-line:no-unsafe-any\n                _this._handlers.forEach(function (h) { return h.onFail && h.onFail(_this._value); });\n            }\n            else {\n                // tslint:disable-next-line:no-unsafe-any\n                _this._handlers.forEach(function (h) { return h.onSuccess && h.onSuccess(_this._value); });\n            }\n            _this._handlers = [];\n            return;\n        };\n        /** JSDoc */\n        this._attachHandler = function (handler) {\n            _this._handlers = _this._handlers.concat(handler);\n            _this._executeHandlers();\n        };\n        try {\n            callback(this._resolve, this._reject);\n        }\n        catch (e) {\n            this._reject(e);\n        }\n    }\n    /** JSDoc */\n    SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n        var _this = this;\n        // public then<U>(onSuccess?: HandlerOnSuccess<T, U>, onFail?: HandlerOnFail<U>): SyncPromise<T | U> {\n        return new SyncPromise(function (resolve, reject) {\n            _this._attachHandler({\n                onFail: function (reason) {\n                    if (!onrejected) {\n                        reject(reason);\n                        return;\n                    }\n                    try {\n                        resolve(onrejected(reason));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n                onSuccess: function (result) {\n                    if (!onfulfilled) {\n                        resolve(result);\n                        return;\n                    }\n                    try {\n                        resolve(onfulfilled(result));\n                        return;\n                    }\n                    catch (e) {\n                        reject(e);\n                        return;\n                    }\n                },\n            });\n        });\n    };\n    /** JSDoc */\n    SyncPromise.prototype.catch = function (onFail) {\n        // tslint:disable-next-line:no-unsafe-any\n        return this.then(function (val) { return val; }, onFail);\n    };\n    /** JSDoc */\n    SyncPromise.prototype.toString = function () {\n        return \"[object SyncPromise]\";\n    };\n    /** JSDoc */\n    SyncPromise.resolve = function (value) {\n        return new SyncPromise(function (resolve) {\n            resolve(value);\n        });\n    };\n    /** JSDoc */\n    SyncPromise.reject = function (reason) {\n        return new SyncPromise(function (_, reject) {\n            reject(reason);\n        });\n    };\n    return SyncPromise;\n}());\nexport { SyncPromise };\n//# sourceMappingURL=syncpromise.js.map"],"sourceRoot":""}